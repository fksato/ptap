{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"overflow",
				"overflow-y\tproperty"
			],
			[
				"tStati",
				"tStatistic_criticalUb"
			],
			[
				"tS",
				"tStatistic_criticalLb"
			],
			[
				"performance",
				"performancePerBag"
			],
			[
				"empirical",
				"empiricalEffectSize"
			],
			[
				"sumPer",
				"sumPerformanceRest"
			],
			[
				"perform",
				"performancePerBag"
			],
			[
				"perof",
				"performancePerBag"
			],
			[
				"infer",
				"infer_load_method"
			],
			[
				"is_",
				"is_buffered"
			],
			[
				"create",
				"createBufferSource"
			],
			[
				"punish",
				"punish_sound"
			],
			[
				"necess",
				"necessaryKeyList"
			],
			[
				"nec",
				"necessaryKeyList"
			],
			[
				"__",
				"__TASK_SEQUENCE_GOES_HERE__"
			],
			[
				"game",
				"GAME"
			],
			[
				"CheckPointer",
				"CheckPointerClass"
			],
			[
				"num",
				"num_elements_in_cache"
			],
			[
				"start",
				"startsWith"
			],
			[
				"Te",
				"TERMINAL_STATE"
			],
			[
				"debugCheck",
				"debugCheckpointSavePath"
			],
			[
				"generate",
				"generate_default_checkpoint"
			],
			[
				"term",
				"TERMINAL_STATE"
			],
			[
				"current",
				"current_stage"
			],
			[
				"distractorBag",
				"distractorBagIdxPool"
			],
			[
				"actionC",
				"actionXCentroids"
			],
			[
				"virtual",
				"virtualPixelsPerInch"
			],
			[
				"scren",
				"screen_virtualPixelsPerInch"
			],
			[
				"stimulus_objectome",
				"stimulus_objectome_flute"
			],
			[
				"stimulus",
				"stimulus_objectome_pineapple"
			],
			[
				"imageBags",
				"check_imageBags"
			],
			[
				"ycent",
				"ycentroid_pixel"
			],
			[
				"fixation",
				"fixationRadius_pixel"
			],
			[
				"last_fi",
				"last_fixation_radius"
			],
			[
				"last_",
				"last_fixation_ycentroid"
			],
			[
				"last_fix",
				"last_fixation_xcentroid"
			],
			[
				"last",
				"last_fixation_radius"
			],
			[
				"periodic_rewa",
				"periodic_reward_interval"
			],
			[
				"transition",
				"transitionCriterionMet"
			],
			[
				"_image",
				"_image_cache"
			],
			[
				"_b",
				"_build_StateBags"
			],
			[
				"worker_id",
				"worker_id_encrypted"
			],
			[
				"bonus_paid_",
				"bonus_paid_unix_timestamp"
			],
			[
				"bonus_amo",
				"bonus_paid_amount_USD"
			],
			[
				"Worker",
				"WorkerID_encrypted"
			],
			[
				"Assignment",
				"AssignmentId"
			],
			[
				"NUM_",
				"TRIAL_NUMBER_FROM_SESSION_START"
			],
			[
				"read",
				"readAsArrayBuffer"
			],
			[
				"current_trial",
				"current_stage_trial_number"
			],
			[
				"test_image",
				"test_images_q"
			],
			[
				"DBX",
				"DBX_REDIRECT_URI_ROOT"
			],
			[
				"Experim",
				"ExperimentFilePath"
			],
			[
				"curre",
				"current_trial_outcome"
			],
			[
				"get",
				"get_juiceRequest_filepath"
			],
			[
				"jucie",
				"juiceChangeRequest"
			],
			[
				"task",
				"TASK_idx"
			],
			[
				"TRIAL",
				"TRIALDATA_SAVE_TIMEOUT_PERIOD_IN_SECONDS"
			],
			[
				"need2",
				"need2loadParameters"
			],
			[
				"Current",
				"CurrentAutomatorStage"
			],
			[
				"Curre",
				"CurrentAutomatorStage"
			],
			[
				"num_train",
				"num_train_per_obj"
			],
			[
				"objA",
				"objAobjB_2_negative_tasks_idx"
			],
			[
				"im1obj",
				"im1objB_2_negative_tasks_idx"
			],
			[
				"objAobjB_2",
				"objAobjB_2_positive_tasks_idx"
			],
			[
				"obj0",
				"obj0_is_correct_and_obj1_is_distractor_trial_idx"
			],
			[
				"obj_2_is",
				"obj_2_is_distractor_idx"
			],
			[
				"tk_2_",
				"tk_2_permuted_idx"
			],
			[
				"random",
				"random_state"
			],
			[
				"c",
				"c"
			],
			[
				"x_novel",
				"x_novel_embedded"
			],
			[
				"x_support",
				"x_support_embedded"
			],
			[
				"drop",
				"dropout_keep_prob"
			],
			[
				"inverse",
				"inverse_mapping"
			],
			[
				"y_novel",
				"y_novel_vectorized"
			],
			[
				"int_label",
				"int_label_space"
			],
			[
				"y_support",
				"y_support_vectorized"
			],
			[
				"exemplars",
				"exemplars_per_class_in_batch"
			],
			[
				"exemplar",
				"exemplars_per_class_in_batch"
			],
			[
				"reuse",
				"reuse_variables"
			],
			[
				"embedde",
				"embedded_x_support"
			],
			[
				"embe",
				"embedded_x_novel"
			],
			[
				"image_resize",
				"image_resize_dims"
			],
			[
				"emb",
				"embedded_support_set"
			],
			[
				"checkpoin",
				"checkpoint_path"
			],
			[
				"check",
				"checkpoint_path"
			],
			[
				"image_resi",
				"image_resize_dims"
			],
			[
				"_train",
				"_train_writer"
			],
			[
				"num_obj",
				"num_obj_dimensions"
			],
			[
				"cell_state",
				"cell_state"
			],
			[
				"_predi",
				"_predictor_constructor"
			],
			[
				"_last",
				"_lastinternalpreds"
			],
			[
				"TaskStream",
				"TaskStreamSampling_RNGseed"
			],
			[
				"qval",
				"qval_test"
			],
			[
				"cheby",
				"chebyshev_polynomials"
			],
			[
				"j",
				"j"
			],
			[
				"_coef",
				"_coef"
			],
			[
				"_laststa",
				"_last_state_val"
			],
			[
				"_lastst",
				"_last_state_val"
			],
			[
				"regress",
				"regression_variables"
			],
			[
				"x_action",
				"x_action_internal"
			],
			[
				"state",
				"state_b"
			],
			[
				"_last_state",
				"_last_state_b"
			],
			[
				"sigma",
				"sigma_grad_numerator"
			],
			[
				"_laststate",
				"_last_state_b"
			],
			[
				"_lastact",
				"_lastaction_value_predictions"
			],
			[
				"_last_st",
				"_last_state_val"
			],
			[
				"_lastaction",
				"_lastactionprob"
			],
			[
				"_last_X",
				"_last_X_mu"
			],
			[
				"_policy",
				"_policy_Xstdev_coef"
			],
			[
				"len",
				"len"
			],
			[
				"_policy_X",
				"_policy_Xmu_coef"
			],
			[
				"num_exem",
				"num_exemplars_per_obj"
			],
			[
				"F",
				"F"
			],
			[
				"reward",
				"reward_sigma_proportion"
			],
			[
				"image",
				"image_x"
			],
			[
				"d",
				"d"
			],
			[
				"trial",
				"trial_number"
			],
			[
				"_acti",
				"_action_2_internallabel_dict"
			],
			[
				"_internal",
				"_internallabels"
			],
			[
				"_inte",
				"_internallabels"
			],
			[
				"_in",
				"_internallabel_2_action_dict"
			],
			[
				"pool",
				"pool_objlabels"
			],
			[
				"typ",
				"typ"
			],
			[
				"target",
				"target_to_image_ratio"
			],
			[
				"IMAGE",
				"IMAGE_SCALE"
			],
			[
				"Task",
				"TaskStream_progressbar"
			],
			[
				"_Task",
				"_TaskStreamIDs"
			],
			[
				"_summ",
				"_summary_stats"
			]
		]
	},
	"buffers":
	[
		{
			"file": "public/mkturk.html",
			"settings":
			{
				"buffer_size": 10637,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 50 files for \"MechanicalTurkInstructionsSplash\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n   45  </div>\n   46  \n   47: <div id=\"MechanicalTurkInstructionsSplash\">\n   48    <span id='InstructionSplashText'> Loading instructions... </span>\n   49:   <button onclick=\"toggleElement(0, 'MechanicalTurkInstructionsSplash'); FLAGS.clicked_close_instructions(true)\" id='CloseInstructionsButton' disabled> Loading... </button>\n   50  </div>\n   51  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_style.css:\n  208  \n  209  \n  210: #MechanicalTurkInstructionsSplash{\n  211    display: table;\n  212    position: absolute;\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_UX.js:\n  154      async showMechanicalTurkInstructions(instructions_text){\n  155    \n  156:     document.getElementById(\"MechanicalTurkInstructionsSplash\").style.visibility = 'visible'\n  157      document.getElementById(\"InstructionSplashText\").innerHTML = instructions_text\n  158  \n\n4 matches across 3 files\n\n\nSearching 50 files for \".buffer_trial\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TrialGenerator.js:\n   49              for (var i_trial = 0; i_trial < num_trials_per_stage_to_prebuffer; i_trial++){\n   50                  var sampleBagName = np.choice(this.taskSequence[t]['sampleBagNames'])\n   51:                 trial_requests.push(this.buffer_trial(t, sampleBagName))\n   52              }\n   53          }\n   ..\n   69  \n   70          if (this.trialBuffer[taskNumber] == undefined){\n   71:             await this.buffer_trial(taskNumber, sampleBagName)\n   72          }\n   73          if (this.trialBuffer[taskNumber][sampleBagName] == undefined){\n   74:             await this.buffer_trial(taskNumber, sampleBagName)\n   75          }\n   76  \n   77          if (this.trialBuffer[taskNumber][sampleBagName].length == 0){\n   78:             await this.buffer_trial(taskNumber, sampleBagName)\n   79          }\n   80  \n   ..\n  265                  for (var t = 0; t < numTrialsToBuffer; t++){\n  266  \n  267:                     trialRequests.push(_this.buffer_trial(_this.taskNumber))\n  268                  }\n  269                  console.log('Buffering', trialRequests.length, 'trials')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/unit_tests.js:\n   36  \n   37      for (var i = 0; i < maxLoad; i++){\n   38:         TaskStreamer.buffer_trial(0)\n   39      }\n   40  \n\n6 matches across 2 files\n\n\nSearching 50 files for \"setup_upstairs\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n   78  \n   79  <script src=\"https://unpkg.com/dropbox/dist/Dropbox-sdk.min.js\"></script>\n   80: <script src=\"setup_upstairs_session.js\" type=\"text/javascript\"></script>\n   81  <script src=\"setup_MechanicalTurk_session.js\" type=\"text/javascript\"></script>\n   82  \n   ..\n  137  }\n  138  else if (sessionPackage['ENVIRONMENT']['rigEnvironment'] == 'monkeybox'){\n  139:   var freturn = await setup_upstairs_session(sessionPackage)\n  140  }\n  141  // error must be happening before this point, \"\\\"TypeError: Cannot read property 'constructor' of undefined\\\"\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n    1: async function setup_upstairs_session(sessionPackage){\n    2  \n    3    GAME_PACKAGE = sessionPackage['GAME_PACKAGE']\n\n3 matches across 2 files\n\n\nSearching 50 files for \"TaskStreamer\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n   89  <script src=\"mkturk_DiskIO.js\" type=\"text/javascript\"></script>\n   90  <script src=\"mkturk_DataWriter.js\" type=\"text/javascript\"></script>\n   91: <script src=\"mkturk_TaskStreamer.js\" type=\"text/javascript\"></script>\n   92  <script src=\"mkturk_UX.js\" type=\"text/javascript\"></script>\n   93  <script src=\"mkturk_CheckPointer.js\" type=\"text/javascript\"></script>\n   ..\n  141  // error must be happening before this point, \"\\\"TypeError: Cannot read property 'constructor' of undefined\\\"\"\n  142  // Unpack objects\n  143: var TaskStreamer = freturn['TaskStreamer']\n  144  var DataWriter = freturn['DataWriter']\n  145  var Playspace = freturn['Playspace']\n  ...\n  154  DataWriter.deposit_key_data('GAME', sessionPackage['GAME_PACKAGE']['GAME'])\n  155  DataWriter.deposit_key_data('SESSION', SESSION)\n  156: DataWriter.deposit_key_data('IMAGEBAGS_MAPPING', TaskStreamer.TG.idx2bag)\n  157  DataWriter.deposit_key_data('BOOTSTRAP_LOG', SBS.get_bootstrap_log())\n  158  DataWriter.deposit_key_data('VERIFICATION_LOG', VF.get_verification_log())\n  ...\n  172  Playspace.start_device_tracking()\n  173  DataWriter.start_polling()\n  174: TaskStreamer.start_buffering_continuous()\n  175  \n  176  \n  ...\n  180  wdm('Entering main trial loop...')\n  181  \n  182: while(TaskStreamer.TERMINAL_STATE == false){\n  183:   var trialPackage = await TaskStreamer.get_trial()\n  184  \tvar trialOutcome = await Playspace.run_trial(trialPackage) \n  185:   TaskStreamer.update_state(trialOutcome)\n  186    UX.poll(trialOutcome)\n  187    DataWriter.deposit_trial_outcome(trialOutcome) // checkpoints; saves to disk\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n  196          trialOutcome['reactionTime'] = Math.round(actionOutcome['timestamp'] - t_SequenceTimestamps.slice(-1)[0])\n  197  \n  198:         // todo: remove these internal references to TaskStreamer (violates modularity of main objects)\n  199:         trialOutcome['taskNumber'] = TaskStreamer.taskNumber\n  200:         trialOutcome['trialNumberTask'] = TaskStreamer.trialNumberTask \n  201:         trialOutcome['trialNumberSession'] = TaskStreamer.trialNumberSession\n  202:         trialOutcome['sampleBagProbabilities'] = TaskStreamer.bagSamplingWeights\n  203:         trialOutcome['tStatistic'] = TaskStreamer.tStatistic \n  204:         trialOutcome['empiricalEffectSize'] = TaskStreamer.empiricalEffectSize\n  205:         trialOutcome['a'] = TaskStreamer.a\n  206:         trialOutcome['b'] = TaskStreamer.b\n  207:         trialOutcome['c'] = TaskStreamer.c\n  208:         trialOutcome['d'] = TaskStreamer.d\n  209:         trialOutcome['tStatistic_criticalUb'] = TaskStreamer.tStatistic_criticalUb\n  210:         trialOutcome['tStatistic_criticalLb'] = TaskStreamer.tStatistic_criticalLb\n  211  \n  212          trialOutcome['i_sampleBag'] = trialPackage['i_sampleBag']\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TaskStreamer.js:\n    1: class TaskStreamerClass{\n    2      constructor(gamePackage, IB, CheckPointer){\n    3          this.game = gamePackage['GAME']\n    .\n  189          }\n  190          \n  191:         console.log('debug2record: TaskStreamer reverted to state on load')\n  192          this.CheckPointer.debug2record()\n  193      }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_UX.js:\n   64  \n   65          document.querySelector(\"button[name=doneTestingTask]\").style.display = \"none\"\n   66:         TaskStreamer.debug2record()\n   67          Playspace.debug2record()\n   68          DataWriter.debug2record()\n   ..\n  197          if(trialNumberSession >= this.minimumTrials){ //if(trialNumberSession >= this.maximumTrials){\n  198              // TODO: TEMPORARY while cash in listener is fixed - switch back to this.maximumTrials \n  199:             TaskStreamer.TERMINAL_STATE = true\n  200  \n  201          }\n  202          if(trialNumberSession >= this.maximumTrials){\n  203:             TaskStreamer.TERMINAL_STATE = true\n  204          }\n  205      }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_MechanicalTurk_session.js:\n   28    CheckPointer = new MechanicalTurkCheckPointer(GAME_PACKAGE)\n   29    await CheckPointer.build()\n   30:   TaskStreamer = new TaskStreamerClass(GAME_PACKAGE, IB, CheckPointer)\n   31:   await TaskStreamer.build(5)\n   32    DataWriter = new MechanicalTurkDataWriter(SESSION['assignmentId'], SESSION['hitId'], SESSION['inSandboxMode']) \n   33  \n   ..\n   91    }\n   92  \n   93:   TaskStreamer.debug2record()\n   94    Playspace.debug2record()\n   95    DataWriter.debug2record()\n   ..\n   97  \n   98    var freturn = {}\n   99:   freturn['TaskStreamer'] = TaskStreamer\n  100    freturn['DataWriter'] = DataWriter \n  101    freturn['Playspace'] = Playspace \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   37     UX.updateSessionTextbox(SESSION['agentId'], GAME['gameId'])\n   38  \n   39:    TaskStreamer = new TaskStreamerClass(GAME_PACKAGE, IB, CheckPointer)\n   40:    wdm('Building taskstreamer...')\n   41:    await TaskStreamer.build(5)\n   42     var playspacePackage = {\n   43      'playspace_degreesVisualAngle':ENVIRONMENT['playspace_degreesVisualAngle'], \n   ..\n   62      \n   63      var gamePackage = {}\n   64:     gamePackage['TaskStreamer'] = TaskStreamer\n   65      gamePackage['DataWriter'] = DataWriter \n   66      gamePackage['Playspace'] = Playspace \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/unit_tests.js:\n   19          for (var j = 0; j<batchSize; j++){\n   20              imageRequests.push(imageNames[i+j])\n   21:             //promise_array.push(TaskStreamer.IB.get_by_name(imageNames[i+j]))\n   22  \n   23          }\n   24:         await TaskStreamer.TG.IB.get_by_name(imageRequests)\n   25          \n   26      }\n   ..\n   36  \n   37      for (var i = 0; i < maxLoad; i++){\n   38:         TaskStreamer.buffer_trial(0)\n   39      }\n   40  \n\n41 matches across 7 files\n\n\nSearching 50 files for \"draw\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_defaultHIT_failsafe.js:\n   39                  \"minTrialsCriterion\":50,\n   40                  \"sampleSampleWithReplacement\":true, // true / false  \n   41:                 \"drawEyeFixationDot\":true,\n   42                  'defaultSampleBagProbabilities':undefined, \n   43                  'useCorrectionLoop':undefined, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n   81              'eyeFixationYCentroidPixels':sampleYCentroidPixels, \n   82              'eyeFixationDiameterPixels':Math.max(this.deg2pixels(0.2),4),\n   83:             'drawEyeFixationDot': trialPackage['drawEyeFixationDot'] || false, \n   84          }\n   85          \n   ..\n  494          var stimulusCanvas = this.ScreenDisplayer.getSequenceCanvas('tutorial_sequence', 0)\n  495          await this.ScreenDisplayer.renderBlank(stimulusCanvas)\n  496:         await this.ScreenDisplayer.drawImagesOnCanvas(tutorial_image, stimulusXCentroidPixels, stimulusYCentroidPixels, stimulusDiameterPixels, stimulusCanvas)\n  497  \n  498          // SHOW BLANK\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ScreenDisplayer.js:\n   10          this.last_eyeFixation_ycentroid = undefined\n   11          this.last_eyeFixation_diameter = undefined\n   12:         this.last_eyeFixation_drawn = undefined\n   13  \n   14          this._sequence_canvases = {} // key: sequence. key: frame. value: canvas \n   ..\n   75          var frame_canvases = []\n   76          var frame_durations = []\n   77:         // Draw sample screen\n   78          var sampleCanvas = this.getSequenceCanvas('stimulus_sequence', 0)\n   79          await this.renderBlank(sampleCanvas) // todo: only do this on window resize\n   80:         await this.drawImagesOnCanvas(sampleImage, sampleXCentroid, sampleYCentroid, sampleDiameterPixels, sampleCanvas)\n   81          frame_canvases.push(sampleCanvas)\n   82          frame_durations.push(sampleOn)\n   83  \n   84:         // Optionally draw blank delay screen\n   85          if(sampleOff > 0){\n   86              var delayCanvas = this.getSequenceCanvas('stimulus_sequence', 1)\n   ..\n   91          }\n   92  \n   93:         // Draw test screen\n   94          var testCanvas = this.getSequenceCanvas('stimulus_sequence', frame_canvases.length)\n   95          await this.renderBlank(testCanvas) // todo: only do this on window resize\n   96:         await this.drawImagesOnCanvas(choiceImage, choiceXCentroid, choiceYCentroid, choiceDiameterPixels, testCanvas)\n   97          frame_canvases.push(testCanvas)\n   98          frame_durations.push(0)\n   ..\n  103      }\n  104  \n  105:     async drawImagesOnCanvas(images, \n  106          xcentroids_pixels, \n  107          ycentroids_pixels,\n  ...\n  110  \n  111          if(images.constructor == Array){\n  112:                 // Iterate over the images in this frame and draw them all\n  113                  for (var i_image = 0; i_image<images.length; i_image++){\n  114  \n  115:                     await this._drawImage(\n  116                          images[i_image], \n  117                          xcentroids_pixels[i_image], \n  ...\n  123  \n  124              else{\n  125:                 await this._drawImage(images, xcentroids_pixels, \n  126                      ycentroids_pixels,\n  127                      diameter_pixels,\n  ...\n  130          }\n  131  \n  132:     async _drawImage(image, xcentroid_pixel, ycentroid_pixel, diameter_pixels, canvasobj){\n  133  \n  134          // Special cases for 'image'\n  135          if(image == 'dot'){\n  136:             await this.drawDot(xcentroid_pixel, ycentroid_pixel, diameter_pixels, 'white', canvasobj)\n  137              return\n  138          }\n  ...\n  146  \n  147          if (nativeHeight > nativeWidth){\n  148:             var drawHeight = diameter_pixels\n  149:             var drawWidth = diameter_pixels * nativeWidth / nativeHeight\n  150          }\n  151          else{\n  152:             var drawWidth = diameter_pixels \n  153:             var drawHeight = diameter_pixels * nativeHeight / nativeWidth\n  154          }\n  155  \n  ...\n  159  \n  160          var context = canvasobj.getContext('2d')\n  161:         await context.drawImage(image, original_left_start, original_top_start, drawWidth, drawHeight)\n  162  \n  163          return \n  ...\n  179          && this.last_eyeFixation_ycentroid == fixationFramePackage['eyeFixationYCentroidPixels']\n  180          && this.last_eyeFixation_diameter == fixationFramePackage['eyeFixationDiameterPixels']\n  181:         && this.last_eyeFixation_drawn == fixationFramePackage['drawEyeFixationDot']\n  182          ){\n  183          // TODO also check for changes to eye fixation\n  ...\n  187      await this.renderBlank(this.canvas_fixation)\n  188  \n  189:     // Draw touch initiation dot\n  190:     await this.drawDot(\n  191                      xcentroid_pixel, \n  192                      ycentroid_pixel, \n  ...\n  195                      this.canvas_fixation)\n  196  \n  197:     // Draw eye fixation dot \n  198:     if(fixationFramePackage['drawEyeFixationDot'] == true){\n  199:         await this.drawDot(\n  200                              fixationFramePackage['eyeFixationXCentroidPixels'], \n  201                              fixationFramePackage['eyeFixationYCentroidPixels'], \n  ...\n  213      this.last_eyeFixation_ycentroid = fixationFramePackage['eyeFixationYCentroidPixels']\n  214      this.last_eyeFixation_diameter = fixationFramePackage['eyeFixationDiameterPixels']\n  215:     this.last_eyeFixation_drawn = fixationFramePackage['drawEyeFixationDot']\n  216  }\n  217  \n  218: async drawText(textString, fontSize, color, xcentroid_pixel, ycentroid_pixel, canvasobj){\n  219      var context = canvasobj.getContext('2d')\n  220      fontSize = fontSize || 8\n  ...\n  227  }\n  228  \n  229: async drawDot(xcentroid_pixel, ycentroid_pixel, diameter_pixel, color, canvasobj){\n  230      var context=canvasobj.getContext('2d');\n  231  \n  ...\n  379      \n  380  \n  381:     drawRectangle(canvasobj, width_pixels, height_pixels, color, alpha){\n  382          var context=canvasobj.getContext('2d');\n  383          context.fillStyle=color \n  ...\n  397          var width_pixels = this.width * 2/3\n  398          var height_pixels = this.height * 2/3 \n  399:         this.drawRectangle(canvasobj, width_pixels, height_pixels, rewardColor, rewardAlpha)\n  400      }\n  401  \n  ...\n  408          var height_pixels = this.height* 2/3 \n  409  \n  410:         this.drawRectangle(canvasobj, width_pixels, height_pixels, punishColor, punishAlpha)\n  411      }\n  412  \n  ...\n  418          context.fillRect(0,0,canvasobj.width,canvasobj.height);\n  419  \n  420:         context.drawImage(image, dx, dy, dwidth, dheight)\n  421  \n  422          var _boundingBox = [{}]\n  ...\n  460          canvasobj.style.height=this.height+'px';\n  461  \n  462:         // Draw blank gray \n  463          context.fillStyle=\"#7F7F7F\"; \n  464          context.fillRect(0,0,canvasobj.width,canvasobj.height);\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TrialGenerator.js:\n  175          tP['fixationYCentroid'] = tk['fixationYCentroid']\n  176          tP['fixationDiameterDegrees'] = tk['fixationDiameterDegrees']\n  177:         tP['drawEyeFixationDot'] = tk['drawEyeFixationDot'] || false\n  178  \n  179          tP['i_sampleBag'] = sampleIdx['bag']\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/javascript_utils/seedrandom.js:\n  152  \n  153  When seedrandom() is called with zero args or a null seed, it uses a\n  154: seed drawn from the browser crypto object if present.  If there is no\n  155  crypto support, seedrandom() uses the current time, the native rng,\n  156  and a walk of several DOM objects to collect a few bits of entropy.\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabMTS.html:\n   71                      0.8\n   72                  ], \n   73:                 \"drawEyeFixationDot\": true, \n   74                  \"fixationDiameterDegrees\": 3, \n   75                  \"fixationXCentroid\": 0.5, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabSR_blackdiamond.html:\n   73                            0.8\n   74                          ], \n   75:                         \"drawEyeFixationDot\": true, \n   76                          \"fixationDiameterDegrees\": 4, \n   77                          \"fixationXCentroid\": 0.5, \n   ..\n  131                            0.8\n  132                          ], \n  133:                         \"drawEyeFixationDot\": true, \n  134                          \"fixationDiameterDegrees\": 4, \n  135                          \"fixationXCentroid\": 0.5, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS.html:\n   95                      0.8\n   96                  ], \n   97:                 \"drawEyeFixationDot\": true, \n   98                  \"fixationDiameterDegrees\": 3, \n   99                  \"fixationXCentroid\": 0.5, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS_to_SR.html:\n   95                      0.8\n   96                  ], \n   97:                 \"drawEyeFixationDot\": true, \n   98                  \"fixationDiameterDegrees\": 3, \n   99                  \"fixationXCentroid\": 0.5, \n  ...\n  143                      0.8\n  144                  ], \n  145:                 \"drawEyeFixationDot\": true, \n  146                  \"fixationDiameterDegrees\": 3, \n  147                  \"fixationXCentroid\": 0.5, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkSR.html:\n   90                      0.8\n   91                  ], \n   92:                 \"drawEyeFixationDot\": true, \n   93                  \"fixationDiameterDegrees\": 3, \n   94                  \"fixationXCentroid\": 0.5, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkSR_blackdiamond.html:\n   72                            0.8\n   73                          ], \n   74:                         \"drawEyeFixationDot\": true, \n   75                          \"fixationDiameterDegrees\": 4, \n   76                          \"fixationXCentroid\": 0.5, \n   ..\n  130                            0.8\n  131                          ], \n  132:                         \"drawEyeFixationDot\": true, \n  133                          \"fixationDiameterDegrees\": 4, \n  134                          \"fixationXCentroid\": 0.5, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1521113171_0.html:\n   91            0.8\n   92          ], \n   93:         \"drawEyeFixationDot\": true, \n   94          \"fixationDiameterDegrees\": 4, \n   95          \"fixationXCentroid\": 0.5, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1521114721_0.html:\n   91            0.8\n   92          ], \n   93:         \"drawEyeFixationDot\": true, \n   94          \"fixationDiameterDegrees\": 4, \n   95          \"fixationXCentroid\": 0.5, \n\n53 matches across 13 files\n\n\nSearching 50 files for \"choicemap\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TrialGenerator.js:\n  116          // MTS - select choice\n  117          else if(tk['taskType'] == 'MTS'){\n  118:             var correctBag = np.choice(tk['choiceMap'][sampleBag])\n  119              var correctPool = this.imageBags[correctBag]\n  120              var correctId = np.choice(correctPool)\n  ...\n  123              // Select distractors\n  124              var distractorBagIdxPool = [] \n  125:             for (var potentialSampleBag in tk['choiceMap']){\n  126                  if (potentialSampleBag == sampleBag){\n  127                      //console.log(potentialSampleBag)\n  128                      continue\n  129                  }\n  130:                 distractorBagIdxPool.push(this.bag2idx[tk['choiceMap'][potentialSampleBag]])\n  131              }\n  132  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Verifier.js:\n   69                  continue\n   70              }\n   71:             if(k == 'choiceMap' || k == 'rewardMap'){\n   72                  console.log('Not checking for', k)\n   73                  continue\n   ..\n   92                  }\n   93  \n   94:             if(tk['choiceMap'] != undefined && tk['taskType'] == 'MTS'){\n   95                  for (var sampleBag in tk['sampleBagNames']){\n   96:                     var missing_choiceBagNames = this.check_key_presence(gamePackage['IMAGEBAGS'], tk['choiceMap'][sampleBag])\n   97                      if(missing_choiceBagNames.length > 0 ){\n   98                          verified = false \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/task_specification.json:\n   19  \"rewardMap\":{\"*bagName\":[0, 1]}} // indexes action*; gives rewards for selecting that action. Assumes 0 everywhere else.\n   20  // MTS specific\n   21: \"choiceMap\":{\"*sampleBagName\":\"*choiceBagName\"},\n   22  \n   23  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabMTS.html:\n   57                      4\n   58                  ], \n   59:                 \"choiceMap\": {\n   60                      \"FullVarWithBGSetA_batch0obj0\": \"FullVarWithBGSetA_batch0obj0\", \n   61                      \"FullVarWithBGSetA_batch0obj1\": \"FullVarWithBGSetA_batch0obj1\", \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS.html:\n   81                      4\n   82                  ], \n   83:                 \"choiceMap\": {\n   84                      \"stimulus_objectome_dog\": \"token_objectome_dog\", \n   85                      \"stimulus_objectome_flute\": \"token_objectome_flute\", \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS_to_SR.html:\n   81                      4\n   82                  ], \n   83:                 \"choiceMap\": {\n   84                      \"stimulus_objectome_dog\": \"token_objectome_dog\", \n   85                      \"stimulus_objectome_flute\": \"token_objectome_flute\", \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1521113171_0.html:\n   60            4\n   61          ], \n   62:         \"choiceMap\": {\n   63            \"MutatorB0_FullVar_batch0obj19\": \"Canonical_batch0obj19\", \n   64            \"MutatorB0_FullVar_batch0obj20\": \"Canonical_batch0obj20\", \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1521114721_0.html:\n   60            4\n   61          ], \n   62:         \"choiceMap\": {\n   63            \"MutatorB0_FullVar_batch0obj19\": \"Canonical_batch0obj19\", \n   64            \"MutatorB0_FullVar_batch0obj20\": \"Canonical_batch0obj20\", \n\n12 matches across 8 files\n\n\nSearching 50 files for \"np\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n    8  \n    9  <form style=\"display: none;\" id=\"MechanicalTurk_SubmissionForm\" action=\"https://www.mturk.com/mturk/externalSubmit\" method=\"post\">\n   10:   <input type=\"text\" name=\"submission_data\" id=\"submission_data\" value=\"\">\n   11:   <input type=\"text\" name=\"assignmentId\" id=\"assignmentId\" value=\"\">\n   12:   <input type=\"text\" name=\"hitId\" id=\"hitId\" value=\"\">\n   13  </form>\n   14  \n   ..\n   53  \n   54  \n   55:   <input type=\"image\" class='DeviceButton' id='MouseImage'  style=\"\" id=\"MouseImage\" src=\"tutorial_images/mouse.png \" alt=\"Mouse\" onclick=\"setDeviceSelection(this, 'mouse')\" />\n   56:   <input type=\"image\"  class='DeviceButton' id='TrackPadImage' src=\"tutorial_images/trackpad.png \" alt=\"Trackpad\" onclick=\"setDeviceSelection(this, 'trackpad')\" />\n   57:   <input type=\"image\"  class='DeviceButton' id = 'TabletImage' src=\"tutorial_images/tablet.png \" alt=\"Tablet\" onclick=\"setDeviceSelection(this, 'touchscreen')\" />\n   58  \n   59    <span>\n   ..\n   64  <div id=\"MechanicalTurkHandSelectionScreen\">\n   65  \n   66:   <input type=\"image\" class='HandButton' id='LeftHandImage'  style=\"\" id=\"MouseImage\" src=\"tutorial_images/left_hand.png \" alt=\"Lefthanded\" onclick=\"setHandSelection(this, 'left')\" />\n   67:   <input type=\"image\"  class='HandButton' id = 'RightHandImage' src=\"tutorial_images/right_hand.png \" alt=\"Righthanded\" onclick=\"setHandSelection(this, 'right')\" />\n   68  \n   69    <span>\n   ..\n   77  \n   78  \n   79: <script src=\"https://unpkg.com/dropbox/dist/Dropbox-sdk.min.js\"></script>\n   80  <script src=\"setup_upstairs_session.js\" type=\"text/javascript\"></script>\n   81  <script src=\"setup_MechanicalTurk_session.js\" type=\"text/javascript\"></script>\n   ..\n   93  <script src=\"mkturk_CheckPointer.js\" type=\"text/javascript\"></script>\n   94  <script src=\"mkturk_Playspace.js\" type=\"text/javascript\"></script>\n   95: <script src=\"mkturk_ActionPoller.js\" type=\"text/javascript\"></script>\n   96  <script src=\"mkturk_Reinforcer.js\" type=\"text/javascript\"></script>\n   97  <script src=\"mkturk_ScreenDisplayer.js\" type=\"text/javascript\"></script>\n   ..\n  119  console.time('Done setting up')\n  120  \n  121: // Load inputs from local storage, web, or Dropbox.\n  122  wdm('Running bootstrapper...')\n  123  var SBS = new SessionBootStrapper() \n  124: var sessionPackage = await SBS.build()\n  125  \n  126: // Verify inputs\n  127: wdm('Verifying inputs...')\n  128  \n  129  VF = new Verifier() \n  130: sessionPackage = VF.verify_session_package(sessionPackage)\n  131: console.log('sessionPackage', sessionPackage)\n  132  // Construct session\n  133  wdm('Setting up session...')\n  134  \n  135: if (sessionPackage['ENVIRONMENT']['rigEnvironment'] == 'mechanicalturk'){\n  136:   var freturn = await setup_mechanicalturk_session(sessionPackage)\n  137  }\n  138: else if (sessionPackage['ENVIRONMENT']['rigEnvironment'] == 'monkeybox'){\n  139:   var freturn = await setup_upstairs_session(sessionPackage)\n  140  }\n  141  // error must be happening before this point, \"\\\"TypeError: Cannot read property 'constructor' of undefined\\\"\"\n  142: // Unpack objects\n  143  var TaskStreamer = freturn['TaskStreamer']\n  144  var DataWriter = freturn['DataWriter']\n  ...\n  150  // Attach static data objects \n  151  wdm('Attaching static data probes...')\n  152: DataWriter.deposit_key_data('ENVIRONMENT', sessionPackage['ENVIRONMENT'])\n  153: DataWriter.deposit_key_data('TASK_SEQUENCE', sessionPackage['GAME_PACKAGE']['TASK_SEQUENCE'])\n  154: DataWriter.deposit_key_data('GAME', sessionPackage['GAME_PACKAGE']['GAME'])\n  155  DataWriter.deposit_key_data('SESSION', SESSION)\n  156  DataWriter.deposit_key_data('IMAGEBAGS_MAPPING', TaskStreamer.TG.idx2bag)\n  ...\n  162  \n  163  DataWriter.attach_probe(Playspace, 'deviceLog', 'DEVICE_LOG')\n  164: DataWriter.attach_probe(Playspace.ActionPoller, 'actionLog', 'ACTION_LOG')\n  165  DataWriter.attach_probe(Playspace, 'rewardLog', 'REWARD_LOG')\n  166  DataWriter.attach_probe(Playspace, 'playspaceLog', 'PLAYSPACE_LOG')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ActionPoller.js:\n    1: class ActionPollerClass{\n    2      constructor(event_types, bounds){\n    3          // ['mousemove', 'touchmove', 'touchstart', 'onclick']\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_amazon_utils.js:\n    1  \n    2: // Verify inputs \n    3  \n    4  class az{\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_BiasDetection.js:\n    9      var minLength = Math.min(returnSamps.length, bagSamps.length)\n   10      if (minLength < viewingWindowWidth){\n   11:         var samplingWeights = np.xvec(numBags, 1 / numBags)\n   12      }\n   13      returnSamps = returnSamps.slice(-1 * minLength)\n   ..\n   76          // Indexes tk['sampleBagNames']\n   77          var h = performanceModulationFactor // Drop from balanced performance \n   78:         var designProb = design_worstbag_sampling_rate(h, numBags) // todo: check for validity in multiclass case\n   79:         var samplingWeights = np.xvec(numBags, designProb['designPrest'])\n   80:         samplingWeights[worstBagIdx] = designProb['designPmin']\n   81  \n   82      }\n   ..\n   85  \n   86          // Indexes tk['sampleBagNames']\n   87:         var samplingWeights = np.xvec(numBags, 1 / numBags)\n   88      }\n   89  \n   ..\n  129  \n  130      for (var bg in returnsPerBag){\n  131:         if(! returnsPerBag.hasOwnProperty(bg)){\n  132              continue\n  133          }\n  ...\n  149              continue\n  150          }\n  151:         if(! returnsPerBag.hasOwnProperty(bg)){\n  152              continue\n  153          }\n  ...\n  213  }\n  214  \n  215: function design_worstbag_sampling_rate(designProportionDropNewExpectedReturn, numBags){\n  216:     var h = designProportionDropNewExpectedReturn\n  217          \n  218:     var designPmin = 1 - h*((numBags - 1)/numBags)\n  219:     var designPrest = (1 - designPmin) / (numBags - 1)\n  220  \n  221:     var result = {'designPmin': designPmin, 'designPrest':designPrest}\n  222  \n  223      return result \n  ...\n  228  \n  229      for (var bg in performancePerBag){\n  230:         if (! performancePerBag.hasOwnProperty(bg)){\n  231              continue\n  232          }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_bluetooth.js:\n   47  \n   48  //==================== CONNECT BLE ====================//\n   49: function connectBLEButtonPromise(){\n   50  \n   51    document.querySelector(\"button[name=connectble]\").addEventListener(\n   ..\n  186      ble.statustext = ble.statustext + \"<br>\" + textstr\n  187      \n  188:     ble.pumpcharacteristic.addEventListener('characteristicvaluechanged',onPumpNotificationFromBLE)\n  189      ble.rfidcharacteristic.addEventListener('characteristicvaluechanged',onRFIDNotificationFromBLE)\n  190      ble.connected = true\n  ...\n  284  }\n  285  \n  286: function onPumpNotificationFromBLE(event){\n  287    ble.tnotify_pump=performance.now()\n  288    var textstr = 'BLE read notification << ' +\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_CheckPointer.js:\n   64  \n   65      for (var k in checkpointTemplate){\n   66:         if(!checkpointTemplate.hasOwnProperty(k)){\n   67              continue\n   68          }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_DataWriter.js:\n   15      deposit_trial_outcome(trialOutcome){\n   16          for (var key in trialOutcome){\n   17:             if(!trialOutcome.hasOwnProperty(key)){\n   18                  continue\n   19              }\n   20:             if(!this.trialData.hasOwnProperty(key)){\n   21                  this.trialData[key] = []\n   22                  //console.log('Added property ', key, ' to trialData')\n   ..\n   43  \n   44          for (var probe in this.probeFunctions){\n   45:             if(!this.probeFunctions.hasOwnProperty(probe)){\n   46                  continue\n   47              }\n   ..\n   50  \n   51          for (var key in this.keyData){\n   52:             if(!this.keyData.hasOwnProperty(key)){\n   53                  continue\n   54              }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n   33          }\n   34  \n   35:         this.ActionPoller = new ActionPollerClass(action_event_type, bounds)\n   36          this.SoundPlayer = new SoundPlayerClass()\n   37          this.periodicRewardIntervalMsec = periodicRewardIntervalMsec \n   ..\n   45          this.rewardLog = {'t':[], 'n':[]}\n   46          this.start_device_tracking()\n   47:         this.ActionPoller.start_action_tracking()\n   48          this.toggleBorder(0)\n   49          console.log('debug2record: Playspace performed a reset of reward, device, and action logs')\n   ..\n  115  \n  116          // RUN FIXATION\n  117:         this.ActionPoller.create_action_regions(\n  118              fixationXCentroidPixels,\n  119              fixationYCentroidPixels,\n  ...\n  121  \n  122          var t_fixationOn = await this.ScreenDisplayer.displayFixation()\n  123:         var fixationOutcome = await this.ActionPoller.Promise_wait_until_active_response()\n  124  \n  125          // RUN STIMULUS SEQUENCE\n  ...\n  131          var actionDiameterPixels = this.deg2pixels(trialPackage['actionDiameterDegrees'])\n  132  \n  133:         this.ActionPoller.create_action_regions(\n  134              actionXCentroidPixels, \n  135              actionYCentroidPixels, \n  ...\n  137  \n  138          if(trialPackage['choiceTimeLimitMsec'] > 0){\n  139:             var actionPromise = Promise.race([\n  140:                                 this.ActionPoller.Promise_wait_until_active_response(), \n  141:                                 this.ActionPoller.timeout(trialPackage['choiceTimeLimitMsec'])]) \n  142          }\n  143          else{\n  144:             var actionPromise = this.ActionPoller.Promise_wait_until_active_response()\n  145          }\n  146  \n  147          wdm('Awaiting choice...')\n  148:         var actionOutcome = await actionPromise\n  149          var rewardAmount = trialPackage['choiceRewardMap'][actionOutcome['actionIndex']]\n  150  \n  ...\n  257  \n  258      start_action_tracking(){\n  259:         this.ActionPoller.start_action_tracking()\n  260      }\n  261  \n  262      get_action_log(){\n  263:         return this.ActionPoller.actionLog\n  264      }\n  265  \n  ...\n  290  \n  291              for (var k in bounds){\n  292:                 if(!bounds.hasOwnProperty(k)){\n  293                      continue\n  294                  }\n  ...\n  297          }\n  298          for (var k in bounds){\n  299:             if(!bounds.hasOwnProperty(k)){\n  300                      continue\n  301              }\n  302:             if(!this.playspaceLog.hasOwnProperty(k)){\n  303                  this.playspaceLog[k] = []\n  304              }\n  ...\n  339  \n  340              _this.ScreenDisplayer.calibrateBounds(bounds)\n  341:             _this.ActionPoller.calibrateBounds(bounds)\n  342              _this.updateWindowLog(bounds) \n  343  \n  ...\n  500  \n  501          // RUN FIXATION\n  502:         this.ActionPoller.create_action_regions(\n  503              fixationXCentroidPixels,\n  504              fixationYCentroidPixels,\n  ...\n  506  \n  507          await this.ScreenDisplayer.displayFixation()\n  508:         await this.ActionPoller.Promise_wait_until_active_response()\n  509  \n  510          // RUN STIMULUS SEQUENCE\n  511          await this.ScreenDisplayer.displayScreenSequence(stimulusCanvas, 0)\n  512  \n  513:         this.ActionPoller.create_action_regions(\n  514              stimulusXCentroidPixels, \n  515              stimulusYCentroidPixels, \n  516              stimulusDiameterPixels)\n  517  \n  518:         await this.ActionPoller.Promise_wait_until_active_response()\n  519          this.SoundPlayer.play_sound('reward_sound')\n  520      }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ScreenDisplayer.js:\n  170      var ycentroid_pixel = fixationFramePackage['fixationYCentroidPixels']\n  171      var fixationDiameter_pixels = fixationFramePackage['fixationDiameterPixels'] \n  172:     // input arguments in playspace units \n  173  \n  174      // Clear canvas if different \n  ...\n  230      var context=canvasobj.getContext('2d');\n  231  \n  232:     context.beginPath();\n  233      context.arc(xcentroid_pixel,ycentroid_pixel,diameter_pixel/2,0*Math.PI,2*Math.PI);\n  234      context.fillStyle=color; \n  ...\n  300  \n  301          for (var sequence in this._sequence_canvases){\n  302:             if(this._sequence_canvases.hasOwnProperty(sequence)){\n  303                  for (var i = 0; i<this._sequence_canvases[sequence].length; i ++){\n  304                      this._sequence_canvases[sequence][i].style.border = bs\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_SessionBootStrapper.js:\n    6  \n    7      async build(){\n    8:         wdm('Unpacking SESSION_PACKAGE...')\n    9:         var unpackedSession = {}\n   10          \n   11:         // Retrieve landing page url from localstorage - no need to unpack further\n   12          wdm('Retrieving LANDING_PAGE_URL...')\n   13:         unpackedSession['LANDING_PAGE_URL'] = await this.load_localstorage_string('LANDING_PAGE_URL')\n   14  \n   15:         // Retrieve sessionPackage bootstraps from localstorage\n   16:         var sessionPackageBootstrapString = await this.load_localstorage_string('SESSION_PACKAGE')\n   17  \n   18:         // Unpack sessionPackage\n   19          wdm('Download_from_stringing SESSION_PACKAGE...')\n   20:         var sessionPackage = await this.download_from_string(sessionPackageBootstrapString)\n   21  \n   22:         // Unpack elements of game package\n   23:         wdm('Unpacking GAME_PACKAGE...')\n   24:         var gamePackage = await this.unpack_game_package(sessionPackage['GAME_PACKAGE'])\n   25  \n   26:         // Unpack elements of environment\n   27:         wdm('Unpacking ENVIRONMENT...')\n   28:         var environment = await this.unpack_environment(sessionPackage['ENVIRONMENT'])\n   29  \n   30          // return\n   31:         unpackedSession['GAME_PACKAGE'] = gamePackage \n   32:         unpackedSession['ENVIRONMENT'] = environment\n   33          \n   34      \n   35:         return unpackedSession\n   36      }\n   37:     async unpack_game_package(game_package_key){\n   38          var gamePackage = await this.download_from_string(game_package_key) \n   39:         var unpackedGame = {}\n   40  \n   41:         unpackedGame['IMAGEBAGS'] = await this.unpack_imagebags(gamePackage['IMAGEBAGS'])\n   42:         unpackedGame['GAME'] = await this.unpack_game(gamePackage['GAME'])\n   43:         unpackedGame['TASK_SEQUENCE'] = await this.unpack_task_sequence(gamePackage['TASK_SEQUENCE'])\n   44  \n   45:         return unpackedGame\n   46      }\n   47  \n   48:     async unpack_imagebags(imagebags_bootstrap){\n   49  \n   50          console.log('Loading IMAGEBAGS')\n   51          var imagebags = await this.download_from_string(imagebags_bootstrap)\n   52:         console.log('Done downloading imagebags. Unpacking...')\n   53          var loadMethods = []\n   54:         var unpacked_imagebags = {}\n   55          if (imagebags.constructor == Array){\n   56:             // Unpack additional levels\n   57              for (var i in imagebags){\n   58                  var x = await this.download_from_string(imagebags[i])\n   59                  loadMethods.push(this.infer_load_method(imagebags[i]))\n   60                  for (var j in x){\n   61:                     if(!x.hasOwnProperty(j)){\n   62                          continue\n   63                      }\n   64  \n   65:                     unpacked_imagebags[j] = x[j]\n   66                  }\n   67              }\n   ..\n   69          else if(imagebags.constructor == Object){\n   70              imagebags = [imagebags]\n   71:             unpacked_imagebags = imagebags[0]\n   72              loadMethods.push(this.infer_load_method(imagebags_bootstrap))\n   73          }\n   ..\n   77  \n   78          // Convert singleton bags into length-1 arrays\n   79:         for (var bagName in unpacked_imagebags){\n   80:             if(!unpacked_imagebags.hasOwnProperty(bagName)){\n   81                  continue\n   82              }\n   83:             if (unpacked_imagebags[bagName].constructor == String){\n   84                  // Convert singletons\n   85:                 unpacked_imagebags[bagName] = [unpacked_imagebags[bagName]]\n   86              }\n   87          }\n   ..\n  117          }\n  118  \n  119:         return unpacked_imagebags\n  120      }\n  121  \n  122:     async unpack_game(game_bootstrap){\n  123          console.log('Loading GAME')\n  124  \n  ...\n  132  \n  133  \n  134:     async unpack_task_sequence(task_sequence_bootstrap){\n  135  \n  136          console.log('Loading task_sequence')\n  ...\n  149      }\n  150      \n  151:     async unpack_environment(environment){\n  152          var ENVIRONMENT = await this.download_from_string(environment)\n  153          return ENVIRONMENT\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TaskStreamer.js:\n  132          var transition = false\n  133          if (this.taskReturnHistory.length >= minTrialsCriterion){\n  134:             var averageReturn = np.mean(this.taskReturnHistory.slice(-1 * minTrialsCriterion))\n  135              if(averageReturn >= averageReturnCriterion){\n  136                  transition = true\n  ...\n  183  \n  184          for (var k in this.onLoadState){\n  185:             if(!this.onLoadState.hasOwnProperty(k)){\n  186                  continue\n  187              }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TrialGenerator.js:\n   48          for (var t = taskNumber; t<this.taskSequence.length; t++){\n   49              for (var i_trial = 0; i_trial < num_trials_per_stage_to_prebuffer; i_trial++){\n   50:                 var sampleBagName = np.choice(this.taskSequence[t]['sampleBagNames'])\n   51                  trial_requests.push(this.buffer_trial(t, sampleBagName))\n   52              }\n   ..\n   66          // returns a trialPackage on demand\n   67          var tk = this.taskSequence[taskNumber]\n   68:         var sampleBagName = np.choice(tk['sampleBagNames'], 1, undefined, bagSamplingWeights)\n   69  \n   70          if (this.trialBuffer[taskNumber] == undefined){\n   ..\n   91  \n   92          if (sampleBagName == undefined){\n   93:             var sampleBagName = np.choice(this.taskSequence[taskNumber]['sampleBagNames'])\n   94          }\n   95  \n   ..\n  101          // Select sample bag\n  102          var sampleBag = sampleBagName\n  103:         var sampleId = np.choice(this.imageBags[sampleBag])\n  104          var sampleIdx = this.get_image_idx(sampleBag, sampleId)\n  105      \n  ...\n  110              var rewardMap = tk['rewardMap'][sampleBag]\n  111              var choiceId = rewardMap.map(function(entry){return 'dot'})\n  112:             var choiceIdx = {'bag':np.nans(choiceId.length),\n  113:                             'id':np.nans(choiceId.length)}\n  114          }\n  115  \n  116          // MTS - select choice\n  117          else if(tk['taskType'] == 'MTS'){\n  118:             var correctBag = np.choice(tk['choiceMap'][sampleBag])\n  119              var correctPool = this.imageBags[correctBag]\n  120:             var correctId = np.choice(correctPool)\n  121              var correctIdx = this.get_image_idx(correctBag, choiceId) \n  122  \n  ...\n  132  \n  133              var nway = tk['choiceXCentroid'].length\n  134:             var distractorBagIdx = np.choice(distractorBagIdxPool, nway-1, false)\n  135              var distractorBag = this.get_bag_from_idx(distractorBagIdx)\n  136              if(distractorBag.constructor != Array){\n  ...\n  139              var distractorId = []\n  140              for(var j in distractorBag){\n  141:                 distractorId.push(np.choice(this.imageBags[distractorBag[j]]))\n  142              }\n  143              var distractorIdx = {'bag':distractorBagIdx, 'id':this.id2idx[distractorId]}\n  ...\n  148              choiceId.push(...distractorId)\n  149              choiceBag.push(...distractorBag) \n  150:             var choice_shuffle = shuffle(np.arange(choiceId.length))\n  151:             choiceId = np.iloc(choiceId, choice_shuffle)\n  152:             choiceBag = np.iloc(choiceBag, choice_shuffle)\n  153  \n  154              var choiceIdx = this.get_image_idx(choiceBag, choiceId)\n  155:             var rewardMap = np.zeros(choiceId.length)\n  156              rewardMap[choiceId.indexOf(correctId)] = 1 \n  157  \n  ...\n  253              var numTrialsInTaskQueue = 0 \n  254              for (var bg in _this.trialBuffer[_this.taskNumber]){\n  255:                 if(! _this.trialBuffer[_this.taskNumber].hasOwnProperty(bg)){\n  256                      continue\n  257                  }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_utils.js:\n   27  }\n   28  \n   29: class np{\n   30    static mean(arr){\n   31      var total = 0, i;\n   ..\n  448                  if(objClass === 'Object' || objClass === 'Array') {\n  449                      for(var key in obj) {\n  450:                         if(!obj.hasOwnProperty(key)) continue;\n  451                          sizeOf(obj[key]);\n  452                      }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_UX.js:\n   20          'mouseup',this.doneTestingTask_listener,false)\n   21  \n   22:         connectBLEButtonPromise()\n   23      }\n   24  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Verifier.js:\n    9          this.verificationLog['TASK_SEQUENCE_hash'] = undefined \n   10      }\n   11:     verify_session_package(sessionPackage){\n   12          var verified = true\n   13          var use_default_HIT = false\n   14          \n   15:         verified = this.verify_game_package(sessionPackage['GAME_PACKAGE'])\n   16:         verified = this.verify_environment(sessionPackage['ENVIRONMENT'])\n   17  \n   18          if(verified == false){\n   19:             sessionPackage = this.on_verification_fail()\n   20          }\n   21          if(verified == true){\n   22:             console.log(\"sessionPackage PASSED all tests.\")\n   23          }\n   24  \n   ..\n   27  \n   28          // Hash \n   29:         this.verificationLog['ENVIRONMENT_hash'] = JSON.stringify(sessionPackage['ENVIRONMENT']).hashCode()\n   30:         this.verificationLog['GAME_hash'] = JSON.stringify(sessionPackage['GAME_PACKAGE']['GAME']).hashCode()\n   31:         this.verificationLog['IMAGEBAGS_hash'] = JSON.stringify(sessionPackage['GAME_PACKAGE']['IMAGEBAGS']).hashCode()\n   32:         this.verificationLog['TASK_SEQUENCE_hash'] = JSON.stringify(sessionPackage['GAME_PACKAGE']['TASK_SEQUENCE']).hashCode()\n   33:         return sessionPackage\n   34      }\n   35      \n   36      on_verification_fail(){\n   37          console.warn(\"Verification FAILED. Using failsafe game...\")\n   38:         var sessionPackage = DEFAULT_HIT\n   39          this.verificationLog['usingFailSafeHIT'] = true\n   40:         return sessionPackage\n   41      }\n   42  \n   ..\n   66          var necessary_keys = []\n   67          for (var k in DEFAULT_HIT['TASK_SEQUENCE'][0]){\n   68:             if(!DEFAULT_HIT['TASK_SEQUENCE'].hasOwnProperty(k)){\n   69                  continue\n   70              }\n   ..\n  121              var key = necessaryKeyList[i]\n  122  \n  123:             if(!testObject.hasOwnProperty(key)){\n  124                  missingKeys.push(key)\n  125              }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/ptap_landing_page_1515085151.html:\n    9  </head>\n   10  <body>\n   11: <form name='mturk_form' method='post' id='mturk_form' action='https://www.mturk.com/mturk/externalSubmit'><input type='hidden' value='' name='assignmentId' id='assignmentId'/>\n   12  <h2>Enter gibberish in the field below and then submit the HIT to receive payment. </h2>\n   13  =<div>\n   14:   <input type='text' name='reported_emotion' placeholder='Type in your gibberish here'>\n   15  </div>\n   16: <p><input type='submit' id='submitButton' value='Submit' /></p></form>\n   17  <script language='Javascript'>turkSetAssignmentID();</script>\n   18  </body></html>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_MechanicalTurk_session.js:\n    1: async function setup_mechanicalturk_session(sessionPackage){\n    2   \n    3:   GAME_PACKAGE = sessionPackage['GAME_PACKAGE']\n    4    GAME = GAME_PACKAGE['GAME']\n    5    IMAGEBAGS = GAME_PACKAGE['IMAGEBAGS']\n    6    TASK_SEQUENCE = GAME_PACKAGE['TASK_SEQUENCE']\n    7  \n    8:   ENVIRONMENT = sessionPackage['ENVIRONMENT'] \n    9    \n   10:   var landingPageURL = sessionPackage['LANDING_PAGE_URL']\n   11    console.log('Detected landing page URL', landingPageURL)\n   12  \n   ..\n   88    \n   89    if(show_device_selection){    \n   90:     SESSION['inputDevice'] = await UX.run_device_selection_dialogue()\n   91    }\n   92  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n    1: async function setup_upstairs_session(sessionPackage){\n    2  \n    3:   GAME_PACKAGE = sessionPackage['GAME_PACKAGE']\n    4    GAME = GAME_PACKAGE['GAME']\n    5    IMAGEBAGS = GAME_PACKAGE['IMAGEBAGS']\n    6    TASK_SEQUENCE = GAME_PACKAGE['TASK_SEQUENCE']\n    7    \n    8:   ENVIRONMENT = sessionPackage['ENVIRONMENT'] \n    9  \n   10:   var landingPageURL = sessionPackage['LANDING_PAGE_URL']\n   11    SESSION = {}\n   12    //SESSION['ipAddress'] = await az.get_ip_address()\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/unit_tests.js:\n    5  \n    6      for (var i in IMAGEBAGS){\n    7:         if (!IMAGEBAGS.hasOwnProperty(i)){\n    8              continue\n    9          }\n   ..\n   28  \n   29  async function fillUpDataWriter(){\n   30:     var x = np.zeros(5000000)\n   31      DataWriter.deposit_key_data(x)\n   32  }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/javascript_utils/lz-string.js:\n   27  \n   28  var LZString = {\n   29:   compressToBase64 : function (input) {\n   30:     if (input == null) return \"\";\n   31:     var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n   32      switch (res.length % 4) { // To produce valid Base64\n   33      default: // When could this happen ?\n   ..\n   39    },\n   40  \n   41:   decompressFromBase64 : function (input) {\n   42:     if (input == null) return \"\";\n   43:     if (input == \"\") return null;\n   44:     return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n   45    },\n   46  \n   47:   compressToUTF16 : function (input) {\n   48:     if (input == null) return \"\";\n   49:     return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n   50    },\n   51  \n   ..\n   91  \n   92    //compress into a string that is already URI encoded\n   93:   compressToEncodedURIComponent: function (input) {\n   94:     if (input == null) return \"\";\n   95:     return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n   96    },\n   97  \n   98    //decompress from an output of compressToEncodedURIComponent\n   99:   decompressFromEncodedURIComponent:function (input) {\n  100:     if (input == null) return \"\";\n  101:     if (input == \"\") return null;\n  102:     input = input.replace(/ /g, \"+\");\n  103:     return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  104    },\n  105  \n  ...\n  125      for (ii = 0; ii < uncompressed.length; ii += 1) {\n  126        context_c = uncompressed.charAt(ii);\n  127:       if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n  128          context_dictionary[context_c] = context_dictSize++;\n  129          context_dictionaryToCreate[context_c] = true;\n  ...\n  131  \n  132        context_wc = context_w + context_c;\n  133:       if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n  134          context_w = context_wc;\n  135        } else {\n  136:         if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n  137            if (context_w.charCodeAt(0)<256) {\n  138              for (i=0 ; i<context_numBits ; i++) {\n  ...\n  219      // Output the code for w.\n  220      if (context_w !== \"\") {\n  221:       if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n  222          if (context_w.charCodeAt(0)<256) {\n  223            for (i=0 ; i<context_numBits ; i++) {\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/javascript_utils/seedrandom.js:\n   27  // The generated seed string is returned.\n   28  Math.seedrandom();\n   29: console.log(Math.random());          // Reasonably unpredictable.\n   30  \n   31  // Seeds using the given explicit seed mixed with accumulated entropy.\n   32  Math.seedrandom('added entropy.', { entropy: true });\n   33: console.log(Math.random());          // As unpredictable as added entropy.\n   34  \n   35  // Use \"new\" to create a local prng without altering Math.random.\n   ..\n   41  -------------\n   42  \n   43: npm install seedrandom\n   44  \n   45  // Local PRNG: does not affect Math.random.\n   ..\n   50  // Autoseeded ARC4-based PRNG.\n   51  rng = seedrandom();\n   52: console.log(rng());                  // Reasonably unpredictable.\n   53  \n   54  // Global PRNG: set Math.random.\n   ..\n   58  // Mixing accumulated entropy.\n   59  rng = seedrandom('added entropy.', { entropy: true });\n   60: console.log(rng());                  // As unpredictable as added entropy.\n   61  \n   62  \n   ..\n  100  </script>\n  101  \n  102: Reseeding using user input\n  103  --------------------------\n  104  \n  105  var seed = Math.seedrandom();        // Use prng with an automatic seed.\n  106: document.write(Math.random());       // Pretty much unpredictable x.\n  107  \n  108  var rng = new Math.seedrandom(seed); // A new prng with the same seed.\n  109: document.write(rng());               // Repeat the 'unpredictable' x.\n  110  \n  111  function reseed(event, count) {      // Define a custom entropy collector.\n  ...\n  304      me.i = i; me.j = j;\n  305      return r;\n  306:     // For robust unpredictability, the function call below automatically\n  307      // discards an initial batch of values.  This is called RC4-drop[256].\n  308      // See http://google.com/search?q=rsa+fluhrer+response&btnI\n\n211 matches across 21 files\n\n\nSearching 50 files for \"np \"\n\n0 matches\n\nSearching 50 files for \"np{ \"\n\n0 matches\n\nSearching 50 files for \"np { \"\n\n0 matches\n\nSearching 50 files for \"class\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n   53  \n   54  \n   55:   <input type=\"image\" class='DeviceButton' id='MouseImage'  style=\"\" id=\"MouseImage\" src=\"tutorial_images/mouse.png \" alt=\"Mouse\" onclick=\"setDeviceSelection(this, 'mouse')\" />\n   56:   <input type=\"image\"  class='DeviceButton' id='TrackPadImage' src=\"tutorial_images/trackpad.png \" alt=\"Trackpad\" onclick=\"setDeviceSelection(this, 'trackpad')\" />\n   57:   <input type=\"image\"  class='DeviceButton' id = 'TabletImage' src=\"tutorial_images/tablet.png \" alt=\"Tablet\" onclick=\"setDeviceSelection(this, 'touchscreen')\" />\n   58  \n   59    <span>\n   ..\n   64  <div id=\"MechanicalTurkHandSelectionScreen\">\n   65  \n   66:   <input type=\"image\" class='HandButton' id='LeftHandImage'  style=\"\" id=\"MouseImage\" src=\"tutorial_images/left_hand.png \" alt=\"Lefthanded\" onclick=\"setHandSelection(this, 'left')\" />\n   67:   <input type=\"image\"  class='HandButton' id = 'RightHandImage' src=\"tutorial_images/right_hand.png \" alt=\"Righthanded\" onclick=\"setHandSelection(this, 'right')\" />\n   68  \n   69    <span>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ActionPoller.js:\n    1: class ActionPollerClass{\n    2      constructor(event_types, bounds){\n    3          // ['mousemove', 'touchmove', 'touchstart', 'onclick']\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_amazon_utils.js:\n    2  // Verify inputs \n    3  \n    4: class az{\n    5      constructor(){\n    6  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_BiasDetection.js:\n   76          // Indexes tk['sampleBagNames']\n   77          var h = performanceModulationFactor // Drop from balanced performance \n   78:         var designProb = design_worstbag_sampling_rate(h, numBags) // todo: check for validity in multiclass case\n   79          var samplingWeights = np.xvec(numBags, designProb['designPrest'])\n   80          samplingWeights[worstBagIdx] = designProb['designPmin']\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_CheckPointer.js:\n    1: class CheckPointerClass{\n    2      constructor(gamePackage){\n    3          this.gamePackage = gamePackage\n    .\n   12  }\n   13  \n   14: class DropboxCheckPointer extends CheckPointerClass{ \n   15  \n   16  constructor(DIO, agentId, gamePackage){\n   ..\n  158  \n  159  \n  160: class MechanicalTurkCheckPointer extends CheckPointerClass{ \n  161  \n  162      constructor(gamePackage){\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_DataWriter.js:\n    1: class DataWriter{\n    2      constructor(){\n    3          this.trialData = {}\n    .\n   73  }\n   74  \n   75: class DropboxDataWriter extends DataWriter{\n   76      constructor(DIO, debugSaveDir, saveDir, savePrefix){\n   77          super()\n   ..\n  169  }\n  170  \n  171: class MechanicalTurkDataWriter extends DataWriter{\n  172      constructor(assignmentId, hitId, inSandboxMode){\n  173          super()\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_DiskIO.js:\n    4  \n    5  // Template \n    6: class DiskIO{\n    7      constructor(){\n    8  \n    .\n   50  }   \n   51  \n   52: class S3_IO{\n   53      constructor(){\n   54  \n   ..\n  188  }\n  189  \n  190: class DropboxIO{\n  191  \n  192  \n  ...\n  430  \n  431  \n  432: class LocalStorageIO{\n  433      constructor(){\n  434  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ImageBuffer.js:\n    1: class ImageBuffer { \n    2  \n    3  constructor(DIO){\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n    1: class PlaySpaceClass{\n    2      constructor(playspacePackage){\n    3  \n    .\n   33          }\n   34  \n   35:         this.ActionPoller = new ActionPollerClass(action_event_type, bounds)\n   36:         this.SoundPlayer = new SoundPlayerClass()\n   37          this.periodicRewardIntervalMsec = periodicRewardIntervalMsec \n   38          this.periodicRewardAmount = periodicRewardAmount\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Reinforcer.js:\n    1  // Functions for delivering primary reinforcement\n    2  \n    3: class MonetaryReinforcer{\n    4      constructor(bonus_usd_per_correct){\n    5          this.bonus_total = 0\n    .\n   19  \n   20  \n   21: class JuiceReinforcer{\n   22      constructor(juiceRewardPer1000){\n   23        if (juiceRewardPer1000 != undefined){\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ScreenDisplayer.js:\n    1: class ScreenDisplayer{\n    2      constructor(bounds){\n    3  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_SessionBootStrapper.js:\n    1: class SessionBootStrapper{\n    2      constructor(){\n    3          this.SIO = new S3_IO()\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_SoundPlayer.js:\n    1: class SoundPlayerClass{ \n    2    constructor(){\n    3  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TaskStreamer.js:\n    1: class TaskStreamerClass{\n    2      constructor(gamePackage, IB, CheckPointer){\n    3          this.game = gamePackage['GAME']\n    .\n    5          this.taskSequence = gamePackage['TASK_SEQUENCE']\n    6  \n    7:         this.TG = new TrialGeneratorClass(IB, gamePackage['IMAGEBAGS'], gamePackage['TASK_SEQUENCE'], this.game['onFinish'])\n    8  \n    9          this.CheckPointer = CheckPointer\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TrialGenerator.js:\n    1: class TrialGeneratorClass{\n    2      constructor(IB, imageBags, taskSequence, onFinish){\n    3          this.IB = IB \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_utils.js:\n   27  }\n   28  \n   29: class np{\n   30    static mean(arr){\n   31      var total = 0, i;\n   ..\n  445                  break;\n  446              case 'object':\n  447:                 var objClass = Object.prototype.toString.call(obj).slice(8, -1);\n  448:                 if(objClass === 'Object' || objClass === 'Array') {\n  449                      for(var key in obj) {\n  450                          if(!obj.hasOwnProperty(key)) continue;\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_UX.js:\n    1: class UXclass{\n    2      constructor(){\n    3  \n    .\n    9  }\n   10  \n   11: class MonkeyUX extends UXclass{\n   12      constructor(){\n   13          super()\n   ..\n   73  }\n   74  \n   75: class MechanicalTurkUX extends UXclass{\n   76      constructor(minimumTrials, maximumTrials, bonusUSDPerCorrect){\n   77          super()\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Verifier.js:\n    1: class Verifier{\n    2      constructor(){\n    3          this.verificationLog = {}\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_MechanicalTurk_session.js:\n   28    CheckPointer = new MechanicalTurkCheckPointer(GAME_PACKAGE)\n   29    await CheckPointer.build()\n   30:   TaskStreamer = new TaskStreamerClass(GAME_PACKAGE, IB, CheckPointer)\n   31    await TaskStreamer.build(5)\n   32    DataWriter = new MechanicalTurkDataWriter(SESSION['assignmentId'], SESSION['hitId'], SESSION['inSandboxMode']) \n   ..\n   43      'bonusUSDPerCorrect':ENVIRONMENT['bonusUSDPerCorrect'], \n   44      'juiceRewardPer1000Trials':ENVIRONMENT['juiceRewardPer1000Trials']}\n   45:   Playspace = new PlaySpaceClass(playspacePackage)\n   46    await Playspace.build()\n   47  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   37     UX.updateSessionTextbox(SESSION['agentId'], GAME['gameId'])\n   38  \n   39:    TaskStreamer = new TaskStreamerClass(GAME_PACKAGE, IB, CheckPointer)\n   40     wdm('Building taskstreamer...')\n   41     await TaskStreamer.build(5)\n   ..\n   53    \n   54      wdm('Building playspace...')\n   55:    Playspace = new PlaySpaceClass(playspacePackage)\n   56     await Playspace.build()\n   57     Playspace.toggleBorder(1)\n\n53 matches across 20 files\n\n\nSearching 50 files for \"class np\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_utils.js:\n   27  }\n   28  \n   29: class np{\n   30    static mean(arr){\n   31      var total = 0, i;\n\n1 match in 1 file\n\n\nSearching 51 files for \"get_trial\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n  181  \n  182  while(TaskStreamer.TERMINAL_STATE == false){\n  183:   var trialPackage = await TaskStreamer.get_trial()\n  184  \tvar trialOutcome = await Playspace.run_trial(trialPackage) \n  185    TaskStreamer.update_state(trialOutcome)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_CheckPointer.js:\n  139  }\n  140  \n  141: get_trial_number_task(){\n  142    return this.checkpoint['trialNumberTask']\n  143  }\n  ...\n  188      }\n  189  \n  190:     get_trial_number_task(){\n  191        return 0\n  192      }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TaskStreamer.js:\n   11          // State info\n   12          this.taskNumber = CheckPointer.get_task_number()  \n   13:         this.trialNumberTask = CheckPointer.get_trial_number_task() \n   14          this.trialNumberSession = 0\n   15          this.taskReturnHistory = CheckPointer.get_task_return_history()  \n   ..\n   42      }\n   43  \n   44:     async get_trial(){\n   45          if (this.taskSequence[this.taskNumber]['taskType'] == 'SR'){\n   46              console.log('Executing with sampling weights')\n   47:             var tP = await this.TG.get_trial(this.taskNumber, this.bagSamplingWeights)\n   48          }\n   49          else{\n   50:             var tP = await this.TG.get_trial(this.taskNumber)\n   51          }\n   52          \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TrialGenerator.js:\n   59  \n   60  \n   61:     async get_trial(taskNumber, bagSamplingWeights){\n   62          this.taskNumber = taskNumber\n   63          // Selects the imagebag for the trialPackage based on bagSamplingWeights (if supplied). \n\n8 matches across 4 files\n\n\nSearching 51 files for \"bagSamplingWeights\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n  199          trialOutcome['trialNumberTask'] = TaskStreamer.trialNumberTask \n  200          trialOutcome['trialNumberSession'] = TaskStreamer.trialNumberSession\n  201:         trialOutcome['sampleBagProbabilities'] = TaskStreamer.bagSamplingWeights\n  202          trialOutcome['tStatistic'] = TaskStreamer.tStatistic \n  203          trialOutcome['empiricalEffectSize'] = TaskStreamer.empiricalEffectSize\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TaskStreamer.js:\n   34          this.onLoadState = JSON.parse(JSON.stringify(this.onLoadState))\n   35  \n   36:         this.bagSamplingWeights = undefined\n   37      }\n   38      \n   ..\n   45          if (this.taskSequence[this.taskNumber]['taskType'] == 'SR'){\n   46              console.log('Executing with sampling weights')\n   47:             var tP = await this.TG.get_trial(this.taskNumber, this.bagSamplingWeights)\n   48          }\n   49          else{\n   ..\n   87          var freturn = get_sampling_weights(tk['sampleBagNames'], this.TG.idx2bag, viewingWindowWidth, this.taskReturnHistory, this.taskBagHistory, performanceModulationFactor)\n   88  \n   89:         this.bagSamplingWeights = freturn['samplingWeights']\n   90          this.performancePerBag = freturn['performancePerBag']\n   91          this.tStatistic = freturn['tStatistic']\n   ..\n   98          this.tStatistic_criticalLb = freturn['tStatistic_criticalLb']\n   99  \n  100:         console.log(this.bagSamplingWeights)   \n  101          console.log('t-statistic = ', freturn['tStatistic'], '. ', this.performancePerBag,'abcd = ', this.a, this.b, this.c, this.d)\n  102  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TrialGenerator.js:\n   59  \n   60  \n   61:     async get_trial(taskNumber, bagSamplingWeights){\n   62          this.taskNumber = taskNumber\n   63:         // Selects the imagebag for the trialPackage based on bagSamplingWeights (if supplied). \n   64          // Otherwise, select among the bags with uniform probability. \n   65  \n   66          // returns a trialPackage on demand\n   67          var tk = this.taskSequence[taskNumber]\n   68:         var sampleBagName = np.choice(tk['sampleBagNames'], 1, undefined, bagSamplingWeights)\n   69  \n   70          if (this.trialBuffer[taskNumber] == undefined){\n\n8 matches across 3 files\n\n\nSearching 52 files for \"bagSamplingWeights\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n  199          trialOutcome['trialNumberTask'] = TaskStreamer.trialNumberTask \n  200          trialOutcome['trialNumberSession'] = TaskStreamer.trialNumberSession\n  201:         trialOutcome['sampleBagProbabilities'] = TaskStreamer.bagSamplingWeights\n  202          trialOutcome['tStatistic'] = TaskStreamer.tStatistic \n  203          trialOutcome['empiricalEffectSize'] = TaskStreamer.empiricalEffectSize\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TaskStreamer.js:\n   34          this.onLoadState = JSON.parse(JSON.stringify(this.onLoadState))\n   35  \n   36:         this.bagSamplingWeights = undefined\n   37      }\n   38      \n   ..\n   45          if (this.taskSequence[this.taskNumber]['taskType'] == 'SR'){\n   46              console.log('Executing with sampling weights')\n   47:             var tP = await this.TG.get_trial(this.taskNumber, this.bagSamplingWeights)\n   48          }\n   49          else{\n   ..\n   87          var freturn = get_sampling_weights(tk['sampleBagNames'], this.TG.idx2bag, viewingWindowWidth, this.taskReturnHistory, this.taskBagHistory, performanceModulationFactor)\n   88  \n   89:         this.bagSamplingWeights = freturn['samplingWeights']\n   90          this.performancePerBag = freturn['performancePerBag']\n   91          this.tStatistic = freturn['tStatistic']\n   ..\n   98          this.tStatistic_criticalLb = freturn['tStatistic_criticalLb']\n   99  \n  100:         console.log(this.bagSamplingWeights)   \n  101          console.log('t-statistic = ', freturn['tStatistic'], '. ', this.performancePerBag,'abcd = ', this.a, this.b, this.c, this.d)\n  102  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TrialGenerator.js:\n   59  \n   60  \n   61:     async get_trial(taskNumber, bagSamplingWeights){\n   62          this.taskNumber = taskNumber\n   63:         // Selects the imagebag for the trialPackage based on bagSamplingWeights (if supplied). \n   64          // Otherwise, select among the bags with uniform probability. \n   65  \n   66          // returns a trialPackage on demand\n   67          var tk = this.taskSequence[taskNumber]\n   68:         var sampleBagName = np.choice(tk['sampleBagNames'], 1, undefined, bagSamplingWeights)\n   69  \n   70          if (this.trialBuffer[taskNumber] == undefined){\n\n8 matches across 3 files\n\n\nSearching 52 files for \"class np\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_utils.js:\n   27  }\n   28  \n   29: class np{\n   30    static mean(arr){\n   31      var total = 0, i;\n\n1 match in 1 file\n\n\nSearching 52 files for \"ée\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/sounds/church_bell.wav:\n    <binary>\n\n1 match in 1 file\n\n\nSearching 52 files for \"ee\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n    5  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    6  <meta http-equiv=\"Expires\" content=\"0\"/>\n    7: <link rel=\"stylesheet\" type=\"text/css\" href=\"mkturk_style.css\">\n    8  \n    9  <form style=\"display: none;\" id=\"MechanicalTurk_SubmissionForm\" action=\"https://www.mturk.com/mturk/externalSubmit\" method=\"post\">\n   ..\n   14  \n   15  <meta name=\"mobile-web-app-capable\" content=\"yes\"> \n   16: <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n   17  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\"> \n   18  <!-- do not allow window rescaling.  To avoid window rescaling in portrait mode, added with=device-width from http://stackoverflow.com/questions/22771523/ipad-w-retina-safari-reported-dimensions-in-landscape-make-no-sense. Also, removes 300-350ms tap delay (https://developers.google.com/web/updates/2013/12/300ms-tap-delay-gone-away) -->\n   ..\n   47  <div id=\"MechanicalTurkInstructionsSplash\">\n   48    <span id='InstructionSplashText'> Loading instructions... </span>\n   49:   <button onclick=\"toggleElement(0, 'MechanicalTurkInstructionsSplash'); FLAGS.clicked_close_instructions(true)\" id='CloseInstructionsButton' disabled> Loading... </button>\n   50  </div>\n   51  \n   52: <div id=\"MechanicalTurkCursorDeviceSelectionScreen\">\n   53  \n   54  \n   55    <input type=\"image\" class='DeviceButton' id='MouseImage'  style=\"\" id=\"MouseImage\" src=\"tutorial_images/mouse.png \" alt=\"Mouse\" onclick=\"setDeviceSelection(this, 'mouse')\" />\n   56    <input type=\"image\"  class='DeviceButton' id='TrackPadImage' src=\"tutorial_images/trackpad.png \" alt=\"Trackpad\" onclick=\"setDeviceSelection(this, 'trackpad')\" />\n   57:   <input type=\"image\"  class='DeviceButton' id = 'TabletImage' src=\"tutorial_images/tablet.png \" alt=\"Tablet\" onclick=\"setDeviceSelection(this, 'touchscreen')\" />\n   58  \n   59    <span>\n   60:   <button style=\"text-align:center; width:30%; height:10%; position:absolute; margin-top:5%; top: 80%; left:35%;\"  onclick=\"toggleElement(0, 'MechanicalTurkCursorDeviceSelectionScreen'); FLAGS.clicked_device_selection(UX.MechanicalTurk_DeviceSelected)\" id='CloseDeviceSelectionButton' disabled> <i>Make selection...</i> </button>\n   61    </span>\n   62  </div>\n   63  \n   64: <div id=\"MechanicalTurkHandSelectionScreen\">\n   65  \n   66    <input type=\"image\" class='HandButton' id='LeftHandImage'  style=\"\" id=\"MouseImage\" src=\"tutorial_images/left_hand.png \" alt=\"Lefthanded\" onclick=\"setHandSelection(this, 'left')\" />\n   ..\n   68  \n   69    <span>\n   70:   <button style=\"text-align:center; width:30%; height:10%; position:absolute; margin-top:5%; top: 80%; left:35%;\"  onclick=\"toggleElement(0, 'MechanicalTurkHandSelectionScreen'); FLAGS.clicked_hand_selection(UX.MechanicalTurk_Handedness)\" id='CloseHandSelectionButton' disabled> <i>Make selection...</i> </button>\n   71    </span>\n   72  </div>\n   ..\n   82  \n   83  <script src=\"mkturk_installsettings.js\"></script>\n   84: <script src=\"javascript_utils/seedrandom.js\" type=\"text/javascript\"></script>\n   85  <script src=\"mkturk_ImageBuffer.js\" type=\"text/javascript\"></script>\n   86  <script src=\"mkturk_bluetooth.js\" type=\"text/javascript\"></script>\n   ..\n   95  <script src=\"mkturk_ActionPoller.js\" type=\"text/javascript\"></script>\n   96  <script src=\"mkturk_Reinforcer.js\" type=\"text/javascript\"></script>\n   97: <script src=\"mkturk_ScreenDisplayer.js\" type=\"text/javascript\"></script>\n   98  <script src=\"mkturk_amazon_utils.js\" type=\"text/javascript\"></script>\n   99  <script src=\"mkturk_Verifier.js\"></script>\n  ...\n  102  <script src=\"mkturk_defaultHIT_failsafe.js\" type=\"text/javascript\"></script>\n  103  \n  104: <script src=\"mkturk_screenfunctions.js\"></script>\n  105  <script src=\"unit_tests.js\"></script>\n  106  <script src=\"mkturk_BiasDetection.js\"></script>\n  ...\n  139    var freturn = await setup_upstairs_session(sessionPackage)\n  140  }\n  141: // error must be happening before this point, \"\\\"TypeError: Cannot read property 'constructor' of undefined\\\"\"\n  142  // Unpack objects\n  143  var TaskStreamer = freturn['TaskStreamer']\n  ...\n  177  // Main trial loop\n  178  console.log('ENTERING MAIN TRIAL STATE MACHINE')\n  179: console.timeEnd('Done setting up')\n  180  wdm('Entering main trial loop...')\n  181  \n  ...\n  204    // Assume failure took place in mechanical turk session (this code is irrelevant for inlab)\n  205    // Submit the error message\n  206:   await sleep(1500)\n  207  \n  208    try{\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ActionPoller.js:\n   84  \n   85          this.handleTouchEvent = function(event){\n   86:             // https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Supporting_both_TouchEvent_and_MouseEvent\n   87              event.preventDefault() // prevents downstream call of click listener (default for browsers to ensure compatibility with mouse-only websites)\n   88              var t = Math.round(performance.now()*1000)/1000\n   ..\n  120          }\n  121  \n  122:         this.handleMouseEvent = function(event){\n  123              var t = Math.round(performance.now()*1000)/1000\n  124              var x = event.pageX - _this.leftBound \n  ...\n  128              }\n  129  \n  130:         this.recordMouseEvent = function(event){\n  131              var t = Math.round(performance.now()*1000)/1000\n  132              var x = event.pageX - _this.leftBound \n  ...\n  232              }\n  233              else if(event_types[i] == 'mousemove' || event_types[i] == 'mouseup'){\n  234:                 window.addEventListener(event_types[i], this.handleMouseEvent)\n  235              }\n  236              \n  ...\n  251                  }\n  252                  else if(e == 'mousemove' || e == 'mouseup'){\n  253:                     window.addEventListener(e, this.recordMouseEvent)\n  254                  }\n  255              }\n  ...\n  267          for(var i = 0; i < event_types.length; i++){\n  268              if(event_types[i] == 'touchmove' || 'touchstart' || 'touchend'){\n  269:                 window.removeEventListener(event_types[i], this.handleTouchEvent, {passive:true})\n  270              }\n  271              else if (event_types[i] == 'mousemove' || event_types[i] == 'mouseup'){\n  272:                 window.removeEventListener(event_types[i], this.handleMouseEvent)\n  273              }\n  274              \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_bluetooth.js:\n    9  //Performing operations that require explicit user interaction on touchstart events is deprecated\n   10  // and will be removed in M54, around October 2016.\n   11: // See https://www.chromestatus.com/features/5649871251963904 for more details.\n   12  \n   13  //----retry on disconnect\n   ..\n  229  }\n  230  \n  231: // This function keeps calling \"toTry\" until promise resolves or has\n  232  // retried \"max\" number of times. First retry has a delay of \"delay\" seconds.\n  233  // \"success\" is called upon success.\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_CheckPointer.js:\n  198        return []\n  199      }\n  200:     get_samples_seen_history(){\n  201          return {}\n  202      }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_DataWriter.js:\n  108      start_polling(){\n  109  \n  110:         // If no trial has been done in the past T1 seconds, write out once. \n  111  \n  112          // Then after that, write out periodically every T2 seconds. \n  ...\n  118  \n  119          this.pollPeriodMsec = 30000\n  120:         this.latentSaveModeTimeoutMsec = 60000 // If it's been this.latentSaveModeTimeout msec, start saving every \n  121          this.latentSavePeriodMsec = 3 * 60000\n  122          this.inLatentMode = false\n  ...\n  125  \n  126          var pollFunction = function(){\n  127:             // If it's been latentSaveModeTimeoutMsec since the last trial, save and enter latent mode.\n  128              if(performance.now() - _this.lastTrialTimestamp >= _this.latentSaveModeTimeoutMsec){\n  129                  if(_this.inLatentMode == false){\n  ...\n  214              // todo: write out to localstorage the data\n  215          }\n  216:         await sleep(1500)\n  217      }\n  218  }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_defaultHIT_failsafe.js:\n   11          \"minimumTrials\":10,\n   12          \"maximumTrials\":10,\n   13:         \"randomSeed\":undefined,\n   14          }, \n   15  'TASK_SEQUENCE':[{\n   ..\n   19                  \"fixationXCentroid\":0.5,\n   20                  \"fixationYCentroid\":0.8,\n   21:                 \"fixationDiameterDegrees\":6,\n   22                  \"sampleXCentroid\":0.5,\n   23                  \"sampleYCentroid\":0.5,\n   24:                 \"sampleDiameterDegrees\":8,\n   25                  \"actionXCentroid\":[0.2, 0.8], \n   26                  \"actionYCentroid\":[0.8, 0.8],\n   27:                 \"actionDiameterDegrees\":[6, 6],\n   28                  \"choiceXCentroid\":[0.2, 0.8],\n   29                  \"choiceYCentroid\":[0.8, 0.8],\n   30:                 \"choiceDiameterDegrees\":[6, 6],\n   31                  \"sampleOnMsec\":200, \n   32                  \"sampleOffMsec\":0,\n   ..\n   46              }],\n   47  'ENVIRONMENT':{\n   48:               'playspace_degreesVisualAngle':45,\n   49                'playspace_verticalOffsetInches':0, \n   50                'playspace_viewingDistanceInches':8, \n   51:               'screen_virtualPixelsPerInch':143.755902965,\n   52                'primary_reinforcer_type':'juice', \n   53                'action_event_type':['mouseup', 'touchstart', 'touchmove'],\n   ..\n   69              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_eba8854a4c1076076447abd554660a2ddd552cff_ty0.90092_tz0.13545_rxy48.0418_rxz-103.6043_ryz18.4265_s1.5267.png\",\n   70              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_90cdedd56404b506c26322ac09b78d7338b374cc_ty-0.26839_tz-0.23021_rxy-146.8699_rxz-13.1927_ryz-30.1389_s1.4655.png\",\n   71:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_f0d17194adee54fc8d43316a7fb9be70eaf8c660_ty-0.21267_tz-0.57575_rxy-81.6388_rxz98.0067_ryz74.8547_s0.91218.png\",\n   72              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_e9418d145baccfe9410efeff879e0b43ed177067_ty0.80981_tz-0.32363_rxy108.579_rxz152.6583_ryz86.5673_s1.6771.png\",\n   73              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_d60cc5a55f7a85d00dd4dd1b759057768e157966_ty-0.029344_tz-0.69909_rxy-47.9752_rxz-153.436_ryz149.292_s1.578.png\",\n   74              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_9bf46975c8af02b5e0a220f27e580eb7b4901975_ty-0.20844_tz-0.15878_rxy-150.7486_rxz25.5371_ryz24.1532_s0.70881.png\",\n   75:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_bc0fee5c67d7d17e253bbc25cf9df905eafcad85_ty0.80902_tz-0.10888_rxy-140.3984_rxz71.86_ryz52.9528_s1.6953.png\",\n   76              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_f46be8d21d5fa6ed0a30ca52f83a66131a149138_ty-0.23876_tz0.35855_rxy-24.0813_rxz-128.679_ryz1.0151_s0.95987.png\",\n   77              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_df93a68b946336082036803c917995db0daf8ab6_ty-0.22811_tz0.89331_rxy-21.707_rxz-117.8184_ryz69.8945_s0.83873.png\",\n   ..\n   79              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_6d502d0c0c694f1d1faf4c57641f323e70217321_ty0.90151_tz0.85266_rxy-105.9475_rxz146.1449_ryz-10.1153_s1.1621.png\",\n   80              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_146b22929239eae3ea15a719126fbe05997c8794_ty0.56375_tz-0.18084_rxy77.7466_rxz170.0033_ryz-0.1041_s1.6767.png\",\n   81:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_48cdfb70eef713cb4f0a2571148b657ddbffd99e_ty-0.2215_tz0.33485_rxy159.0081_rxz137.7786_ryz177.2129_s0.887.png\",\n   82              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_ef976e667848c68f86678f70a5c4b7243b1862e8_ty0.91109_tz0.096677_rxy-94.6053_rxz173.3476_ryz-42.7307_s1.6469.png\",\n   83:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_e0a8cf47c9eeca15b39de711a39bd9795b522ef2_ty0.60456_tz-0.98319_rxy132.0536_rxz-10.9581_ryz-142.352_s0.99636.png\",\n   84              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_e69ae3ba20bbd30002f932db7204671b0a610819_ty0.8835_tz-0.84105_rxy-130.9017_rxz153.4899_ryz46.9611_s0.81823.png\",\n   85              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_32fbae81e3ae53075aaf556bc92e4b0e48015f74_ty-0.19101_tz-0.34769_rxy-119.8228_rxz84.4256_ryz-100.8023_s1.0309.png\",\n   ..\n  100              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_6f76087662abda5920559813e76b63a1acd5e0af_ty0.044878_tz-0.15862_rxy151.4529_rxz102.9329_ryz109.9206_s0.85313.png\",\n  101              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_891da25def71d82e687a0709768da96649888178_ty-0.74246_tz-0.70332_rxy98.4061_rxz46.3606_ryz32.386_s1.3752.png\",\n  102:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_26945528eb62d72a7e8f87546e3815f5a5feeb4d_ty-0.59142_tz-0.075843_rxy-65.8501_rxz-3.6438_ryz78.1395_s0.99782.png\",\n  103              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_3386fcfe2d418cb909622652ebb5cafb41500b3a_ty-0.57759_tz-0.83557_rxy-174.0066_rxz68.6362_ryz165.8452_s0.80208.png\",\n  104              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_649c2ad2d0b52569006efe6ab67425b0d5b73727_ty-0.56543_tz0.11699_rxy-153.281_rxz-110.2779_ryz-56.3656_s0.93861.png\",\n  ...\n  114              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_9b4b1349128883bf6b780443f5e828681e1dff8e_ty-0.7238_tz0.14908_rxy86.9801_rxz-165.3636_ryz62.1119_s1.456.png\",\n  115              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_d73015aaf44b0d44e769ec3f56cda20dbe977d35_ty-0.35175_tz-0.7409_rxy-50.5966_rxz43.1387_ryz-147.2612_s1.3902.png\",\n  116:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_d3726b3dc60a84c290da7eeea0fe73c6b9edb452_ty0.4211_tz0.12059_rxy79.6504_rxz-84.1455_ryz35.3958_s1.3547.png\",\n  117              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_f2e64c0d55d2e9a60bd278d686b28b9d4ccd5d20_ty0.5694_tz-0.77054_rxy28.0661_rxz-105.0795_ryz107.0738_s1.0619.png\",\n  118              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_31f5712535974561548677a3bb07e7ec2da52028_ty0.055154_tz0.50552_rxy71.5045_rxz-157.2351_ryz126.8381_s1.0617.png\",\n  119              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_1cf5938e233690f1f0457d39669ba2880f416a6a_ty0.39308_tz0.29694_rxy-48.7886_rxz-157.4179_ryz-178.8517_s1.1122.png\",\n  120              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_ef2907f688fa7425835564a8e7de3e211020d78a_ty0.17834_tz0.9974_rxy-22.1614_rxz23.183_ryz126.315_s0.98141.png\",\n  121:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_8deec2f87521a0e57f5591899da4bf1ddd116fa9_ty-0.99366_tz0.3997_rxy-20.3863_rxz18.9868_ryz50.9168_s1.2112.png\",\n  122:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_eb4aa8ac6adbaedb273eeedd6a434f501fbd8039_ty-0.34705_tz-0.677_rxy-49.4605_rxz-102.6812_ryz-26.2697_s1.5328.png\",\n  123:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_a8ac64762ffc7f02eed3ccf386dde76b006aaf23_ty0.052696_tz-0.11802_rxy26.9697_rxz115.7762_ryz138.5403_s1.1357.png\",\n  124              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_7f942833102a67dd8c55830757b60401e0a23892_ty-0.52794_tz0.23923_rxy95.4418_rxz-143.3059_ryz-164.8684_s1.3222.png\",\n  125              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_c9026cbae40b4e08c567bcf34eaca1b53cdff5be_ty0.096849_tz-0.64265_rxy-96.9902_rxz-154.2579_ryz68.3989_s0.77348.png\",\n  126              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_26be142bcad23a23b0d446b63195a5fef0c4e9e4_ty-0.17762_tz-0.95341_rxy29.8564_rxz38.6257_ryz-69.242_s1.4762.png\",\n  127:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_962c4a004ea79d82c3aac84ca5322ee258e19e2e_ty0.99082_tz0.6033_rxy94.2443_rxz-133.4363_ryz-54.7427_s1.3252.png\",\n  128              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_f9818d2952c0df1363507dcdf02aa1798e6ea196_ty0.64719_tz0.23265_rxy179.3012_rxz146.4638_ryz-26.0414_s1.4332.png\",\n  129              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_6c0368dbafe15c30a4a07b1f5ab9973aae99e641_ty-0.11576_tz-0.11081_rxy16.5816_rxz-82.0909_ryz84.2368_s0.98824.png\",\n  130:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_ee04136756101446624fd62a9e21390dda9e5928_ty-0.44632_tz0.98929_rxy-59.4556_rxz-131.1084_ryz-137.7034_s1.0669.png\",\n  131              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_5da7d37c82e86e3841e989836f3f7520d00969f0_ty0.15108_tz0.64741_rxy88.6213_rxz119.8827_ryz167.4994_s0.76521.png\",\n  132              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_2c70d3fb1ceff296ec332521c6a46a8632c9cb49_ty-0.27641_tz-0.72336_rxy-62.4333_rxz46.0239_ryz99.1388_s0.76696.png\",\n  ...\n  136              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_dd881889127dae914dab36b970a1114e5508577a_ty-0.96859_tz0.099617_rxy-28.3423_rxz-118.2753_ryz-128.3401_s1.0044.png\",\n  137              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_f1ce8cbd91eac606563d42603089f8178210739b_ty-0.8565_tz0.51071_rxy155.6689_rxz9.2532_ryz174.8227_s0.92569.png\",\n  138:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_8957eedfc480adf6bc8e36f2dc1d48fdce768c28_ty-0.22964_tz-0.71502_rxy64.4366_rxz31.7022_ryz-151.4336_s1.2802.png\",\n  139:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_6b3ae9660851a2ee96a0ca88fcae8df8464b58df_ty0.75572_tz-0.56567_rxy170.9712_rxz176.5697_ryz-19.8122_s0.70686.png\",\n  140              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_b8c43c5b94e9e1def7e70ff245bcca2416f68da3_ty0.57584_tz0.78807_rxy163.9896_rxz-26.4729_ryz66.0427_s1.2691.png\",\n  141              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_bcb26ba8ae68bb7be5eae60b006cedaea824a71d_ty0.55561_tz-0.63884_rxy-124.9419_rxz101.1638_ryz-174.0007_s1.6316.png\",\n  ...\n  145              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_2cc0e4e5e4e9d465f029fa0bafe29d0c59dabcef_ty-0.47089_tz0.35609_rxy35.3153_rxz104.5668_ryz12.417_s1.4343.png\",\n  146              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_a8dddabd6e3c55dc4dc02bc43aa8946265efb7dd_ty0.69727_tz-0.62537_rxy-143.8267_rxz31.303_ryz176.9065_s1.0168.png\",\n  147:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_77198b82a662a2bc4cd116abaee7041daa4c566b_ty-0.56764_tz-0.48895_rxy138.9806_rxz135.1347_ryz-173.221_s1.0099.png\",\n  148              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_21c2411c70e74c451eac10ac8b4ad142d65b3b68_ty-0.49127_tz-0.10653_rxy-29.3357_rxz-24.2599_ryz-156.9337_s1.1557.png\",\n  149              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_8e551e9c65fb13c4f67402280854c690ad153131_ty-0.99455_tz-0.17228_rxy122.5603_rxz165.67_ryz142.967_s0.7535.png\",\n  150              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_1ecb0195bcd337ab90d63a563e0e946c3434d723_ty-0.24537_tz0.7986_rxy62.3594_rxz104.3291_ryz65.4954_s1.5962.png\",\n  151              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_91c5c706e14df6ce8c56c9b061f9188d983689f7_ty-0.17823_tz-0.51572_rxy-101.0466_rxz159.743_ryz175.2195_s1.1775.png\",\n  152:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_c76c2909ee785327593a3acc243f11bedad4d981_ty-0.6984_tz0.43901_rxy101.8521_rxz82.08_ryz148.2382_s1.0811.png\",\n  153              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_93afa664698ca6f00113f56fbb38728cbf884a1c_ty-0.30789_tz-0.20592_rxy-14.964_rxz110.0323_ryz21.8856_s0.72094.png\",\n  154              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_airplane_679d405fb8fc7c09fd3ff361cd41a061ad3a363a_ty0.75269_tz-0.9197_rxy-82.4332_rxz-12.8398_ryz-39.3961_s1.027.png\",\n  ...\n  166              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_c9950f70b9c1be00a1208c96a2051c4cdb943cd6_ty-0.96052_tz-0.92995_rxy9.8278_rxz-60.7918_ryz-88.5267_s0.96959.png\",\n  167              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_6fe5a2fe52bd2f2b2cc3cd49204f3f656728dfc2_ty0.45317_tz-0.088483_rxy99.435_rxz-109.045_ryz-92.3169_s1.5101.png\",\n  168:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_323167cc156d8ae3ee2151986a3dd17b5d2e4124_ty0.70803_tz-0.19229_rxy17.6775_rxz-104.7604_ryz74.5916_s1.1525.png\",\n  169              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_1b89d6b2928cd3a7ad38667adbd5859c46a2ba20_ty0.69033_tz-0.41904_rxy-149.0777_rxz-2.9524_ryz38.706_s1.3503.png\",\n  170              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_b7acf531733b539e697553ba2ae0c2b206c297f0_ty0.30776_tz-0.87428_rxy-28.6588_rxz-154.579_ryz18.7663_s0.8131.png\",\n  ...\n  174              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_97e8bda82959efa57266430cc17853869268186e_ty-0.59435_tz-0.68414_rxy-38.1883_rxz-47.1146_ryz-69.507_s1.2244.png\",\n  175              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_b479182c1667390be577bc6b0ce094b04e2dc6ac_ty-0.077201_tz-0.5731_rxy109.2017_rxz-142.4638_ryz-152.9803_s1.5719.png\",\n  176:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_4c4d56b369130b03ee9db133c1b37d1318355bc5_ty0.22003_tz0.4415_rxy-170.8608_rxz178.5598_ryz-27.5903_s1.4784.png\",\n  177              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_a05792ba2c67d18e060b9b28d31f282083462ca9_ty0.79477_tz-0.075229_rxy45.0619_rxz-39.3524_ryz-177.8878_s0.91966.png\",\n  178              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_33aff113384100844730347e9f0c5e377056f727_ty-0.45041_tz0.84892_rxy-140.3897_rxz133.733_ryz-40.014_s1.1463.png\",\n  ...\n  195              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_cc5a874d5bcba00f00aa8230626b56c4939d72d4_ty0.80974_tz-0.29571_rxy5.2378_rxz8.705_ryz-0.22009_s0.94409.png\",\n  196              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_d826b7ffb5c7e646ba2333fec654218d81de0e3f_ty0.78133_tz0.82781_rxy160.6102_rxz-147.9787_ryz110.991_s1.1025.png\",\n  197:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_ab1acbc2c7d0bf8be7e8c89a6ee29c3cb424879f_ty-0.27649_tz-0.91916_rxy-112.0872_rxz143.5323_ryz-65.7952_s1.0698.png\",\n  198              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_60201576b1d09a0f1995f34ec71ce79e215073a7_ty0.027295_tz0.19563_rxy-9.4773_rxz113.0087_ryz19.9831_s0.93522.png\",\n  199              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_8f14433abeb67b3561ced09efb552948b4e0d4f7_ty-0.00060502_tz-0.78688_rxy-109.1359_rxz-160.3852_ryz77.6446_s1.1384.png\",\n  200              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_e35d683d9ed92adea925906475a97cd7b8d89506_ty0.040845_tz0.52644_rxy177.0841_rxz-78.6472_ryz12.6738_s1.4598.png\",\n  201:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_ca10205df418812af857cd7b403eedc184f9f6b7_ty-0.17095_tz0.34687_rxy172.0643_rxz-137.9646_ryz32.8979_s1.3568.png\",\n  202              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_b8c0adeca1908c8f395418bd44acbbb412daaa18_ty-0.90383_tz-0.92278_rxy-177.0356_rxz157.0159_ryz-69.1682_s1.0218.png\",\n  203              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_ac76d5a2a6f4dfff8dbd6509a071c1f608b4c13f_ty0.35783_tz-0.97836_rxy-144.0213_rxz-11.5186_ryz-87.6453_s0.90034.png\",\n  ...\n  211              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_00f4246ba524c4a38200a60f154ce0e5ab0a794c_ty0.30271_tz-0.99877_rxy127.9949_rxz-3.2262_ryz154.299_s1.1705.png\",\n  212              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_b9c55c5d79b2ac8f1bd316ca6a5b1fcae668a72b_ty-0.26499_tz0.065438_rxy20.4702_rxz40.6045_ryz138.2737_s1.6319.png\",\n  213:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_4251245c3ee381c97c96ad3065aa46601c251c2d_ty-0.26524_tz0.7646_rxy-85.21_rxz-49.8733_ryz-140.6055_s1.08.png\",\n  214              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_59edd52420012dfbabb484b8dd526dce3b86f50f_ty0.54104_tz0.14547_rxy-89.145_rxz83.7224_ryz-19.6638_s0.9526.png\",\n  215:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_eefb160995f298683cf46f8e1fb40bc585cc19ed_ty-0.49164_tz-0.73226_rxy34.8208_rxz61.0899_ryz144.8835_s1.5695.png\",\n  216              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_5390a500d4bfc25e380efe3ccc61e1905da55874_ty0.54708_tz-0.46519_rxy-119.7877_rxz78.5739_ryz37.8472_s0.99954.png\",\n  217              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_769f56182104d218e9df44cd6b6b39627c5a1e0a_ty-0.95568_tz-0.8382_rxy-40.3247_rxz95.4934_ryz163.9975_s0.7849.png\",\n  ...\n  221              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_3ad6f1b64c7e4339889c2720b44a10f686068125_ty-0.505_tz0.82585_rxy-55.6983_rxz73.1862_ryz8.8239_s1.1048.png\",\n  222              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_3e654d6ccc591c749382aef6f7f7f9b6ef314dc7_ty0.20423_tz-0.11576_rxy-1.0834_rxz98.6762_ryz-102.4808_s0.80567.png\",\n  223:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_bcd6ee444cae67175e0e5e988b44f57c3f4490fa_ty-0.50444_tz0.19349_rxy88.9553_rxz-147.9182_ryz15.8863_s1.0338.png\",\n  224              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_773b7cc996a52b09ab4c16320d0d35cb2f9f3fa5_ty0.12008_tz-0.29799_rxy-76.1353_rxz154.4563_ryz87.1528_s1.68.png\",\n  225              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_acce408d89010e61e9de5dfb6e925ec11eaf6b55_ty-0.64356_tz-0.59436_rxy110.2362_rxz72.4756_ryz98.1301_s0.73673.png\",\n  ...\n  235              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_753f0f9b17a7060557876df96f45808bb71a0f69_ty-0.72289_tz0.75691_rxy8.1908_rxz161.1148_ryz-96.8024_s1.3225.png\",\n  236              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_4623d436e1a25214481f9fb2220c2a38b73d0692_ty-0.63877_tz0.38777_rxy-23.2303_rxz-47.0845_ryz-42.7022_s0.88353.png\",\n  237:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_9038eebbb2542df292cc4b711901dec7b4114c54_ty0.37937_tz0.96303_rxy-97.6771_rxz-57.8593_ryz34.645_s1.0328.png\",\n  238:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_79a0d0437acf62ee8e6875ddc7594ac990ba3192_ty-0.80806_tz-0.032657_rxy104.6687_rxz-120.6195_ryz152.5319_s0.72244.png\",\n  239              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_a70d6fdf55c6a4693b6833402b943034a5e864d3_ty0.69444_tz0.48791_rxy-114.4916_rxz94.0809_ryz124.5613_s1.0866.png\",\n  240              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_a16bd41501d36582a895e47def2aafc130c6e435_ty0.84217_tz-0.41029_rxy110.6512_rxz-29.4153_ryz169.0584_s1.5958.png\",\n  ...\n  242              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_4a20d833d86ca773c327f431c9dcd818fdf9b7b7_ty0.21928_tz0.31715_rxy51.8669_rxz-64.7861_ryz163.5586_s1.4971.png\",\n  243              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_e36cadb7155c869b3ac90a53106bda9a22f42aa4_ty0.031211_tz-0.59774_rxy-92.03_rxz146.42_ryz6.8757_s1.6391.png\",\n  244:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_311988a84bee871e161f704b0a4380bb0879c9eb_ty-0.44221_tz-0.7733_rxy83.8163_rxz170.5038_ryz71.7127_s0.89141.png\",\n  245              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_f7f1beca47a16da983d3f2e7fe894b67c798b560_ty0.010436_tz-0.7596_rxy8.5274_rxz153.9317_ryz-98.7233_s1.6723.png\",\n  246              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_4c0f2dbafa20c41347557902413e2c01b699d7f8_ty0.052918_tz0.32561_rxy175.1749_rxz3.1298_ryz15.1421_s0.74814.png\",\n  247              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_0785492cadc030dbd8e325d6319254dc5d13ce9a_ty0.82606_tz0.476_rxy-47.9645_rxz153.2827_ryz101.3749_s0.85756.png\",\n  248:             \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_a5f55adaee2b47b80d1da250d43f14f1903100da_ty0.14965_tz-0.33332_rxy-70.1339_rxz57.0863_ryz-90.2256_s1.4356.png\",\n  249              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_e91fd3139b27d0d0ec6802a74d391689e82534ae_ty-0.71532_tz0.80301_rxy11.6303_rxz-31.6227_ryz-110.0704_s1.2026.png\",\n  250              \"https://s3.amazonaws.com/milresources/Images/MonkeyTurkSets/objectome/images/objectome_ant_9e06bcb8615fdd7035b49cb0df8928fb7c802143_ty0.32825_tz0.13164_rxy-172.0394_rxz-19.8267_ryz-11.3835_s0.98108.png\",\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_DiskIO.js:\n    1: // Core disk I/O capabilities that are needed to run the task. \n    2  \n    3  //return whether user was redirected here after authenticating\n    .\n  149          xhttp.send();\n  150          var s = await p\n  151:         console.timeEnd('Downloaded textfile at ' + text_url)\n  152          return s\n  153      }\n  ...\n  204          var accessToken = await LocalStorageIO.load_string('_dbxAccessToken')\n  205          \n  206:         if(accessToken.length<4){ // need a better check for nonsense; add dialogue \n  207              var dbx = new Dropbox.Dropbox({clientId: INSTALL_SETTINGS.dropboxClientId});\n  208              var dbx_authUrl = dbx.getAuthenticationUrl(DBX_REDIRECT_URI);    \n  209:             window.location.href = dbx_authUrl //send to Dropbox sign-in screen\n  210          }\n  211          else{\n  ...\n  225          this.get_meta = this._get_meta.bind(this)\n  226          this.get_modification_timestamp = this._get_modification_timestamp.bind(this)\n  227:         // Need to .bind, because \"this\" changes its meaning depending on the context in which \n  228          // a DIO function (or any function) is called. Binding makes it so that \"this\"\n  229          // always refers to the DIO object, not the \"this\" of the particular moment (context). \n  ...\n  336          // Loads and returns a single image located at imagepath into an Image()\n  337          // Upon failure (e.g. from Dropbox API limit), will retry up to MAX_RETRIES. \n  338:         // Will wait between retries with linear increase in waittime between tries. \n  339          var _this = this\n  340          var p = new Promise(\n  ...\n  342                  try{\n  343                      var MAX_RETRIES = 5 \n  344:                     var backoff_time_seed = 500 // ms; is multiplied by retry number. \n  345                      var retry_number = 0; \n  346                      try{\n  ...\n  362                          console.log(error)\n  363                          console.log('On retry '+retry_number)\n  364:                         sleep(backoff_time_seed * retry_number)\n  365                          //continue\n  366                      }   \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ImageBuffer.js:\n   11  \t// Todo: double buffer. Currently do not do anything.\n   12  \tthis.num_elements_in_cache = 0; // tracking variable\n   13: \tthis.max_buffer_size = 2400; // (for now, arbitrary) number of unique images to keep in buffer\n   14  }\n   15  \n   ..\n  111  \t\tif (this.num_elements_in_cache > this.max_buffer_size){\n  112  \n  113: \t\t\tconsole.log('Exceeded max buffer size: '+this.num_elements_in_cache+'/'+this.max_buffer_size)\n  114  \t\t\t// Get delete pool \n  115  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n    2      constructor(playspacePackage){\n    3  \n    4:         var playspace_degreesVisualAngle = playspacePackage['playspace_degreesVisualAngle'] \n    5          var playspace_verticalOffsetInches = playspacePackage['playspace_verticalOffsetInches']\n    6          var playspace_viewingDistanceInches = playspacePackage['playspace_viewingDistanceInches']\n    7:         var screen_virtualPixelsPerInch = playspacePackage['screen_virtualPixelsPerInch']\n    8          var primary_reinforcer_type = playspacePackage['primary_reinforcer_type'] \n    9          var action_event_type = playspacePackage['action_event_type'] \n   ..\n   14          this.viewingDistanceInches = playspace_viewingDistanceInches\n   15          this.viewingOffsetInches = playspace_verticalOffsetInches // Todo: not implemented yet \n   16:         this.playspaceSizeDegrees = playspace_degreesVisualAngle\n   17:         this.virtualPixelsPerInch = screen_virtualPixelsPerInch\n   18  \n   19:         this.playspaceSizePixels = this.deg2pixels(this.playspaceSizeDegrees)\n   20  \n   21          var bounds = this.getPlayspaceBounds()    \n   22:         this.ScreenDisplayer = new ScreenDisplayer(bounds)\n   23          \n   24          if (primary_reinforcer_type == 'juice'){\n   ..\n   54          this.attachWindowResizeMonitor()\n   55          await this.SoundPlayer.build()\n   56:         await this.ScreenDisplayer.build()\n   57          \n   58      }\n   ..\n   67          var fixationXCentroidPixels = this.xprop2pixels(trialPackage['fixationXCentroid'] )\n   68          var fixationYCentroidPixels = this.yprop2pixels(trialPackage['fixationYCentroid'] )\n   69:         var fixationDiameterPixels = this.deg2pixels(trialPackage['fixationDiameterDegrees'] )\n   70  \n   71  \n   72          var sampleXCentroidPixels = this.xprop2pixels(trialPackage['sampleXCentroid'])\n   73          var sampleYCentroidPixels = this.yprop2pixels(trialPackage['sampleYCentroid'])\n   74:         var sampleDiameterPixels = this.deg2pixels(trialPackage['sampleDiameterDegrees'])\n   75  \n   76          var fixationFramePackage = {\n   ..\n   84          }\n   85          \n   86:         await this.ScreenDisplayer.bufferFixation(fixationFramePackage)\n   87  \n   88          // Stimulus sequence\n   ..\n   91          var choiceXCentroidPixels = this.xprop2pixels(trialPackage['choiceXCentroid'])\n   92          var choiceYCentroidPixels = this.yprop2pixels(trialPackage['choiceYCentroid'])\n   93:         var choiceDiameterPixels = this.deg2pixels(trialPackage['choiceDiameterDegrees'])\n   94  \n   95          var stimulusFramePackage = {\n   ..\n  106          }\n  107  \n  108:         await this.ScreenDisplayer.bufferStimulusSequence(stimulusFramePackage)\n  109  \n  110          // *************** Run trial *************************\n  ...\n  112          // SHOW BLANK\n  113          wdm('Running fixation...')\n  114:         await this.ScreenDisplayer.displayBlank()\n  115  \n  116          // RUN FIXATION\n  ...\n  120              fixationDiameterPixels)\n  121  \n  122:         var t_fixationOn = await this.ScreenDisplayer.displayFixation()\n  123          var fixationOutcome = await this.ActionPoller.Promise_wait_until_active_response()\n  124  \n  125          // RUN STIMULUS SEQUENCE\n  126          wdm('Running stimulus...')\n  127:         var t_SequenceTimestamps = await this.ScreenDisplayer.displayStimulusSequence()\n  128  \n  129          var actionXCentroidPixels = this.xprop2pixels(trialPackage['actionXCentroid'])\n  130          var actionYCentroidPixels = this.yprop2pixels(trialPackage['actionYCentroid'])\n  131:         var actionDiameterPixels = this.deg2pixels(trialPackage['actionDiameterDegrees'])\n  132  \n  133          this.ActionPoller.create_action_regions(\n  ...\n  154              var t_reinforcementOn = Math.round(performance.now()*1000)/1000\n  155              var p_sound = this.SoundPlayer.play_sound('reward_sound')\n  156:             var p_visual = this.ScreenDisplayer.displayReward(trialPackage['rewardTimeOutMsec'])\n  157              var p_primaryReinforcement = this.Reinforcer.deliver_reinforcement(rewardAmount)\n  158              await Promise.all([p_primaryReinforcement, p_visual]) \n  ...\n  162              var t_reinforcementOn = Math.round(performance.now()*1000)/1000\n  163              var p_sound = this.SoundPlayer.play_sound('punish_sound')\n  164:             var p_visual = this.ScreenDisplayer.displayPunish(trialPackage['punishTimeOutMsec'])\n  165              await Promise.all([p_sound, p_visual]) \n  166              var t_reinforcementOff = Math.round(performance.now()*1000)/1000\n  ...\n  219  \n  220      toggleBorder(on_or_off){\n  221:         this.ScreenDisplayer.togglePlayspaceBorder(on_or_off)\n  222      }\n  223  \n  ...\n  268          var windowWidth = getWindowWidth()\n  269  \n  270:         var screen_margin = 0.15\n  271:         var max_allowable_playspace_dimension = Math.round(Math.min(windowHeight, windowWidth))*(1-screen_margin)\n  272  \n  273          var min_dimension = Math.min(max_allowable_playspace_dimension, this.playspaceSizePixels)\n  ...\n  314              var windowWidth = getWindowWidth()\n  315  \n  316:             var screen_margin = 0.15\n  317:             var max_allowable_playspace_dimension = Math.round(Math.min(windowHeight, windowWidth))*(1-screen_margin)\n  318  \n  319              var min_dimension = Math.min(max_allowable_playspace_dimension, _this.playspaceSizePixels)\n  ...\n  337              bounds['t'] = Math.round(performance.now()*1000)/1000\n  338  \n  339:             _this.ScreenDisplayer.calibrateBounds(bounds)\n  340              _this.ActionPoller.calibrateBounds(bounds)\n  341              _this.updateWindowLog(bounds) \n  ...\n  406      }\n  407  \n  408:     deg2inches(degrees){\n  409  \n  410:         // diameter degrees \n  411:         // assume centered (center of diameter length at viewing normal to screen surface)\n  412:         if(degrees.constructor == Array){\n  413              var result = []\n  414:             for (var i = 0; i<degrees.length; i++){\n  415:                 var rad = this.deg2rad(degrees[i]/2)\n  416                  result.push(2 * this.viewingDistanceInches * Math.atan(rad))\n  417              }\n  ...\n  419          }\n  420  \n  421:         var rad = this.deg2rad(degrees/2)\n  422          return 2 * this.viewingDistanceInches * Math.atan(rad) \n  423      }\n  424  \n  425:     deg2pixels(degrees){\n  426          // Return virtual pixels \n  427:         if(degrees.constructor == Array){\n  428              var result = []\n  429:             for (var i = 0; i<degrees.length; i++){\n  430:                 var inches = this.deg2inches(degrees[i])\n  431                  result.push(Math.round(inches * this.virtualPixelsPerInch))\n  432              }\n  ...\n  434          }\n  435  \n  436:         var inches = this.deg2inches(degrees)\n  437          return Math.round(inches * this.virtualPixelsPerInch)\n  438      }\n  ...\n  483              'fixationDiameterPixels':fixationDiameterPixels,\n  484          }\n  485:         await this.ScreenDisplayer.bufferFixation(fixationFramePackage)\n  486  \n  487  \n  ...\n  491          var stimulusDiameterPixels = this.deg2pixels(6)\n  492          \n  493:         var stimulusCanvas = this.ScreenDisplayer.getSequenceCanvas('tutorial_sequence', 0)\n  494:         await this.ScreenDisplayer.renderBlank(stimulusCanvas)\n  495:         await this.ScreenDisplayer.drawImagesOnCanvas(tutorial_image, stimulusXCentroidPixels, stimulusYCentroidPixels, stimulusDiameterPixels, stimulusCanvas)\n  496  \n  497          // SHOW BLANK\n  498:         await this.ScreenDisplayer.displayBlank()\n  499  \n  500          // RUN FIXATION\n  ...\n  504              fixationDiameterPixels)\n  505  \n  506:         await this.ScreenDisplayer.displayFixation()\n  507          await this.ActionPoller.Promise_wait_until_active_response()\n  508  \n  509          // RUN STIMULUS SEQUENCE\n  510:         await this.ScreenDisplayer.displayScreenSequence(stimulusCanvas, 0)\n  511  \n  512          this.ActionPoller.create_action_regions(\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ScreenDisplayer.js:\n    1: class ScreenDisplayer{\n    2      constructor(bounds){\n    3  \n    .\n   75          var frame_canvases = []\n   76          var frame_durations = []\n   77:         // Draw sample screen\n   78          var sampleCanvas = this.getSequenceCanvas('stimulus_sequence', 0)\n   79          await this.renderBlank(sampleCanvas) // todo: only do this on window resize\n   ..\n   82          frame_durations.push(sampleOn)\n   83  \n   84:         // Optionally draw blank delay screen\n   85          if(sampleOff > 0){\n   86              var delayCanvas = this.getSequenceCanvas('stimulus_sequence', 1)\n   ..\n   91          }\n   92  \n   93:         // Draw test screen\n   94          var testCanvas = this.getSequenceCanvas('stimulus_sequence', frame_canvases.length)\n   95          await this.renderBlank(testCanvas) // todo: only do this on window resize\n   ..\n  257  \n  258  async displayFixation(){\n  259:     var timestamps = await this.displayScreenSequence(this.canvas_fixation, 0)\n  260      return timestamps[0]\n  261  }\n  262  \n  263  async displayBlank(){\n  264:     await this.displayScreenSequence(this.canvas_blank, 0)\n  265  }\n  266  \n  267  \n  268  async displayStimulusSequence(){\n  269:     var timestamps = await this.displayScreenSequence(\n  270          this.canvas_sequences['stimulus_sequence'], \n  271          this.time_sequences['stimulus_sequence'])\n  ...\n  275  \n  276  async displayReward(msec_duration){\n  277:     var timestamps = await this.displayScreenSequence([this.canvas_blank, this.canvas_reward, this.canvas_blank],\n  278          [0, msec_duration, 0])\n  279      return timestamps\n  ...\n  281  \n  282  async displayPunish(msec_duration){\n  283:     var timestamps = await this.displayScreenSequence([this.canvas_blank, this.canvas_punish, this.canvas_blank],\n  284          [0, msec_duration, 0])\n  285      return timestamps\n  ...\n  311      createCanvas(canvas_id, use_image_smoothing){\n  312          use_image_smoothing = false || use_image_smoothing\n  313:         var canvasobj = document.createElement('canvas')\n  314          canvasobj.id = canvas_id\n  315          this.setupCanvas(canvasobj, use_image_smoothing)\n  ...\n  318      }\n  319  \n  320:     displayScreenSequence(sequence, t_durations){\n  321:         //console.log('calling screen sequence. t_durations', t_durations)\n  322          if(typeof(t_durations) == \"number\"){\n  323              t_durations = [t_durations]\n  ...\n  373          }\n  374  \n  375:         //requestAnimationFrame advantages: goes on next screen refresh and syncs to browsers refresh rate on separate clock (not js clock)\n  376          window.requestAnimationFrame(updateCanvas); // kick off async work\n  377          return p\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_screenfunctions.js:\n    6  \t\tdevice_option_elements[i].style['border-color'] = '#ddd'\n    7  \t}\n    8: \telement.style['border-color'] = 'green'\n    9  \telement.style['opacity'] = 1\n   10  \n   ..\n   21          hand_option_elements[i].style['border-color'] = '#ddd'\n   22      }\n   23:     element.style['border-color'] = 'green'\n   24      element.style['opacity'] = 1\n   25  \n   ..\n   29  }\n   30  \n   31: function toggleElement(on_or_off, element_id){\n   32  \t\tvar elem = document.getElementById(element_id)\n   33  \tif(on_or_off == 0){\n   ..\n   89  }\n   90  \n   91: function displayTerminalScreen(){\n   92  \tvar terminal_text = 'Thank you for completing this HIT. Please wait while it is submitted...'\n   93: \tdocument.getElementById('terminal_splash_screen').style.zIndex = 100\n   94: \tdocument.getElementById('terminal_splash_screen').style.innerHTML = terminal_text\n   95  \n   96  }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_SessionBootStrapper.js:\n    9          var unpackedSession = {}\n   10          \n   11:         // Retrieve landing page url from localstorage - no need to unpack further\n   12          wdm('Retrieving LANDING_PAGE_URL...')\n   13          unpackedSession['LANDING_PAGE_URL'] = await this.load_localstorage_string('LANDING_PAGE_URL')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_style.css:\n  137     position: fixed;\n  138     margin-top: -5px;\n  139:    left: 1px; /* space between top of browser and annoying box */\n  140     height: 30px;\n  141     color:white;\n  ...\n  149     position: fixed;\n  150     margin-top: 51px;\n  151:    left: 1px; /* space between top of browser and annoying box */\n  152     height: 30px;\n  153     color:white;\n  ...\n  162     position: fixed;\n  163     margin-top: 15px;\n  164:    left: 40%; /* space between top of browser and annoying box */\n  165     height: 34px;\n  166     color:white;\n  ...\n  249  \n  250  \n  251: #MechanicalTurkCursorDeviceSelectionScreen{\n  252    display: flex;\n  253    flex-wrap: wrap;\n  ...\n  299  \n  300  \n  301: #MechanicalTurkHandSelectionScreen{\n  302    display: flex;\n  303    flex-wrap:wrap;\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TrialGenerator.js:\n   94  \n   95      async buffer_trial(taskNumber, sampleBagName){\n   96:         // Seed \n   97:         // Math.seedrandom(trialSeed)\n   98  \n   99          if (sampleBagName == undefined){\n  ...\n  223          tP['fixationXCentroid'] = tk['fixationXCentroid']\n  224          tP['fixationYCentroid'] = tk['fixationYCentroid']\n  225:         tP['fixationDiameterDegrees'] = tk['fixationDiameterDegrees']\n  226          tP['drawEyeFixationDot'] = tk['drawEyeFixationDot'] || false\n  227  \n  ...\n  230          tP['sampleXCentroid'] = tk['sampleXCentroid']\n  231          tP['sampleYCentroid'] = tk['sampleYCentroid'] \n  232:         tP['sampleDiameterDegrees'] = tk['sampleDiameterDegrees']\n  233  \n  234          tP['i_choiceBag'] = choiceIdx['bag']\n  ...\n  236          tP['choiceXCentroid'] = tk['choiceXCentroid']\n  237          tP['choiceYCentroid'] = tk['choiceYCentroid']\n  238:         tP['choiceDiameterDegrees'] = tk['choiceDiameterDegrees']\n  239  \n  240          tP['actionXCentroid'] = tk['actionXCentroid']\n  241          tP['actionYCentroid'] = tk['actionYCentroid']\n  242:         tP['actionDiameterDegrees'] = tk['actionDiameterDegrees']\n  243          tP['choiceRewardMap'] = rewardMap\n  244          tP['sampleOnMsec'] = tk['sampleOnMsec'] \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_utils.js:\n   46    static argclosest(arr, x){\n   47      // Returns index with minimum absolute difference \n   48:     // If there's a tie between two indices, return the lower index. \n   49      var diffMagnitude = undefined \n   50      var minIdx = 0\n   ..\n  364  \n  365  \n  366: function sleep(ms) {\n  367    return new Promise(resolve => setTimeout(resolve, ms));\n  368  }\n  ...\n  411  function add(a, b) {\n  412      // For use in .reduce\n  413:     // See \n  414      // https://stackoverflow.com/questions/1230233/how-to-find-the-sum-of-an-array-of-numbers\n  415      \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_UX.js:\n   12      constructor(){\n   13          super()\n   14:         toggleElement(1, \"SessionTextBox\")\n   15:         toggleElement(1, 'DebugMessageTextBox')\n   16:         toggleElement(1, 'TrialCounter')\n   17          document.querySelector(\"button[name=doneTestingTask]\").addEventListener(\n   18          'touchend',this.doneTestingTask_listener,false)\n   ..\n   30      debug2record(){\n   31          console.log('debug2record: UX (not implemented yet)')\n   32:         toggleElement(0, \"drive_juice_button\")\n   33:         toggleElement(0, \"SessionTextBox\")\n   34:         toggleElement(0, \"myProgress\")\n   35:         toggleElement(0, \"DebugMessageTextBox\")\n   36          document.body.style['background-color'] = '#7F7F7F'\n   37          var progressbar_names = [\n   ..\n   83  \n   84      debug2record(){\n   85:         toggleElement(1, 'MechanicalTurk_ProgressBar')\n   86:         toggleElement(1, 'MechanicalTurk_TrialBar')\n   87          document.querySelector(\"button[name=WorkerCashInButton]\").style.visibility = 'visible'\n   88                                  toggleCashInButtonClickability(0)\n   ..\n   90          document.querySelector(\"button[name=WorkerCashInButton]\").addEventListener('touchstart',this.cash_in_listener,false)\n   91  \n   92:         toggleElement(0, \"DebugMessageTextBox\")\n   93  \n   94          return\n   ..\n  104          }\n  105          \n  106:         var screen1_instructions =  \"\" \n  107:         screen1_instructions += \"<ul>\"\n  108:         screen1_instructions +='<p><text style=\"font-weight:bold; font-size:large\">Thank you for your interest and contributing to research at at MIT!</text>'\n  109:         screen1_instructions += \"<pi><li>Please use the latest version of <b>Google Chrome</b> to work on this HIT. It may not work correctly on other browsers.\"\n  110:         screen1_instructions += \"<p><li>You will be presented with rapidly flashed images. <b>Your task is to figure out where to click on parts of the screen based on the information in the images.</b>\"\n  111:         screen1_instructions += '<p><li>The sound of a bell means you did something right, and received a small bonus reward.'\n  112:         screen1_instructions += \"<p><li>Each trial begins with a <b>WHITE DOT</b>. Click the dot to begin the trial.\"\n  113:         //screen1_instructions += '<p><li>When the top right button turns  <text style=\"font-weight:bold; color:green\">GREEN</text> you can press it to submit early, though we encourage you to continue working for bonus rewards.'\n  114:         screen1_instructions += \"<p><li>The HIT will submit <b>AUTOMATICALLY</b> after a certain number of trials. If the HIT freezes or does not submit, please contact us to resolve the issue and receive compensation for your time.\"\n  115          \n  116:         //screen1_instructions += '<p><li>Highly productive workers may be contacted for exclusive, higher-paying HITs.' \n  117:                 screen1_instructions += '<p><text style=\"color:#7A7A7A; font-size:smaller; font-style:italic\">If you cannot meet these requirements or if doing so could cause discomfort or injury, do not accept this HIT. You will not be penalized in any way.</text>'\n  118:         screen1_instructions += \"</ul>\"\n  119  \n  120:         await this.showMechanicalTurkInstructions(screen1_instructions)\n  121          \n  122      }\n  ...\n  134      // Turn on dialogue\n  135      this.MechanicalTurk_DeviceSelected = 'not_selected'\n  136:     document.getElementById(\"MechanicalTurkCursorDeviceSelectionScreen\").style.visibility = 'visible'\n  137      return new Promise(function(resolve, reject){\n  138          FLAGS.clicked_device_selection = resolve\n  ...\n  143          // Turn on dialogue\n  144          this.MechanicalTurk_Handedness = 'not_selected'\n  145:         document.getElementById(\"MechanicalTurkHandSelectionScreen\").style.visibility = 'visible'\n  146          return new Promise(function(resolve, reject){\n  147              FLAGS.clicked_hand_selection = resolve\n  ...\n  150  \n  151      show_preview_splash(){\n  152:         toggleElement(1, 'PreviewModeSplash')\n  153      }\n  154      async showMechanicalTurkInstructions(instructions_text){\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturkmanifest.json:\n   20    ],\n   21    \"start_url\": \"mkturk.html\",\n   22:   \"display\": \"fullscreen\"\n   23  }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_MechanicalTurk_session.js:\n   33  \n   34    var playspacePackage = {\n   35:     'playspace_degreesVisualAngle':ENVIRONMENT['playspace_degreesVisualAngle'], \n   36      'playspace_verticalOffsetInches':ENVIRONMENT['playspace_verticalOffsetInches'],\n   37      'playspace_viewingDistanceInches':ENVIRONMENT['playspace_viewingDistanceInches'],\n   38:     'screen_virtualPixelsPerInch':ENVIRONMENT['screen_virtualPixelsPerInch'],\n   39      'primary_reinforcer_type':ENVIRONMENT['primary_reinforcer_type'], \n   40      'action_event_type':ENVIRONMENT['action_event_type'], \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   41     await TaskStreamer.build(5)\n   42     var playspacePackage = {\n   43:     'playspace_degreesVisualAngle':ENVIRONMENT['playspace_degreesVisualAngle'], \n   44      'playspace_verticalOffsetInches':ENVIRONMENT['playspace_verticalOffsetInches'],\n   45      'playspace_viewingDistanceInches':ENVIRONMENT['playspace_viewingDistanceInches'],\n   46:     'screen_virtualPixelsPerInch':ENVIRONMENT['screen_virtualPixelsPerInch'],\n   47      'primary_reinforcer_type':ENVIRONMENT['primary_reinforcer_type'], \n   48      'action_event_type':ENVIRONMENT['action_event_type'], \n   ..\n   71      // Playspace.Reinforcer.juiceRewardPer1000 = 175\n   72      // wdm('20sec')\n   73:     // await sleep(20000)\n   74      // ub = 500\n   75      // for (i = 0; i < ub; i++) {\n   76:     //   await sleep(1500)\n   77      //   Playspace.Reinforcer.deliver_reinforcement(1)\n   78      //   wdm(i + ' of ' + ub + '. juicerewardper1000=' + Playspace.Reinforcer.juiceRewardPer1000)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/task_specification.json:\n    6  \"fixationXCentroid\":0.5,\n    7  \"fixationYCentroid\":0.8,\n    8: \"fixationRadiusDegrees\":3,\n    9  \"sampleXCentroid\":0.5,\n   10  \"sampleYCentroid\":0.5,\n   11: \"sampleRadiusDegrees\":8,\n   12  \"actionXCentroid\":[0.2, 0.8], \n   13  \"actionYCentroid\":[0.8, 0.8],\n   14: \"actionRadiusDegrees\":[6, 6],\n   15  \"choiceXCentroid\":[0.2, 0.8],\n   16  \"choiceYCentroid\":[0.8, 0.8],\n   17: \"choiceRadiusDegrees\":[6, 6],\n   18  // SR specific\n   19  \"rewardMap\":{\"*bagName\":[0, 1]}} // indexes action*; gives rewards for selecting that action. Assumes 0 everywhere else.\n   ..\n   30  {\"viewingDistanceInches\":0, \n   31  \"virtualPixelsPerInch\":0, \n   32: \"screenVerticalOffsetInches\":0,\n   33: \"screenHorizontalOffsetInches\":0, \n   34  \"reinforcer\":\"juice\", \n   35  }\n   ..\n   41  \"sampleOn\":0, \n   42  \"sampleOff\":0, \n   43: \"sampleScale\":0, // pixels, Playspace units, degrees\n   44  }], \n   45  \"onFinish\":\"terminate, continue, or loop\", \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/javascript_utils/lz-string.js:\n    1  // Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n    2: // This work is free. You can redistribute it and/or modify it\n    3  // under the terms of the WTFPL, Version 2\n    4: // For more information see LICENSE.txt or http://www.wtfpl.net/\n    5  //\n    6  // For more information, the home page:\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/javascript_utils/seedrandom.js:\n    1  /**\n    2  \n    3: seedrandom.js\n    4  =============\n    5  \n    6: Seeded random number generator for Javascript.\n    7  \n    8  version 2.3.10\n    .\n   15  ----------------\n   16  \n   17: <script src=//cdnjs.cloudflare.com/ajax/libs/seedrandom/2.3.10/seedrandom.min.js>\n   18  </script>\n   19  \n   20: // Sets Math.random to a PRNG initialized using the given explicit seed.\n   21: Math.seedrandom('hello.');\n   22  console.log(Math.random());          // Always 0.9282578795792454\n   23  console.log(Math.random());          // Always 0.3752569768646784\n   24  \n   25: // Sets Math.random to an ARC4-based PRNG that is autoseeded using the\n   26  // current time, dom state, and other accumulated local entropy.\n   27: // The generated seed string is returned.\n   28: Math.seedrandom();\n   29  console.log(Math.random());          // Reasonably unpredictable.\n   30  \n   31: // Seeds using the given explicit seed mixed with accumulated entropy.\n   32: Math.seedrandom('added entropy.', { entropy: true });\n   33  console.log(Math.random());          // As unpredictable as added entropy.\n   34  \n   35  // Use \"new\" to create a local prng without altering Math.random.\n   36: var myrng = new Math.seedrandom('hello.');\n   37  console.log(myrng());                // Always 0.9282578795792454\n   38  \n   ..\n   41  -------------\n   42  \n   43: npm install seedrandom\n   44  \n   45  // Local PRNG: does not affect Math.random.\n   46: var seedrandom = require('seedrandom');\n   47: var rng = seedrandom('hello.');\n   48  console.log(rng());                  // Always 0.9282578795792454\n   49  \n   50: // Autoseeded ARC4-based PRNG.\n   51: rng = seedrandom();\n   52  console.log(rng());                  // Reasonably unpredictable.\n   53  \n   54  // Global PRNG: set Math.random.\n   55: seedrandom('hello.', { global: true });\n   56  console.log(Math.random());          // Always 0.9282578795792454\n   57  \n   58  // Mixing accumulated entropy.\n   59: rng = seedrandom('added entropy.', { entropy: true });\n   60  console.log(rng());                  // As unpredictable as added entropy.\n   61  \n   ..\n   66  Similar to node.js usage:\n   67  \n   68: bower install seedrandom\n   69  \n   70: require(['seedrandom'], function(seedrandom) {\n   71:   var rng = seedrandom('hello.');\n   72    console.log(rng());                  // Always 0.9282578795792454\n   73  });\n   74  \n   75  \n   76: Network seeding\n   77  ---------------\n   78  \n   79: <script src=//cdnjs.cloudflare.com/ajax/libs/seedrandom/2.3.10/seedrandom.min.js>\n   80  </script>\n   81  \n   82: <!-- Seeds using urandom bits from a server. -->\n   83: <script src=//jsonlib.appspot.com/urandom?callback=Math.seedrandom\">\n   84  </script>\n   85  \n   86: <!-- Seeds mixing in random.org bits -->\n   87  <script>\n   88  (function(x, u, s){\n   ..\n   93      s = unescape(x.response.trim().replace(/^|\\s/g, '%'));\n   94    } finally {\n   95:     // Seed with the response, or autoseed on failure.\n   96:     Math.seedrandom(s, !!s);\n   97    }\n   98  })(new XMLHttpRequest, 'https://www.random.org/integers/' +\n   ..\n  100  </script>\n  101  \n  102: Reseeding using user input\n  103  --------------------------\n  104  \n  105: var seed = Math.seedrandom();        // Use prng with an automatic seed.\n  106  document.write(Math.random());       // Pretty much unpredictable x.\n  107  \n  108: var rng = new Math.seedrandom(seed); // A new prng with the same seed.\n  109  document.write(rng());               // Repeat the 'unpredictable' x.\n  110  \n  111: function reseed(event, count) {      // Define a custom entropy collector.\n  112    var t = [];\n  113    function w(e) {\n  114      t.push([e.pageX, e.pageY, +new Date]);\n  115      if (t.length &lt; count) { return; }\n  116:     document.removeEventListener(event, w);\n  117:     Math.seedrandom(t, { entropy: true });\n  118    }\n  119    document.addEventListener(event, w);\n  120  }\n  121: reseed('mousemove', 100);            // Reseed after 100 mouse moves.\n  122  \n  123: The \"pass\" option can be used to get both the prng and the seed.\n  124: The following returns both an autoseeded prng and the seed as an object,\n  125  without mutating Math.random:\n  126  \n  127: var obj = Math.seedrandom(null, { pass: function(prng, seed) {\n  128:   return { random: prng, seed: seed };\n  129  }});\n  130  \n  ...\n  133  -------------\n  134  \n  135: The random number sequence is the same as version 1.0 for string seeds.\n  136: * Version 2.0 changed the sequence for non-string seeds.\n  137: * Version 2.1 speeds seeding and uses window.crypto to autoseed if present.\n  138: * Version 2.2 alters non-crypto autoseeding to sweep up entropy from plugins.\n  139: * Version 2.3 adds support for \"new\", module loading, and a null seed arg.\n  140  * Version 2.3.1 adds a build environment, module packaging, and tests.\n  141  * Version 2.3.4 fixes bugs on IE8, and switches to MIT license.\n  ...\n  144  \n  145  The standard ARC4 key scheduler cycles short keys, which means that\n  146: seedrandom('ab') is equivalent to seedrandom('abab') and 'ababab'.\n  147  Therefore it is a good idea to add a terminator to avoid trivial\n  148: equivalences on short string seeds, e.g., Math.seedrandom(str + '\\0').\n  149  Starting with version 2.0, a terminator is added automatically for\n  150: non-string seeds, so seeding with the number 111 is the same as seeding\n  151  with '111\\0'.\n  152  \n  153: When seedrandom() is called with zero args or a null seed, it uses a\n  154: seed drawn from the browser crypto object if present.  If there is no\n  155: crypto support, seedrandom() uses the current time, the native rng,\n  156  and a walk of several DOM objects to collect a few bits of entropy.\n  157  \n  158: Each time the one- or two-argument forms of seedrandom are called,\n  159: entropy from the passed seed is accumulated in a pool to help generate\n  160: future seeds for the zero- and two-argument forms of seedrandom.\n  161  \n  162: On speed - This javascript implementation of Math.random() is several\n  163  times slower than the built-in Math.random() because it is not native\n  164  code, but that is typically fast enough.  Some details (timings on\n  165  Chrome 25 on a 2010 vintage macbook):\n  166  \n  167: * seeded Math.random()          - avg less than 0.0002 milliseconds per call\n  168: * seedrandom('explicit.')       - avg less than 0.2 milliseconds per call\n  169: * seedrandom('explicit.', true) - avg less than 0.2 milliseconds per call\n  170: * seedrandom() with crypto      - avg less than 0.2 milliseconds per call\n  171  \n  172: Autoseeding without crypto is somewhat slower, about 20-30 milliseconds on\n  173: a 2012 windows 7 1.5ghz i5 laptop, as seen on Firefox 19, IE 10, and Opera.\n  174: Seeded rng calls themselves are fast across these browsers, with slowest\n  175: numbers on Opera at about 0.0005 ms per seeded Math.random().\n  176  \n  177  \n  ...\n  181  Copyright 2014 David Bau.\n  182  \n  183: Permission is hereby granted, free of charge, to any person obtaining\n  184  a copy of this software and associated documentation files (the\n  185  \"Software\"), to deal in the Software without restriction, including\n  ...\n  203  \n  204  /**\n  205:  * All code is in an anonymous closure to keep the global namespace clean.\n  206   */\n  207  (function (\n  ...\n  209  \n  210  //\n  211: // The following constants are related to IEEE 754 limits.\n  212  //\n  213  var startdenom = math.pow(width, chunks),\n  ...\n  218  \n  219  //\n  220: // seedrandom()\n  221: // This is the seedrandom function described above.\n  222  //\n  223: var impl = math['seed' + rngname] = function(seed, options, callback) {\n  224    var key = [];\n  225    options = (options == true) ? { entropy: true } : (options || {});\n  226  \n  227:   // Flatten the seed string or build one from local entropy if needed.\n  228:   var shortseed = mixkey(flatten(\n  229:     options.entropy ? [seed, tostring(pool)] :\n  230:     (seed == null) ? autoseed() : seed, 3), key);\n  231  \n  232:   // Use the seed to initialize an ARC4 generator.\n  233    var arc4 = new ARC4(key);\n  234  \n  ...\n  236    mixkey(tostring(arc4.S), pool);\n  237  \n  238:   // Calling convention: what to return as a function of prng, seed, is_math.\n  239    return (options.pass || callback ||\n  240:       // If called as a method of Math (Math.seedrandom()), mutate Math.random\n  241:       // because that is how seedrandom.js has worked since v1.0.  Otherwise,\n  242        // it is a newer calling convention, so return the prng directly.\n  243:       function(prng, seed, is_math_call) {\n  244:         if (is_math_call) { math[rngname] = prng; return seed; }\n  245          else return prng;\n  246        })(\n  247  \n  248    // This function returns a random double in [0, 1) that contains\n  249:   // randomness in every bit of the mantissa of the IEEE 754 value.\n  250    function() {\n  251      var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n  ...\n  263      }\n  264      return (n + x) / d;                 // Form the number within [0, 1).\n  265:   }, shortseed, 'global' in options ? options.global : (this == math));\n  266  };\n  267  \n  ...\n  295    // The \"g\" method returns the next (count) outputs as one number.\n  296    (me.g = function(count) {\n  297:     // Using instance members instead of closure state nearly doubles speed.\n  298      var t, r = 0,\n  299          i = me.i, j = me.j, s = me.S;\n  ...\n  306      // For robust unpredictability, the function call below automatically\n  307      // discards an initial batch of values.  This is called RC4-drop[256].\n  308:     // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  309    })(width);\n  310  }\n  ...\n  312  //\n  313  // flatten()\n  314: // Converts an object tree to nested arrays of strings.\n  315  //\n  316  function flatten(obj, depth) {\n  ...\n  326  //\n  327  // mixkey()\n  328: // Mixes a string seed into a key that is an array of integers, and\n  329: // returns a shortened string seed that is equivalent to the result key.\n  330  //\n  331: function mixkey(seed, key) {\n  332:   var stringseed = seed + '', smear, j = 0;\n  333:   while (j < stringseed.length) {\n  334      key[mask & j] =\n  335:       mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  336    }\n  337    return tostring(key);\n  ...\n  339  \n  340  //\n  341: // autoseed()\n  342: // Returns an object for autoseeding, using window.crypto if available.\n  343  //\n  344: /** @param {Uint8Array|Navigator=} seed */\n  345: function autoseed(seed) {\n  346    try {\n  347      if (nodecrypto) return tostring(nodecrypto.randomBytes(width));\n  348:     global.crypto.getRandomValues(seed = new Uint8Array(width));\n  349:     return tostring(seed);\n  350    } catch (e) {\n  351:     return [+new Date, global, (seed = global.navigator) && seed.plugins,\n  352:       global.screen, tostring(pool)];\n  353    }\n  354  }\n  ...\n  363  \n  364  //\n  365: // When seedrandom.js is loaded, we immediately mix a few bits\n  366  // from the built-in RNG into the entropy pool.  Because we do\n  367  // not want to interfere with deterministic PRNG state later,\n  368: // seedrandom will not call math.random on its own again after\n  369  // initialization.\n  370  //\n  ...\n  378    module.exports = impl;\n  379    try {\n  380:     // When in node.js, try using crypto package for autoseeding.\n  381      nodecrypto = require('crypto');\n  382    } catch (ex) {}\n  ...\n  393    this,   // global window object\n  394    [],     // pool: entropy pool starts empty\n  395:   Math,   // math: package containing random, pow, and seedrandom\n  396    256,    // width: each RC4 output is 0 <= x < 256\n  397    6,      // chunks: at least six RC4 outputs for each double\n  ...\n  399    (typeof module) == 'object' && module,    // present in node.js\n  400    (typeof define) == 'function' && define,  // present with an AMD loader\n  401:   'random'// rngname: name for Math.random and Math.seedrandom\n  402  );\n  403  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/landing_page_template.html:\n    2  \n    3  <head>\n    4: <meta name=\"mobile-web-app-capable\" content=\"yes\"> <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n    5  <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"/>\n    6  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    .\n   88  \n   89  <body>\n   90:     Loading HIT...If you are stuck on this screen, please make sure you are using Google Chrome and have cookies ENABLED. \n   91  </body>\n   92  </html>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabMTS.html:\n    2  \n    3  <head>\n    4: <meta name=\"mobile-web-app-capable\" content=\"yes\"> <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n    5  <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"/>\n    6  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    .\n   22          \"bonusUSDPerCorrect\": 0.0005, \n   23          \"juiceRewardPer1000Trials\": 250, \n   24:         \"playspace_degreesVisualAngle\": 24, \n   25          \"playspace_verticalOffsetInches\": 0, \n   26          \"playspace_viewingDistanceInches\": 8, \n   27          \"primary_reinforcer_type\": \"juice\", \n   28          \"rigEnvironment\": \"monkeybox\", \n   29:         \"screen_virtualPixelsPerInch\": 143.755902965\n   30      }, \n   31      \"GAME_PACKAGE\": {\n   ..\n   35              \"periodicRewardAmount\": 1, \n   36              \"periodicRewardIntervalMsec\": 60000, \n   37:             \"randomSeed\": \"none\"\n   38          }, \n   39          \"IMAGEBAGS\": \"https://s3.amazonaws.com/milresources/ImageBagMetaDefinitions/MutatorTraining_FullVarWithBGSetA.json\", \n   40          \"TASK_SEQUENCE\": [\n   41              {\n   42:                 \"actionDiameterDegrees\": [\n   43                      6, \n   44                      6\n   ..\n   53                  ], \n   54                  \"averageReturnCriterion\": 0.8, \n   55:                 \"choiceDiameterDegrees\": [\n   56                      4, \n   57                      4\n   ..\n   72                  ], \n   73                  \"drawEyeFixationDot\": true, \n   74:                 \"fixationDiameterDegrees\": 3, \n   75                  \"fixationXCentroid\": 0.5, \n   76                  \"fixationYCentroid\": 0.8, \n   ..\n   85                      \"FullVarWithBGSetA_batch0obj2\"\n   86                  ], \n   87:                 \"sampleDiameterDegrees\": 8, \n   88                  \"sampleOffMsec\": 0, \n   89                  \"sampleOnMsec\": 200, \n   ..\n  170  \n  171  <body>\n  172:     Loading HIT...If you are stuck on this screen, please make sure you are using Google Chrome and have cookies ENABLED. \n  173  </body>\n  174  </html>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabSR.html:\n    2  \n    3  <head>\n    4: <meta name=\"mobile-web-app-capable\" content=\"yes\"> <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n    5  <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"/>\n    6  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    .\n   88  \n   89  <body>\n   90:     Loading HIT...If you are stuck on this screen, please make sure you are using Google Chrome and have cookies ENABLED. \n   91  </body>\n   92  </html>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabSR_blackdiamond.html:\n    2  \n    3  <head>\n    4: <meta name=\"mobile-web-app-capable\" content=\"yes\"> <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n    5  <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"/>\n    6  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    .\n   15      SESSION_PACKAGE = {\n   16      \"ENVIRONMENT\": {\n   17:                   \"playspace_degreesVisualAngle\":24,\n   18                    \"playspace_verticalOffsetInches\":0, \n   19                    \"playspace_viewingDistanceInches\":12, \n   20:                   \"screen_virtualPixelsPerInch\":143.755902965,\n   21                    \"primary_reinforcer_type\":\"monetary\", \n   22                    \"action_event_type\":[\"mouseup\", \"touchstart\", \"touchmove\"],\n   ..\n   33                        \"periodicRewardAmount\": 0, \n   34                        \"periodicRewardIntervalMsec\": 0, \n   35:                       \"randomSeed\": \"none\"\n   36                      }, \n   37                      \"IMAGEBAGS\": [\n   ..\n   47                      \"TASK_SEQUENCE\": [\n   48                        {\n   49:                         \"actionDiameterDegrees\": [\n   50                            4, \n   51                            4\n   ..\n   60                          ], \n   61                          \"averageReturnCriterion\": 1, \n   62:                         \"choiceDiameterDegrees\": [\n   63                            4, \n   64                            4\n   ..\n   74                          ], \n   75                          \"drawEyeFixationDot\": true, \n   76:                         \"fixationDiameterDegrees\": 4, \n   77                          \"fixationXCentroid\": 0.5, \n   78                          \"fixationYCentroid\": 0.8, \n   ..\n   96                            \"whiteDiamond\"\n   97                          ], \n   98:                         \"sampleDiameterDegrees\": 8, \n   99                          \"sampleOffMsec\": 0, \n  100                          \"sampleOnMsec\": 200, \n  ...\n  105                        }, \n  106                        {\n  107:                         \"actionDiameterDegrees\": [\n  108                            4, \n  109                            4\n  ...\n  118                          ], \n  119                          \"averageReturnCriterion\": 1, \n  120:                         \"choiceDiameterDegrees\": [\n  121                            4, \n  122                            4\n  ...\n  132                          ], \n  133                          \"drawEyeFixationDot\": true, \n  134:                         \"fixationDiameterDegrees\": 4, \n  135                          \"fixationXCentroid\": 0.5, \n  136                          \"fixationYCentroid\": 0.8, \n  ...\n  154                            \"stimulus_objectome_banana\"\n  155                          ], \n  156:                         \"sampleDiameterDegrees\": 8, \n  157                          \"sampleOffMsec\": 0, \n  158                          \"sampleOnMsec\": 200, \n  ...\n  239  \n  240  <body>\n  241:     Loading HIT...If you are stuck on this screen, please make sure you are using Google Chrome and have cookies ENABLED. \n  242  </body>\n  243  </html>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurk_MTS_choicespace.html:\n    2  \n    3  <head>\n    4: <meta name=\"mobile-web-app-capable\" content=\"yes\"> <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n    5  <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"/>\n    6  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    .\n   21          ], \n   22          \"bonusUSDPerCorrect\": 0.0005, \n   23:         \"instructionsDialogueString\": \"<ul><p><text style=\\\"font-weight:bold; font-size:large\\\">Thank you for your interest and contributing to research at at MIT!</text><pi><li>Please use the latest version of <b>Google Chrome</b> to work on this HIT. It may not work correctly on other browsers.<p><li>You will be presented with rapidly flashed images. <b>Your task is to match images with the one that was rapidly flashed (this will become clear after you try a few trials).</b><p><li>The sound of a bell means you did something right, and received a small bonus reward.<p><li>Each trial begins with a <b>WHITE DOT</b>. Click the dot to begin the trial.<p><li>The HIT will submit <b>AUTOMATICALLY</b> after a certain number of trials. If the HIT freezes or does not submit, please contact us to resolve the issue and receive compensation for your time.<p><text style=\\\"color:#7A7A7A; font-size:smaller; font-style:italic\\\">If you cannot meet these requirements or if doing so could cause discomfort or injury, do not accept this HIT. You will not be penalized in any way.</text></ul>\", \n   24          \"juiceRewardPer1000Trials\": 250, \n   25:         \"playspace_degreesVisualAngle\": 24, \n   26          \"playspace_verticalOffsetInches\": 0, \n   27          \"playspace_viewingDistanceInches\": 8, \n   28          \"primary_reinforcer_type\": \"monetary\", \n   29          \"rigEnvironment\": \"mechanicalturk\", \n   30:         \"screen_virtualPixelsPerInch\": 143.755902965\n   31      }, \n   32      \"GAME_PACKAGE\": {\n   ..\n   64          \"TASK_SEQUENCE\": [\n   65              {\n   66:                 \"actionDiameterDegrees\": [\n   67                      6, \n   68                      6\n   ..\n   77                  ], \n   78                  \"averageReturnCriterion\": 0.8, \n   79:                 \"choiceDiameterDegrees\": [\n   80                      4, \n   81                      4\n   ..\n   96                  ], \n   97                  \"drawEyeFixationDot\": true, \n   98:                 \"fixationDiameterDegrees\": 3, \n   99                  \"fixationXCentroid\": 0.5, \n  100                  \"fixationYCentroid\": 0.8, \n  ...\n  109                  ], \n  110                  \"bagSamplingWeights\":[1, 0],\n  111:                 \"sampleDiameterDegrees\": 8, \n  112                  \"sampleOffMsec\": 0, \n  113                  \"sampleOnMsec\": 200, \n  ...\n  194  \n  195  <body>\n  196:     Loading HIT...If you are stuck on this screen, please make sure you are using Google Chrome and have cookies ENABLED. \n  197  </body>\n  198  </html>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS.html:\n    2  \n    3  <head>\n    4: <meta name=\"mobile-web-app-capable\" content=\"yes\"> <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n    5  <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"/>\n    6  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    .\n   21          ], \n   22          \"bonusUSDPerCorrect\": 0.0005, \n   23:         \"instructionsDialogueString\": \"<ul><p><text style=\\\"font-weight:bold; font-size:large\\\">Thank you for your interest and contributing to research at at MIT!</text><pi><li>Please use the latest version of <b>Google Chrome</b> to work on this HIT. It may not work correctly on other browsers.<p><li>You will be presented with rapidly flashed images. <b>Your task is to match images with the one that was rapidly flashed (this will become clear after you try a few trials).</b><p><li>The sound of a bell means you did something right, and received a small bonus reward.<p><li>Each trial begins with a <b>WHITE DOT</b>. Click the dot to begin the trial.<p><li>The HIT will submit <b>AUTOMATICALLY</b> after a certain number of trials. If the HIT freezes or does not submit, please contact us to resolve the issue and receive compensation for your time.<p><text style=\\\"color:#7A7A7A; font-size:smaller; font-style:italic\\\">If you cannot meet these requirements or if doing so could cause discomfort or injury, do not accept this HIT. You will not be penalized in any way.</text></ul>\", \n   24          \"juiceRewardPer1000Trials\": 250, \n   25:         \"playspace_degreesVisualAngle\": 24, \n   26          \"playspace_verticalOffsetInches\": 0, \n   27          \"playspace_viewingDistanceInches\": 8, \n   28          \"primary_reinforcer_type\": \"monetary\", \n   29          \"rigEnvironment\": \"mechanicalturk\", \n   30:         \"screen_virtualPixelsPerInch\": 143.755902965\n   31      }, \n   32      \"GAME_PACKAGE\": {\n   ..\n   64          \"TASK_SEQUENCE\": [\n   65              {\n   66:                 \"actionDiameterDegrees\": [\n   67                      6, \n   68                      6\n   ..\n   77                  ], \n   78                  \"averageReturnCriterion\": 0.8, \n   79:                 \"choiceDiameterDegrees\": [\n   80                      4, \n   81                      4\n   ..\n   96                  ], \n   97                  \"drawEyeFixationDot\": true, \n   98:                 \"fixationDiameterDegrees\": 3, \n   99                  \"fixationXCentroid\": 0.5, \n  100                  \"fixationYCentroid\": 0.8, \n  ...\n  108                      \"stimulus_objectome_flute\"\n  109                  ], \n  110:                 \"sampleDiameterDegrees\": 8, \n  111                  \"sampleOffMsec\": 0, \n  112                  \"sampleOnMsec\": 200, \n  ...\n  193  \n  194  <body>\n  195:     Loading HIT...If you are stuck on this screen, please make sure you are using Google Chrome and have cookies ENABLED. \n  196  </body>\n  197  </html>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS_to_SR.html:\n    2  \n    3  <head>\n    4: <meta name=\"mobile-web-app-capable\" content=\"yes\"> <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n    5  <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"/>\n    6  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    .\n   21          ], \n   22          \"bonusUSDPerCorrect\": 0.0005, \n   23:         \"instructionsDialogueString\": \"<ul><p><text style=\\\"font-weight:bold; font-size:large\\\">Thank you for your interest and contributing to research at at MIT!</text><pi><li>Please use the latest version of <b>Google Chrome</b> to work on this HIT. It may not work correctly on other browsers.<p><li>You will be presented with rapidly flashed images. <b>Your task is to figure out where to click on parts of the screen based on the information in the images.</b><p><li>The sound of a bell means you did something right, and received a small bonus reward.<p><li>Each trial begins with a <b>WHITE DOT</b>. Click the dot to begin the trial.<p><li>The HIT will submit <b>AUTOMATICALLY</b> after a certain number of trials. If the HIT freezes or does not submit, please contact us to resolve the issue and receive compensation for your time.<p><text style=\\\"color:#7A7A7A; font-size:smaller; font-style:italic\\\">If you cannot meet these requirements or if doing so could cause discomfort or injury, do not accept this HIT. You will not be penalized in any way.</text></ul>\", \n   24          \"juiceRewardPer1000Trials\": 250, \n   25:         \"playspace_degreesVisualAngle\": 24, \n   26          \"playspace_verticalOffsetInches\": 0, \n   27          \"playspace_viewingDistanceInches\": 8, \n   28          \"primary_reinforcer_type\": \"monetary\", \n   29          \"rigEnvironment\": \"mechanicalturk\", \n   30:         \"screen_virtualPixelsPerInch\": 143.755902965\n   31      }, \n   32      \"GAME_PACKAGE\": {\n   ..\n   64          \"TASK_SEQUENCE\": [\n   65              {\n   66:                 \"actionDiameterDegrees\": [\n   67                      6, \n   68                      6\n   ..\n   77                  ], \n   78                  \"averageReturnCriterion\": 0.8, \n   79:                 \"choiceDiameterDegrees\": [\n   80                      4, \n   81                      4\n   ..\n   96                  ], \n   97                  \"drawEyeFixationDot\": true, \n   98:                 \"fixationDiameterDegrees\": 3, \n   99                  \"fixationXCentroid\": 0.5, \n  100                  \"fixationYCentroid\": 0.8, \n  ...\n  108                      \"stimulus_objectome_flute\"\n  109                  ], \n  110:                 \"sampleDiameterDegrees\": 8, \n  111                  \"sampleOffMsec\": 0, \n  112                  \"sampleOnMsec\": 200, \n  ...\n  117              }, \n  118              {\n  119:                 \"actionDiameterDegrees\": [\n  120                      6, \n  121                      6\n  ...\n  130                  ], \n  131                  \"averageReturnCriterion\": 0.8, \n  132:                 \"choiceDiameterDegrees\": [\n  133                      4, \n  134                      4\n  ...\n  144                  ], \n  145                  \"drawEyeFixationDot\": true, \n  146:                 \"fixationDiameterDegrees\": 3, \n  147                  \"fixationXCentroid\": 0.5, \n  148                  \"fixationYCentroid\": 0.8, \n  ...\n  166                      \"stimulus_objectome_flute\"\n  167                  ], \n  168:                 \"sampleDiameterDegrees\": 8, \n  169                  \"sampleOffMsec\": 0, \n  170                  \"sampleOnMsec\": 200, \n  ...\n  251  \n  252  <body>\n  253:     Loading HIT...If you are stuck on this screen, please make sure you are using Google Chrome and have cookies ENABLED. \n  254  </body>\n  255  </html>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkSR.html:\n    2  \n    3  <head>\n    4: <meta name=\"mobile-web-app-capable\" content=\"yes\"> <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n    5  <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"/>\n    6  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    .\n   21          ], \n   22          \"bonusUSDPerCorrect\": 0.0005, \n   23:         \"instructionsDialogueString\": \"<ul><p><text style=\\\"font-weight:bold; font-size:large\\\">Thank you for your interest and contributing to research at at MIT!</text><pi><li>Please use the latest version of <b>Google Chrome</b> to work on this HIT. It may not work correctly on other browsers.<p><li>You will be presented with rapidly flashed images. <b>Your task is to figure out where to click on parts of the screen based on the information in the images.</b><p><li>The sound of a bell means you did something right, and received a small bonus reward.<p><li>Each trial begins with a <b>WHITE DOT</b>. Click the dot to begin the trial.<p><li>The HIT will submit <b>AUTOMATICALLY</b> after a certain number of trials. If the HIT freezes or does not submit, please contact us to resolve the issue and receive compensation for your time.<p><text style=\\\"color:#7A7A7A; font-size:smaller; font-style:italic\\\">If you cannot meet these requirements or if doing so could cause discomfort or injury, do not accept this HIT. You will not be penalized in any way.</text></ul>\", \n   24          \"juiceRewardPer1000Trials\": 250, \n   25:         \"playspace_degreesVisualAngle\": 24, \n   26          \"playspace_verticalOffsetInches\": 0, \n   27          \"playspace_viewingDistanceInches\": 8, \n   28          \"primary_reinforcer_type\": \"monetary\", \n   29          \"rigEnvironment\": \"mechanicalturk\", \n   30:         \"screen_virtualPixelsPerInch\": 143.755902965\n   31      }, \n   32      \"GAME_PACKAGE\": {\n   ..\n   64          \"TASK_SEQUENCE\": [\n   65              {\n   66:                 \"actionDiameterDegrees\": [\n   67                      6, \n   68                      6\n   ..\n   77                  ], \n   78                  \"averageReturnCriterion\": 0.8, \n   79:                 \"choiceDiameterDegrees\": [\n   80                      4, \n   81                      4\n   ..\n   91                  ], \n   92                  \"drawEyeFixationDot\": true, \n   93:                 \"fixationDiameterDegrees\": 3, \n   94                  \"fixationXCentroid\": 0.5, \n   95                  \"fixationYCentroid\": 0.8, \n   ..\n  113                      \"stimulus_objectome_flute\"\n  114                  ], \n  115:                 \"sampleDiameterDegrees\": 8, \n  116                  \"sampleOffMsec\": 0, \n  117                  \"sampleOnMsec\": 200, \n  ...\n  198  \n  199  <body>\n  200:     Loading HIT...If you are stuck on this screen, please make sure you are using Google Chrome and have cookies ENABLED. \n  201  </body>\n  202  </html>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkSR_blackdiamond.html:\n    2  \n    3  <head>\n    4: <meta name=\"mobile-web-app-capable\" content=\"yes\"> <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n    5  <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"/>\n    6  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    .\n   15      SESSION_PACKAGE = {\n   16      \"ENVIRONMENT\": {\n   17:                   \"playspace_degreesVisualAngle\":24,\n   18                    \"playspace_verticalOffsetInches\":0, \n   19                    \"playspace_viewingDistanceInches\":12, \n   20:                   \"screen_virtualPixelsPerInch\":143.755902965,\n   21                    \"primary_reinforcer_type\":\"monetary\", \n   22                    \"action_event_type\":[\"mouseup\", \"touchstart\", \"touchmove\"],\n   ..\n   33                        \"periodicRewardAmount\": 0, \n   34                        \"periodicRewardIntervalMsec\": 0, \n   35:                       \"randomSeed\": \"none\"\n   36                      }, \n   37                      \"IMAGEBAGS\": [\n   ..\n   46                      \"TASK_SEQUENCE\": [\n   47                        {\n   48:                         \"actionDiameterDegrees\": [\n   49                            4, \n   50                            4\n   ..\n   59                          ], \n   60                          \"averageReturnCriterion\": 1, \n   61:                         \"choiceDiameterDegrees\": [\n   62                            4, \n   63                            4\n   ..\n   73                          ], \n   74                          \"drawEyeFixationDot\": true, \n   75:                         \"fixationDiameterDegrees\": 4, \n   76                          \"fixationXCentroid\": 0.5, \n   77                          \"fixationYCentroid\": 0.8, \n   ..\n   95                            \"whiteDiamond\"\n   96                          ], \n   97:                         \"sampleDiameterDegrees\": 8, \n   98                          \"sampleOffMsec\": 0, \n   99                          \"sampleOnMsec\": 200, \n  ...\n  104                        }, \n  105                        {\n  106:                         \"actionDiameterDegrees\": [\n  107                            4, \n  108                            4\n  ...\n  117                          ], \n  118                          \"averageReturnCriterion\": 1, \n  119:                         \"choiceDiameterDegrees\": [\n  120                            4, \n  121                            4\n  ...\n  131                          ], \n  132                          \"drawEyeFixationDot\": true, \n  133:                         \"fixationDiameterDegrees\": 4, \n  134                          \"fixationXCentroid\": 0.5, \n  135                          \"fixationYCentroid\": 0.8, \n  ...\n  153                            \"stimulus_objectome_banana\"\n  154                          ], \n  155:                         \"sampleDiameterDegrees\": 8, \n  156                          \"sampleOffMsec\": 0, \n  157                          \"sampleOnMsec\": 200, \n  ...\n  238  \n  239  <body>\n  240:     Loading HIT...If you are stuck on this screen, please make sure you are using Google Chrome and have cookies ENABLED. \n  241  </body>\n  242  </html>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1521113171_0.html:\n    2  \n    3  <head>\n    4: <meta name=\"mobile-web-app-capable\" content=\"yes\"> <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n    5  <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"/>\n    6  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    .\n   21      ], \n   22      \"bonusUSDPerCorrect\": 0.0005, \n   23:     \"instructionsDialogueString\": \"<ul><p><text style=\\\"font-weight:bold; font-size:large\\\">Thank you for your interest and contributing to research at at MIT!</text><pi><li>Please use the latest version of <b>Google Chrome</b> to work on this HIT. It may not work correctly on other browsers.<p><li>You will be presented with rapidly flashed images. <b>Your task is to report what OBJECT you thought you saw in a rapidly flashed image by clicking on ONE of two choice images.</b><p><li>The sound of a bell means you did something right, and received a small bonus reward.<p><li>Each trial begins with a <b>WHITE DOT</b> that must be clicked to initiate the trial.<p><li>The HIT will submit <b>AUTOMATICALLY</b> after a certain number of trials. If the HIT freezes or does not submit, please contact us to resolve the issue and receive compensation for your time.<p><text style=\\\"color:#7A7A7A; font-size:smaller; font-style:italic\\\">If you cannot meet these requirements or if doing so could cause discomfort or injury, do not accept this HIT. You will not be penalized in any way.</text></ul>\", \n   24      \"juiceRewardPer1000Trials\": 250, \n   25:     \"playspace_degreesVisualAngle\": 24, \n   26      \"playspace_verticalOffsetInches\": 0, \n   27      \"playspace_viewingDistanceInches\": 12, \n   28      \"primary_reinforcer_type\": \"monetary\", \n   29      \"rigEnvironment\": \"mechanicalturk\", \n   30:     \"screen_virtualPixelsPerInch\": 143.755902965\n   31    }, \n   32    \"GAME_PACKAGE\": {\n   ..\n   38        \"periodicRewardAmount\": 0, \n   39        \"periodicRewardIntervalMsec\": 0, \n   40:       \"randomSeed\": \"none\"\n   41      }, \n   42      \"IMAGEBAGS\": \"https://s3.amazonaws.com/milresources/ImageBagManifests/MutatorB0/MutatorB0_FullVar_and_Canonical_imagebags.json\", \n   43      \"TASK_SEQUENCE\": [\n   44        {\n   45:         \"actionDiameterDegrees\": [\n   46            4, \n   47            4\n   ..\n   56          ], \n   57          \"averageReturnCriterion\": 0, \n   58:         \"choiceDiameterDegrees\": [\n   59            4, \n   60            4\n   ..\n   92          ], \n   93          \"drawEyeFixationDot\": true, \n   94:         \"fixationDiameterDegrees\": 4, \n   95          \"fixationXCentroid\": 0.5, \n   96          \"fixationYCentroid\": 0.8, \n   ..\n  122            \"MutatorB0_FullVar_batch0obj19\"\n  123          ], \n  124:         \"sampleDiameterDegrees\": 8, \n  125          \"sampleOffMsec\": 0, \n  126          \"sampleOnMsec\": 200, \n  ...\n  207  \n  208  <body>\n  209:     Loading HIT...If you are stuck on this screen, please make sure you are using Google Chrome and have cookies ENABLED. \n  210  </body>\n  211  </html>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1521114721_0.html:\n    2  \n    3  <head>\n    4: <meta name=\"mobile-web-app-capable\" content=\"yes\"> <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n    5  <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"/>\n    6  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    .\n   21      ], \n   22      \"bonusUSDPerCorrect\": 0.0005, \n   23:     \"instructionsDialogueString\": \"<ul><p><text style=\\\"font-weight:bold; font-size:large\\\">Thank you for your interest and contributing to research at at MIT!</text><pi><li>Please use the latest version of <b>Google Chrome</b> to work on this HIT. It may not work correctly on other browsers.<p><li>You will be presented with rapidly flashed images. <b>Your task is to report what OBJECT you thought you saw in a rapidly flashed image by clicking on ONE of two choice images.</b><p><li>The sound of a bell means you did something right, and received a small bonus reward.<p><li>Each trial begins with a <b>WHITE DOT</b> that must be clicked to initiate the trial.<p><li>The HIT will submit <b>AUTOMATICALLY</b> after a certain number of trials. If the HIT freezes or does not submit, please contact us to resolve the issue and receive compensation for your time.<p><text style=\\\"color:#7A7A7A; font-size:smaller; font-style:italic\\\">If you cannot meet these requirements or if doing so could cause discomfort or injury, do not accept this HIT. You will not be penalized in any way.</text></ul>\", \n   24      \"juiceRewardPer1000Trials\": 250, \n   25:     \"playspace_degreesVisualAngle\": 24, \n   26      \"playspace_verticalOffsetInches\": 0, \n   27      \"playspace_viewingDistanceInches\": 12, \n   28      \"primary_reinforcer_type\": \"monetary\", \n   29      \"rigEnvironment\": \"mechanicalturk\", \n   30:     \"screen_virtualPixelsPerInch\": 143.755902965\n   31    }, \n   32    \"GAME_PACKAGE\": {\n   ..\n   38        \"periodicRewardAmount\": 0, \n   39        \"periodicRewardIntervalMsec\": 0, \n   40:       \"randomSeed\": \"none\"\n   41      }, \n   42      \"IMAGEBAGS\": \"https://s3.amazonaws.com/milresources/ImageBagManifests/MutatorB0/MutatorB0_19_38_FullVar_and_Canonical_imagebags.json\", \n   43      \"TASK_SEQUENCE\": [\n   44        {\n   45:         \"actionDiameterDegrees\": [\n   46            4, \n   47            4\n   ..\n   56          ], \n   57          \"averageReturnCriterion\": 0, \n   58:         \"choiceDiameterDegrees\": [\n   59            4, \n   60            4\n   ..\n   92          ], \n   93          \"drawEyeFixationDot\": true, \n   94:         \"fixationDiameterDegrees\": 4, \n   95          \"fixationXCentroid\": 0.5, \n   96          \"fixationYCentroid\": 0.8, \n   ..\n  122            \"MutatorB0_FullVar_batch0obj19\"\n  123          ], \n  124:         \"sampleDiameterDegrees\": 8, \n  125          \"sampleOffMsec\": 0, \n  126          \"sampleOnMsec\": 200, \n  ...\n  207  \n  208  <body>\n  209:     Loading HIT...If you are stuck on this screen, please make sure you are using Google Chrome and have cookies ENABLED. \n  210  </body>\n  211  </html>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1537278272_0.html:\n    2  \n    3  <head>\n    4: <meta name=\"mobile-web-app-capable\" content=\"yes\"> <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n    5  <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"/>\n    6  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    .\n   22      \"bonusUSDPerCorrect\": 0.0005, \n   23      \"juiceRewardPer1000Trials\": 250, \n   24:     \"playspace_degreesVisualAngle\": 24, \n   25      \"playspace_verticalOffsetInches\": 0, \n   26      \"playspace_viewingDistanceInches\": 12, \n   27      \"primary_reinforcer_type\": \"monetary\", \n   28      \"rigEnvironment\": \"mechanicalturk\", \n   29:     \"screen_virtualPixelsPerInch\": 143.755902965\n   30    }, \n   31    \"GAME_PACKAGE\": {\n   ..\n   37        \"periodicRewardAmount\": 0, \n   38        \"periodicRewardIntervalMsec\": 0, \n   39:       \"randomSeed\": \"none\"\n   40      }, \n   41      \"IMAGEBAGS\": [\n   ..\n   45      \"TASK_SEQUENCE\": [\n   46        {\n   47:         \"actionDiameterDegrees\": [\n   48            4, \n   49            4\n   ..\n   58          ], \n   59          \"averageReturnCriterion\": 0.8, \n   60:         \"choiceDiameterDegrees\": [\n   61            4, \n   62            4\n   ..\n  109          ], \n  110          \"drawEyeFixationDot\": true, \n  111:         \"fixationDiameterDegrees\": 4, \n  112          \"fixationXCentroid\": 0.5, \n  113          \"fixationYCentroid\": 0.8, \n  ...\n  124            \"Nightmare8_Gray_batch0obj14\"\n  125          ], \n  126:         \"sampleDiameterDegrees\": 8, \n  127          \"sampleOffMsec\": 0, \n  128          \"sampleOnMsec\": 150, \n  ...\n  133        }, \n  134        {\n  135:         \"actionDiameterDegrees\": [\n  136            4, \n  137            4\n  ...\n  146          ], \n  147          \"averageReturnCriterion\": 0, \n  148:         \"choiceDiameterDegrees\": [\n  149            4, \n  150            4\n  ...\n  512          ], \n  513          \"drawEyeFixationDot\": true, \n  514:         \"fixationDiameterDegrees\": 4, \n  515          \"fixationXCentroid\": 0.5, \n  516          \"fixationYCentroid\": 0.8, \n  ...\n  547            \"StyleInjection_batch0obj90_cauliflower\"\n  548          ], \n  549:         \"sampleDiameterDegrees\": 8, \n  550          \"sampleOffMsec\": 0, \n  551          \"sampleOnMsec\": 150, \n  ...\n  632  \n  633  <body>\n  634:     Loading HIT...If you are stuck on this screen, please make sure you are using Google Chrome and have cookies ENABLED. \n  635  </body>\n  636  </html>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/Michaelo_landing_page.html:\n    2  \n    3  <head>\n    4: <meta name=\"mobile-web-app-capable\" content=\"yes\"> <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n    5  <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"/>\n    6  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    .\n   67  \n   68  async function get_ip_address(){\n   69:       // need to do here or can do in main?\n   70  \n   71        var resolveFunc\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/Zico_landing_page.html:\n    2  \n    3  <head>\n    4: <meta name=\"mobile-web-app-capable\" content=\"yes\"> <!-- full screen https://developer.chrome.com/multidevice/android/installtohomescreen -->\n    5  <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"/>\n    6  <meta http-equiv=\"Pragma\" content=\"no-cache\"/>\n    .\n   67  \n   68  async function get_ip_address(){\n   69:       // need to do here or can do in main?\n   70  \n   71        var resolveFunc\n\n485 matches across 36 files\n\n\nSearching 52 files for \"ee \"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_bluetooth.js:\n    9  //Performing operations that require explicit user interaction on touchstart events is deprecated\n   10  // and will be removed in M54, around October 2016.\n   11: // See https://www.chromestatus.com/features/5649871251963904 for more details.\n   12  \n   13  //----retry on disconnect\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_utils.js:\n  411  function add(a, b) {\n  412      // For use in .reduce\n  413:     // See \n  414      // https://stackoverflow.com/questions/1230233/how-to-find-the-sum-of-an-array-of-numbers\n  415      \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/javascript_utils/lz-string.js:\n    2  // This work is free. You can redistribute it and/or modify it\n    3  // under the terms of the WTFPL, Version 2\n    4: // For more information see LICENSE.txt or http://www.wtfpl.net/\n    5  //\n    6  // For more information, the home page:\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/javascript_utils/seedrandom.js:\n  181  Copyright 2014 David Bau.\n  182  \n  183: Permission is hereby granted, free of charge, to any person obtaining\n  184  a copy of this software and associated documentation files (the\n  185  \"Software\"), to deal in the Software without restriction, including\n  ...\n  209  \n  210  //\n  211: // The following constants are related to IEEE 754 limits.\n  212  //\n  213  var startdenom = math.pow(width, chunks),\n  ...\n  247  \n  248    // This function returns a random double in [0, 1) that contains\n  249:   // randomness in every bit of the mantissa of the IEEE 754 value.\n  250    function() {\n  251      var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n  ...\n  306      // For robust unpredictability, the function call below automatically\n  307      // discards an initial batch of values.  This is called RC4-drop[256].\n  308:     // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  309    })(width);\n  310  }\n  ...\n  312  //\n  313  // flatten()\n  314: // Converts an object tree to nested arrays of strings.\n  315  //\n  316  function flatten(obj, depth) {\n\n8 matches across 4 files\n\n\nSearching 52 files for \" ee \"\n\n0 matches\n\nSearching 52 files for \"could not infer\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_SessionBootStrapper.js:\n  224          }\n  225          else{\n  226:             console.log('SessionBootStrapper.infer_load_method could not infer for key', s, '; not supported')\n  227              return undefined\n  228          }\n\n1 match in 1 file\n\n\nSearching 52 files for \"agentID\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_CheckPointer.js:\n   14  class DropboxCheckPointer extends CheckPointerClass{ \n   15  \n   16: constructor(DIO, agentId, gamePackage){\n   17      super(gamePackage)\n   18  \n   19      this.DIO = DIO\n   20:     this.agentId = agentId\n   21      this.saveTimeoutMsec = 5000 \n   22      this.debugMode = true\n   ..\n   24  \n   25  async build(){\n   26:     this.checkpointSavePath = join([INSTALL_SETTINGS.checkpointDirPath, 'Checkpoint_'+this.agentId+'.ckpt'])\n   27:     this.debugCheckpointSavePath = join([INSTALL_SETTINGS.debugCheckpointDirPath, 'debug_Checkpoint_'+this.agentId+'.ckpt'])\n   28  \n   29      var exists = await DIO.exists(this.checkpointSavePath)\n   ..\n   85  generate_default_checkpoint(){\n   86      var checkpoint = {}\n   87:     checkpoint['agentId'] = this.agentId\n   88      checkpoint['gameHash'] = this.generate_hash()\n   89      checkpoint['taskNumber'] = 0 \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_SessionBootStrapper.js:\n   19          wdm('Download_from_stringing SESSION_PACKAGE...')\n   20          var sessionPackageBootstrapString = '/MonkeyTurk_upstairs/Subjects/Crypto_session.json'\n   21:         var agentID = 'Crypto'\n   22    \n   23          var sessionPackage = await this.download_from_string(sessionPackageBootstrapString)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_UX.js:\n   48      \n   49  \n   50:     updateSessionTextbox(agentId, ExperimentName){\n   51          var sess_textbox = document.getElementById(\"SessionTextBox\")\n   52  \n   ..\n   55          var line2_prefix = \"<b>Game:</b> \"\n   56  \n   57:         sess_textbox.innerHTML = line1_prefix + agentId + linebreak + line2_prefix + ExperimentName\n   58      }\n   59  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_MechanicalTurk_session.js:\n   20    SESSION['url'] = window.location.href\n   21    SESSION['landingPageURL'] = landingPageURL\n   22:   SESSION['agentId']  = SESSION['workerId']\n   23    SESSION['unixTimestampPageLoad'] = window.performance.timing.navigationStart\n   24  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   14    SESSION['url'] = window.location.href\n   15    SESSION['landingPageURL'] = landingPageURL\n   16:   SESSION['agentId'] = await LocalStorageIO.load_string('agentId')\n   17  \n   18    SESSION['unixTimestampPageLoad'] = window.performance.timing.navigationStart\n   ..\n   24     await DIO.build(window.location.href)\n   25  \n   26:    var saveDir = join([INSTALL_SETTINGS.dataDirPath, SESSION['agentId']])\n   27:    var debugDir = join([INSTALL_SETTINGS.debugDataDirPath, SESSION['agentId']])\n   28:    DataWriter = new DropboxDataWriter(DIO, debugDir, saveDir, SESSION['agentId'])\n   29  \n   30     wdm('Starting checkpointer...')\n   31:    CheckPointer = new DropboxCheckPointer(DIO, SESSION['agentId'], GAME, TASK_SEQUENCE)\n   32     await CheckPointer.build()\n   33  \n   ..\n   35     IB = new ImageBuffer(SIO)\n   36  \n   37:    UX.updateSessionTextbox(SESSION['agentId'], GAME['gameId'])\n   38  \n   39     TaskStreamer = new TaskStreamerClass(GAME_PACKAGE, IB, CheckPointer)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/task_specification.json:\n   97  \"SESSION\":{\n   98      \"gameID\":\"text\", \n   99:     \"agentID\":\"text\",\n  100      \"species\":\"text\",\n  101      \"unixTimestampPageLoad\":\"\",\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/landing_page_template.html:\n   23      // Not necessary to fill out for mechanical turk; in that case the workerId is extracted from the URL suffix. \n   24      // Fill in for upstairs task; e.g. 'Zico'\n   25:     agentId = __AGENTID_GOES_HERE__\n   26    }\n   27    catch(error){\n   28      console.log(error)\n   29:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n   30    }\n   31  \n   32:   var localSavePackage = {'SESSION_PACKAGE':SESSION_PACKAGE, 'agentId':agentId, 'LANDING_PAGE_URL':window.location.href}\n   33    await concludeLandingPage(localSavePackage)\n   34  }\n   ..\n   41      \n   42      SESSION_PACKAGE = localSavePackage['SESSION_PACKAGE']\n   43:     agentId = localSavePackage['agentId']\n   44      LANDING_PAGE_URL = localSavePackage['LANDING_PAGE_URL']\n   45  \n   ..\n   48      await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n   49      await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n   50:     await localStorage.setItem('agentId', btoa(agentId))\n   51  \n   52      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabMTS.html:\n  105      // Not necessary to fill out for mechanical turk; in that case the workerId is extracted from the URL suffix. \n  106      // Fill in for upstairs task; e.g. 'Zico'\n  107:     agentId = \"example_inlab_worker\"\n  108    }\n  109    catch(error){\n  110      console.log(error)\n  111:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  112    }\n  113  \n  114:   var localSavePackage = {'SESSION_PACKAGE':SESSION_PACKAGE, 'agentId':agentId, 'LANDING_PAGE_URL':window.location.href}\n  115    await concludeLandingPage(localSavePackage)\n  116  }\n  ...\n  123      \n  124      SESSION_PACKAGE = localSavePackage['SESSION_PACKAGE']\n  125:     agentId = localSavePackage['agentId']\n  126      LANDING_PAGE_URL = localSavePackage['LANDING_PAGE_URL']\n  127  \n  ...\n  130      await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  131      await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  132:     await localStorage.setItem('agentId', btoa(agentId))\n  133  \n  134      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabSR.html:\n   23      // Not necessary to fill out for mechanical turk; in that case the workerId is extracted from the URL suffix. \n   24      // Fill in for upstairs task; e.g. 'Zico'\n   25:     agentId = \"example_inlab_worker\"\n   26    }\n   27    catch(error){\n   28      console.log(error)\n   29:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n   30    }\n   31  \n   32:   var localSavePackage = {'SESSION_PACKAGE':SESSION_PACKAGE, 'agentId':agentId, 'LANDING_PAGE_URL':window.location.href}\n   33    await concludeLandingPage(localSavePackage)\n   34  }\n   ..\n   41      \n   42      SESSION_PACKAGE = localSavePackage['SESSION_PACKAGE']\n   43:     agentId = localSavePackage['agentId']\n   44      LANDING_PAGE_URL = localSavePackage['LANDING_PAGE_URL']\n   45  \n   ..\n   48      await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n   49      await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n   50:     await localStorage.setItem('agentId', btoa(agentId))\n   51  \n   52      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabSR_blackdiamond.html:\n  174      // Not necessary to fill out for mechanical turk; in that case the workerId is extracted from the URL suffix. \n  175      // Fill in for upstairs task; e.g. 'Zico'\n  176:     agentId = 'exampleInlabWorker'\n  177    }\n  178    catch(error){\n  179      console.log(error)\n  180:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  181    }\n  182  \n  183:   var localSavePackage = {'SESSION_PACKAGE':SESSION_PACKAGE, 'agentId':agentId, 'LANDING_PAGE_URL':window.location.href}\n  184    await concludeLandingPage(localSavePackage)\n  185  }\n  ...\n  192      \n  193      SESSION_PACKAGE = localSavePackage['SESSION_PACKAGE']\n  194:     agentId = localSavePackage['agentId']\n  195      LANDING_PAGE_URL = localSavePackage['LANDING_PAGE_URL']\n  196  \n  ...\n  199      await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  200      await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  201:     await localStorage.setItem('agentId', btoa(agentId))\n  202  \n  203      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurk_MTS_choicespace.html:\n  129      // Not necessary to fill out for mechanical turk; in that case the workerId is extracted from the URL suffix. \n  130      // Fill in for upstairs task; e.g. 'Zico'\n  131:     agentId = __AGENTID_GOES_HERE__\n  132    }\n  133    catch(error){\n  134      console.log(error)\n  135:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  136    }\n  137  \n  138:   var localSavePackage = {'SESSION_PACKAGE':SESSION_PACKAGE, 'agentId':agentId, 'LANDING_PAGE_URL':window.location.href}\n  139    await concludeLandingPage(localSavePackage)\n  140  }\n  ...\n  147      \n  148      SESSION_PACKAGE = localSavePackage['SESSION_PACKAGE']\n  149:     agentId = localSavePackage['agentId']\n  150      LANDING_PAGE_URL = localSavePackage['LANDING_PAGE_URL']\n  151  \n  ...\n  154      await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  155      await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  156:     await localStorage.setItem('agentId', btoa(agentId))\n  157  \n  158      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS.html:\n  128      // Not necessary to fill out for mechanical turk; in that case the workerId is extracted from the URL suffix. \n  129      // Fill in for upstairs task; e.g. 'Zico'\n  130:     agentId = __AGENTID_GOES_HERE__\n  131    }\n  132    catch(error){\n  133      console.log(error)\n  134:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  135    }\n  136  \n  137:   var localSavePackage = {'SESSION_PACKAGE':SESSION_PACKAGE, 'agentId':agentId, 'LANDING_PAGE_URL':window.location.href}\n  138    await concludeLandingPage(localSavePackage)\n  139  }\n  ...\n  146      \n  147      SESSION_PACKAGE = localSavePackage['SESSION_PACKAGE']\n  148:     agentId = localSavePackage['agentId']\n  149      LANDING_PAGE_URL = localSavePackage['LANDING_PAGE_URL']\n  150  \n  ...\n  153      await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  154      await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  155:     await localStorage.setItem('agentId', btoa(agentId))\n  156  \n  157      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS_to_SR.html:\n  186      // Not necessary to fill out for mechanical turk; in that case the workerId is extracted from the URL suffix. \n  187      // Fill in for upstairs task; e.g. 'Zico'\n  188:     agentId = __AGENTID_GOES_HERE__\n  189    }\n  190    catch(error){\n  191      console.log(error)\n  192:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  193    }\n  194  \n  195:   var localSavePackage = {'SESSION_PACKAGE':SESSION_PACKAGE, 'agentId':agentId, 'LANDING_PAGE_URL':window.location.href}\n  196    await concludeLandingPage(localSavePackage)\n  197  }\n  ...\n  204      \n  205      SESSION_PACKAGE = localSavePackage['SESSION_PACKAGE']\n  206:     agentId = localSavePackage['agentId']\n  207      LANDING_PAGE_URL = localSavePackage['LANDING_PAGE_URL']\n  208  \n  ...\n  211      await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  212      await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  213:     await localStorage.setItem('agentId', btoa(agentId))\n  214  \n  215      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkSR.html:\n  133      // Not necessary to fill out for mechanical turk; in that case the workerId is extracted from the URL suffix. \n  134      // Fill in for upstairs task; e.g. 'Zico'\n  135:     agentId = __AGENTID_GOES_HERE__\n  136    }\n  137    catch(error){\n  138      console.log(error)\n  139:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  140    }\n  141  \n  142:   var localSavePackage = {'SESSION_PACKAGE':SESSION_PACKAGE, 'agentId':agentId, 'LANDING_PAGE_URL':window.location.href}\n  143    await concludeLandingPage(localSavePackage)\n  144  }\n  ...\n  151      \n  152      SESSION_PACKAGE = localSavePackage['SESSION_PACKAGE']\n  153:     agentId = localSavePackage['agentId']\n  154      LANDING_PAGE_URL = localSavePackage['LANDING_PAGE_URL']\n  155  \n  ...\n  158      await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  159      await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  160:     await localStorage.setItem('agentId', btoa(agentId))\n  161  \n  162      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkSR_blackdiamond.html:\n  173      // Not necessary to fill out for mechanical turk; in that case the workerId is extracted from the URL suffix. \n  174      // Fill in for upstairs task; e.g. 'Zico'\n  175:     agentId = __AGENTID_GOES_HERE__\n  176    }\n  177    catch(error){\n  178      console.log(error)\n  179:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  180    }\n  181  \n  182:   var localSavePackage = {'SESSION_PACKAGE':SESSION_PACKAGE, 'agentId':agentId, 'LANDING_PAGE_URL':window.location.href}\n  183    await concludeLandingPage(localSavePackage)\n  184  }\n  ...\n  191      \n  192      SESSION_PACKAGE = localSavePackage['SESSION_PACKAGE']\n  193:     agentId = localSavePackage['agentId']\n  194      LANDING_PAGE_URL = localSavePackage['LANDING_PAGE_URL']\n  195  \n  ...\n  198      await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  199      await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  200:     await localStorage.setItem('agentId', btoa(agentId))\n  201  \n  202      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1521113171_0.html:\n  142      // Not necessary to fill out for mechanical turk; in that case the workerId is extracted from the URL suffix. \n  143      // Fill in for upstairs task; e.g. 'Zico'\n  144:     agentId = __AGENTID_GOES_HERE__\n  145    }\n  146    catch(error){\n  147      console.log(error)\n  148:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  149    }\n  150  \n  151:   var localSavePackage = {'SESSION_PACKAGE':SESSION_PACKAGE, 'agentId':agentId, 'LANDING_PAGE_URL':window.location.href}\n  152    await concludeLandingPage(localSavePackage)\n  153  }\n  ...\n  160      \n  161      SESSION_PACKAGE = localSavePackage['SESSION_PACKAGE']\n  162:     agentId = localSavePackage['agentId']\n  163      LANDING_PAGE_URL = localSavePackage['LANDING_PAGE_URL']\n  164  \n  ...\n  167      await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  168      await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  169:     await localStorage.setItem('agentId', btoa(agentId))\n  170  \n  171      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1521114721_0.html:\n  142      // Not necessary to fill out for mechanical turk; in that case the workerId is extracted from the URL suffix. \n  143      // Fill in for upstairs task; e.g. 'Zico'\n  144:     agentId = __AGENTID_GOES_HERE__\n  145    }\n  146    catch(error){\n  147      console.log(error)\n  148:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  149    }\n  150  \n  151:   var localSavePackage = {'SESSION_PACKAGE':SESSION_PACKAGE, 'agentId':agentId, 'LANDING_PAGE_URL':window.location.href}\n  152    await concludeLandingPage(localSavePackage)\n  153  }\n  ...\n  160      \n  161      SESSION_PACKAGE = localSavePackage['SESSION_PACKAGE']\n  162:     agentId = localSavePackage['agentId']\n  163      LANDING_PAGE_URL = localSavePackage['LANDING_PAGE_URL']\n  164  \n  ...\n  167      await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  168      await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  169:     await localStorage.setItem('agentId', btoa(agentId))\n  170  \n  171      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1537278272_0.html:\n  567      // Not necessary to fill out for mechanical turk; in that case the workerId is extracted from the URL suffix. \n  568      // Fill in for upstairs task; e.g. 'Zico'\n  569:     agentId = __AGENTID_GOES_HERE__\n  570    }\n  571    catch(error){\n  572      console.log(error)\n  573:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  574    }\n  575  \n  576:   var localSavePackage = {'SESSION_PACKAGE':SESSION_PACKAGE, 'agentId':agentId, 'LANDING_PAGE_URL':window.location.href}\n  577    await concludeLandingPage(localSavePackage)\n  578  }\n  ...\n  585      \n  586      SESSION_PACKAGE = localSavePackage['SESSION_PACKAGE']\n  587:     agentId = localSavePackage['agentId']\n  588      LANDING_PAGE_URL = localSavePackage['LANDING_PAGE_URL']\n  589  \n  ...\n  592      await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  593      await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  594:     await localStorage.setItem('agentId', btoa(agentId))\n  595  \n  596      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/Michaelo_landing_page.html:\n   22      // Not necessary to fill out for mechanical turk; in that case the workerId is extracted from the URL suffix. \n   23      // Fill in for upstairs task; e.g. 'Zico'\n   24:     agentID = 'Michaelo'\n   25    }\n   26    catch(error){\n   27      console.log(error)\n   28:     agentID = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n   29:     agentID = 'unknown_agent_ip_'\n   30:     agentID+=await get_ip_address()\n   31    }\n   32  \n   33:   var localSavePackage = {'SESSION_PACKAGE':SESSION_PACKAGE, 'agentID':agentID, 'LANDING_PAGE_URL':window.location.href}\n   34    await concludeLandingPage(localSavePackage)\n   35  }\n   ..\n   42      \n   43      SESSION_PACKAGE = localSavePackage['SESSION_PACKAGE']\n   44:     agentID = localSavePackage['agentID']\n   45      LANDING_PAGE_URL = localSavePackage['LANDING_PAGE_URL']\n   46  \n   ..\n   49      await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n   50      await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n   51:     await localStorage.setItem('agentId', btoa(agentID))\n   52  \n   53      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/Zico_landing_page.html:\n   22      // Not necessary to fill out for mechanical turk; in that case the workerId is extracted from the URL suffix. \n   23      // Fill in for upstairs task; e.g. 'Zico'\n   24:     agentID = 'Zico'\n   25    }\n   26    catch(error){\n   27      console.log(error)\n   28:     agentID = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n   29:     agentID = 'unknown_agent_ip_'\n   30:     agentID+=await get_ip_address()\n   31    }\n   32  \n   33:   var localSavePackage = {'SESSION_PACKAGE':SESSION_PACKAGE, 'agentID':agentID, 'LANDING_PAGE_URL':window.location.href}\n   34    await concludeLandingPage(localSavePackage)\n   35  }\n   ..\n   42      \n   43      SESSION_PACKAGE = localSavePackage['SESSION_PACKAGE']\n   44:     agentID = localSavePackage['agentID']\n   45      LANDING_PAGE_URL = localSavePackage['LANDING_PAGE_URL']\n   46  \n   ..\n   49      await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n   50      await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n   51:     await localStorage.setItem('agentId', btoa(agentID))\n   52  \n   53      console.log('All items stored. Redirecting...')\n\n144 matches across 20 files\n\n\nSearching 52 files for \"LocalStorageIO\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_CheckPointer.js:\n  167      async build(){\n  168          // Try loading checkpoint if it exists \n  169:         //this.checkpoint = await LocalStorageIO.load_string('ptap_checkpoint')\n  170  \n  171      }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_DiskIO.js:\n  202          }\n  203  \n  204:         var accessToken = await LocalStorageIO.load_string('_dbxAccessToken')\n  205          \n  206          if(accessToken.length<4){ // need a better check for nonsense; add dialogue \n  ...\n  430  \n  431  \n  432: class LocalStorageIO{\n  433      constructor(){\n  434  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_SessionBootStrapper.js:\n  158  \n  159      async load_localstorage_string(localStorageKey){\n  160:         var local_val = await LocalStorageIO.load_string(localStorageKey)\n  161          \n  162          if (local_val.startsWith('\\'') || local_val.startsWith('\\\"')){\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   14    SESSION['url'] = window.location.href\n   15    SESSION['landingPageURL'] = landingPageURL\n   16:   SESSION['agentId'] = await LocalStorageIO.load_string('agentId')\n   17  \n   18    SESSION['unixTimestampPageLoad'] = window.performance.timing.navigationStart\n\n5 matches across 4 files\n\n\nSearching 52 files for \"LocalStorageIO\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_CheckPointer.js:\n  167      async build(){\n  168          // Try loading checkpoint if it exists \n  169:         //this.checkpoint = await LocalStorageIO.load_string('ptap_checkpoint')\n  170  \n  171      }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_DiskIO.js:\n  202          }\n  203  \n  204:         var accessToken = await LocalStorageIO.load_string('_dbxAccessToken')\n  205          \n  206          if(accessToken.length<4){ // need a better check for nonsense; add dialogue \n  ...\n  430  \n  431  \n  432: class LocalStorageIO{\n  433      constructor(){\n  434  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_SessionBootStrapper.js:\n  157  \n  158      async load_localstorage_string(localStorageKey){\n  159:         var local_val = await LocalStorageIO.load_string(localStorageKey)\n  160          \n  161          if (local_val.startsWith('\\'') || local_val.startsWith('\\\"')){\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   14    SESSION['url'] = window.location.href\n   15    SESSION['landingPageURL'] = landingPageURL\n   16:   SESSION['agentId'] = await LocalStorageIO.load_string('agentId')\n   17  \n   18    SESSION['unixTimestampPageLoad'] = window.performance.timing.navigationStart\n\n5 matches across 4 files\n\n\nSearching 52 files for \"localStorage\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n  222    document.getElementById(\"submission_data\").value = JSON.stringify(dataobj);\n  223    \n  224:   // Extract assignmentId from localstorage \n  225:   var landingPageURL = await localStorage.getItem('LANDING_PAGE_URL')\n  226    landingPageURL = atob(landingPageURL)\n  227    var assignmentId = az.get_assignmentId_from_url(landingPageURL)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_CheckPointer.js:\n  167      async build(){\n  168          // Try loading checkpoint if it exists \n  169:         //this.checkpoint = await LocalStorageIO.load_string('ptap_checkpoint')\n  170  \n  171      }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_DataWriter.js:\n  212          catch(error){\n  213              console.log(error)\n  214:             // todo: write out to localstorage the data\n  215          }\n  216          await sleep(1500)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_DiskIO.js:\n  199          if(window.location.href.split('access_token').length>1){\n  200              var accessToken = utils.parseQueryString(window.location.hash).access_token\n  201:             localStorage.setItem('_dbxAccessToken', btoa(accessToken))\n  202          }\n  203  \n  204:         var accessToken = await LocalStorageIO.load_string('_dbxAccessToken')\n  205          \n  206          if(accessToken.length<4){ // need a better check for nonsense; add dialogue \n  ...\n  430  \n  431  \n  432: class LocalStorageIO{\n  433      constructor(){\n  434  \n  435      }\n  436      static async load_string(key){\n  437:       var string = await localStorage.getItem(key)\n  438        string = atob(string)\n  439:       //localStorage.removeItem(key);\n  440        return string\n  441      }\n  442  \n  443      static async load_json(key){\n  444:       var string = await localStorage.getItem(key)\n  445        string = atob(string)\n  446:       //localStorage.removeItem(key);\n  447        return JSON.parse(string)\n  448      }\n  ...\n  452              datastr = JSON.stringify(datastr)\n  453          }\n  454:         await localStorage.setItem(key, btoa(datastr))\n  455  \n  456      }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_SessionBootStrapper.js:\n    9          var unpackedSession = {}\n   10          \n   11:         // Retrieve landing page url from localstorage - no need to unpack further\n   12          wdm('Retrieving LANDING_PAGE_URL...')\n   13:         unpackedSession['LANDING_PAGE_URL'] = await this.load_localstorage_string('LANDING_PAGE_URL')\n   14          console.log(unpackedSession['LANDING_PAGE_URL'])\n   15:         // Retrieve sessionPackage bootstraps from localstorage\n   16:         var sessionPackageBootstrapString = await this.load_localstorage_string('SESSION_PACKAGE')\n   17          console.log(sessionPackageBootstrapString)\n   18          // Unpack sessionPackage\n   ..\n  156      }\n  157  \n  158:     async load_localstorage_string(localStorageKey){\n  159:         var local_val = await LocalStorageIO.load_string(localStorageKey)\n  160          \n  161          if (local_val.startsWith('\\'') || local_val.startsWith('\\\"')){\n  ...\n  180          }\n  181  \n  182:         if(loadMethod == 'localstorage'){\n  183              return JSON.parse(local_val)\n  184          }\n  ...\n  223          }\n  224          else if(s.startsWith('{') || s.startsWith('[')){\n  225:             return 'localstorage'\n  226          }\n  227          else{\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   14    SESSION['url'] = window.location.href\n   15    SESSION['landingPageURL'] = landingPageURL\n   16:   SESSION['agentId'] = 'Crypto'//await LocalStorageIO.load_string('agentId') // todo: fix\n   17  \n   18    SESSION['unixTimestampPageLoad'] = window.performance.timing.navigationStart\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/landing_page_template.html:\n   46      console.log('landing page url', window.location.href)\n   47  \n   48:     await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n   49:     await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n   50:     await localStorage.setItem('agentId', btoa(agentId))\n   51  \n   52      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabMTS.html:\n  128      console.log('landing page url', window.location.href)\n  129  \n  130:     await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  131:     await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  132:     await localStorage.setItem('agentId', btoa(agentId))\n  133  \n  134      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabSR.html:\n   46      console.log('landing page url', window.location.href)\n   47  \n   48:     await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n   49:     await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n   50:     await localStorage.setItem('agentId', btoa(agentId))\n   51  \n   52      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabSR_blackdiamond.html:\n  197      console.log('landing page url', window.location.href)\n  198  \n  199:     await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  200:     await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  201:     await localStorage.setItem('agentId', btoa(agentId))\n  202  \n  203      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurk_MTS_choicespace.html:\n  152      console.log('landing page url', window.location.href)\n  153  \n  154:     await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  155:     await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  156:     await localStorage.setItem('agentId', btoa(agentId))\n  157  \n  158      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS.html:\n  151      console.log('landing page url', window.location.href)\n  152  \n  153:     await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  154:     await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  155:     await localStorage.setItem('agentId', btoa(agentId))\n  156  \n  157      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS_to_SR.html:\n  209      console.log('landing page url', window.location.href)\n  210  \n  211:     await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  212:     await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  213:     await localStorage.setItem('agentId', btoa(agentId))\n  214  \n  215      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkSR.html:\n  156      console.log('landing page url', window.location.href)\n  157  \n  158:     await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  159:     await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  160:     await localStorage.setItem('agentId', btoa(agentId))\n  161  \n  162      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkSR_blackdiamond.html:\n  196      console.log('landing page url', window.location.href)\n  197  \n  198:     await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  199:     await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  200:     await localStorage.setItem('agentId', btoa(agentId))\n  201  \n  202      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1521113171_0.html:\n  165      console.log('landing page url', window.location.href)\n  166  \n  167:     await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  168:     await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  169:     await localStorage.setItem('agentId', btoa(agentId))\n  170  \n  171      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1521114721_0.html:\n  165      console.log('landing page url', window.location.href)\n  166  \n  167:     await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  168:     await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  169:     await localStorage.setItem('agentId', btoa(agentId))\n  170  \n  171      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1537278272_0.html:\n  590      console.log('landing page url', window.location.href)\n  591  \n  592:     await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n  593:     await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n  594:     await localStorage.setItem('agentId', btoa(agentId))\n  595  \n  596      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/Michaelo_landing_page.html:\n   47      console.log('landing page url', window.location.href)\n   48  \n   49:     await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n   50:     await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n   51:     await localStorage.setItem('agentId', btoa(agentID))\n   52  \n   53      console.log('All items stored. Redirecting...')\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/Zico_landing_page.html:\n   47      console.log('landing page url', window.location.href)\n   48  \n   49:     await localStorage.setItem(\"SESSION_PACKAGE\", btoa(JSON.stringify(SESSION_PACKAGE)))\n   50:     await localStorage.setItem('LANDING_PAGE_URL', btoa(LANDING_PAGE_URL))\n   51:     await localStorage.setItem('agentId', btoa(agentID))\n   52  \n   53      console.log('All items stored. Redirecting...')\n\n65 matches across 20 files\n\n\nSearching 52 files for \"crypto\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_SessionBootStrapper.js:\n   18          // Unpack sessionPackage\n   19          wdm('Download_from_stringing SESSION_PACKAGE...')\n   20:         var sessionPackageBootstrapString = '/MonkeyTurk_upstairs/Subjects/Crypto_session.json' // TODO: fix on tablet (ee issue)\n   21    \n   22          var sessionPackage = await this.download_from_string(sessionPackageBootstrapString)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_utils.js:\n  370  \n  371  function md5Hash(blob){\n  372:   var hash = CryptoJS.MD5(CryptoJS.enc.Latin1.parse(blob));\n  373    return hash\n  374  }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   14    SESSION['url'] = window.location.href\n   15    SESSION['landingPageURL'] = landingPageURL\n   16:   SESSION['agentId'] = 'Crypto'//await LocalStorageIO.load_string('agentId') // todo: fix\n   17  \n   18    SESSION['unixTimestampPageLoad'] = window.performance.timing.navigationStart\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/javascript_utils/seedrandom.js:\n  135  The random number sequence is the same as version 1.0 for string seeds.\n  136  * Version 2.0 changed the sequence for non-string seeds.\n  137: * Version 2.1 speeds seeding and uses window.crypto to autoseed if present.\n  138: * Version 2.2 alters non-crypto autoseeding to sweep up entropy from plugins.\n  139  * Version 2.3 adds support for \"new\", module loading, and a null seed arg.\n  140  * Version 2.3.1 adds a build environment, module packaging, and tests.\n  141  * Version 2.3.4 fixes bugs on IE8, and switches to MIT license.\n  142  * Version 2.3.6 adds a readable options object argument.\n  143: * Version 2.3.10 adds support for node.js crypto (contributed by ctd1500).\n  144  \n  145  The standard ARC4 key scheduler cycles short keys, which means that\n  ...\n  152  \n  153  When seedrandom() is called with zero args or a null seed, it uses a\n  154: seed drawn from the browser crypto object if present.  If there is no\n  155: crypto support, seedrandom() uses the current time, the native rng,\n  156  and a walk of several DOM objects to collect a few bits of entropy.\n  157  \n  ...\n  168  * seedrandom('explicit.')       - avg less than 0.2 milliseconds per call\n  169  * seedrandom('explicit.', true) - avg less than 0.2 milliseconds per call\n  170: * seedrandom() with crypto      - avg less than 0.2 milliseconds per call\n  171  \n  172: Autoseeding without crypto is somewhat slower, about 20-30 milliseconds on\n  173  a 2012 windows 7 1.5ghz i5 laptop, as seen on Firefox 19, IE 10, and Opera.\n  174  Seeded rng calls themselves are fast across these browsers, with slowest\n  ...\n  215      overflow = significance * 2,\n  216      mask = width - 1,\n  217:     nodecrypto;\n  218  \n  219  //\n  ...\n  340  //\n  341  // autoseed()\n  342: // Returns an object for autoseeding, using window.crypto if available.\n  343  //\n  344  /** @param {Uint8Array|Navigator=} seed */\n  345  function autoseed(seed) {\n  346    try {\n  347:     if (nodecrypto) return tostring(nodecrypto.randomBytes(width));\n  348:     global.crypto.getRandomValues(seed = new Uint8Array(width));\n  349      return tostring(seed);\n  350    } catch (e) {\n  ...\n  378    module.exports = impl;\n  379    try {\n  380:     // When in node.js, try using crypto package for autoseeding.\n  381:     nodecrypto = require('crypto');\n  382    } catch (ex) {}\n  383  } else if (define && define.amd) {\n  ...\n  386  \n  387  //\n  388: // Node.js native crypto support.\n  389  //\n  390  \n\n20 matches across 4 files\n\n\nSearching 52 files for \"crypto\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_SessionBootStrapper.js:\n   18          // Unpack sessionPackage\n   19          wdm('Download_from_stringing SESSION_PACKAGE...')\n   20:         //var sessionPackageBootstrapString = '/MonkeyTurk_upstairs/Subjects/Crypto_session.json' // TODO: fix on tablet (ee issue)\n   21    \n   22          var sessionPackage = await this.download_from_string(sessionPackageBootstrapString)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_utils.js:\n  370  \n  371  function md5Hash(blob){\n  372:   var hash = CryptoJS.MD5(CryptoJS.enc.Latin1.parse(blob));\n  373    return hash\n  374  }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   14    SESSION['url'] = window.location.href\n   15    SESSION['landingPageURL'] = landingPageURL\n   16:   SESSION['agentId'] = 'Crypto'//await LocalStorageIO.load_string('agentId') // todo: fix\n   17  \n   18    SESSION['unixTimestampPageLoad'] = window.performance.timing.navigationStart\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/javascript_utils/seedrandom.js:\n  135  The random number sequence is the same as version 1.0 for string seeds.\n  136  * Version 2.0 changed the sequence for non-string seeds.\n  137: * Version 2.1 speeds seeding and uses window.crypto to autoseed if present.\n  138: * Version 2.2 alters non-crypto autoseeding to sweep up entropy from plugins.\n  139  * Version 2.3 adds support for \"new\", module loading, and a null seed arg.\n  140  * Version 2.3.1 adds a build environment, module packaging, and tests.\n  141  * Version 2.3.4 fixes bugs on IE8, and switches to MIT license.\n  142  * Version 2.3.6 adds a readable options object argument.\n  143: * Version 2.3.10 adds support for node.js crypto (contributed by ctd1500).\n  144  \n  145  The standard ARC4 key scheduler cycles short keys, which means that\n  ...\n  152  \n  153  When seedrandom() is called with zero args or a null seed, it uses a\n  154: seed drawn from the browser crypto object if present.  If there is no\n  155: crypto support, seedrandom() uses the current time, the native rng,\n  156  and a walk of several DOM objects to collect a few bits of entropy.\n  157  \n  ...\n  168  * seedrandom('explicit.')       - avg less than 0.2 milliseconds per call\n  169  * seedrandom('explicit.', true) - avg less than 0.2 milliseconds per call\n  170: * seedrandom() with crypto      - avg less than 0.2 milliseconds per call\n  171  \n  172: Autoseeding without crypto is somewhat slower, about 20-30 milliseconds on\n  173  a 2012 windows 7 1.5ghz i5 laptop, as seen on Firefox 19, IE 10, and Opera.\n  174  Seeded rng calls themselves are fast across these browsers, with slowest\n  ...\n  215      overflow = significance * 2,\n  216      mask = width - 1,\n  217:     nodecrypto;\n  218  \n  219  //\n  ...\n  340  //\n  341  // autoseed()\n  342: // Returns an object for autoseeding, using window.crypto if available.\n  343  //\n  344  /** @param {Uint8Array|Navigator=} seed */\n  345  function autoseed(seed) {\n  346    try {\n  347:     if (nodecrypto) return tostring(nodecrypto.randomBytes(width));\n  348:     global.crypto.getRandomValues(seed = new Uint8Array(width));\n  349      return tostring(seed);\n  350    } catch (e) {\n  ...\n  378    module.exports = impl;\n  379    try {\n  380:     // When in node.js, try using crypto package for autoseeding.\n  381:     nodecrypto = require('crypto');\n  382    } catch (ex) {}\n  383  } else if (define && define.amd) {\n  ...\n  386  \n  387  //\n  388: // Node.js native crypto support.\n  389  //\n  390  \n\n20 matches across 4 files\n\n\nSearching 50 files for \"writepump\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n   35  <button id=\"connectble\" name=\"connectble\" >Connect to Bluetooth juicer</button>\n   36  <button id=\"noble\" name=\"noble\">No Bluetooth juicer</button>\n   37: <button id=\"drive_juice_button\" onclick=\"writepumpdurationtoBLE(500)\">Send juice signal</button>\n   38  \n   39  <div id=\"TrialCounter\">-</div>\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_bluetooth.js:\n   32    service: [],\n   33    writeconnectioncharacteristic: [],\n   34:   writepumpdurationcharacteristic: [],\n   35    pumpcharacteristic: [],\n   36    rfidcharacteristic: [],\n   ..\n  172      \n  173      ble.writeconnectioncharacteristic=characteristics[0]\n  174:     ble.writepumpdurationcharacteristic=characteristics[1]\n  175      ble.pumpcharacteristic=characteristics[2]\n  176      ble.rfidcharacteristic=characteristics[3]\n  ...\n  252  \n  253  //============== READ NOTIFICATIONS & WRITES ==============//\n  254: async function writepumpdurationtoBLE(num){\n  255    console.log('Attempting bluetooth write')\n  256    var arrInt8 = toBytesInt16(num)\n  257    ble.twrite_pumpduration=performance.now()\n  258    try{\n  259:     await ble.writepumpdurationcharacteristic.writeValue(arrInt8)\n  260        var textstr = 'wrote ble val >> ' + num + ', byte values ' + arrInt8\n  261        console.log(textstr)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Reinforcer.js:\n   40              }\n   41              else if (ble.connected == true){\n   42:                 var p2 = writepumpdurationtoBLE(Math.round(RewardDuration*1000))\n   43                  return p2\n   44              }\n\n6 matches across 3 files\n\n\nSearching 52 files for \"timestampStart\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n  184          trialOutcome['fixationX'] = fixationOutcome['x']\n  185          trialOutcome['fixationY'] = fixationOutcome['y']\n  186:         trialOutcome['timestampStart'] = fixationOutcome['timestamp']\n  187          trialOutcome['timestampFixationOnset'] = t_fixationOn\n  188          trialOutcome['timestampFixationAcquired'] = fixationOutcome['timestamp']\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/task_specification.json:\n   80      \"i_testId\":[[]], \n   81      \"taskNumber\":[],\n   82:     \"timestampStart\":[], \n   83      \"timestampStimulusOn\":[],\n   84      \"timestampChoiceOn\":[],\n\n2 matches across 2 files\n\n\nSearching 52 files for \"fixationOutcome\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n  121  \n  122          var t_fixationOn = await this.ScreenDisplayer.displayFixation()\n  123:         var fixationOutcome = await this.ActionPoller.Promise_wait_until_active_response()\n  124  \n  125          // RUN STIMULUS SEQUENCE\n  ...\n  182          trialOutcome['responseX'] = actionOutcome['x']\n  183          trialOutcome['responseY'] = actionOutcome['y']\n  184:         trialOutcome['fixationX'] = fixationOutcome['x']\n  185:         trialOutcome['fixationY'] = fixationOutcome['y']\n  186:         trialOutcome['timestampStart'] = fixationOutcome['timestamp']\n  187          trialOutcome['timestampFixationOnset'] = t_fixationOn\n  188:         trialOutcome['timestampFixationAcquired'] = fixationOutcome['timestamp']\n  189          trialOutcome['timestampResponse'] = actionOutcome['timestamp']\n  190          trialOutcome['timestampReinforcementOn'] = t_reinforcementOn\n\n5 matches in 1 file\n\n\nSearching 52 files for \"Promise_wait_until_active_response\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ActionPoller.js:\n  186      }\n  187  \n  188:     Promise_wait_until_active_response(){\n  189          // \n  190          var _this = this\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n  121  \n  122          var t_fixationOn = await this.ScreenDisplayer.displayFixation()\n  123:         var fixationOutcome = await this.ActionPoller.Promise_wait_until_active_response()\n  124  \n  125          // RUN STIMULUS SEQUENCE\n  ...\n  138          if(trialPackage['choiceTimeLimitMsec'] > 0){\n  139              var actionPromise = Promise.race([\n  140:                                 this.ActionPoller.Promise_wait_until_active_response(), \n  141                                  this.ActionPoller.timeout(trialPackage['choiceTimeLimitMsec'])]) \n  142          }\n  143          else{\n  144:             var actionPromise = this.ActionPoller.Promise_wait_until_active_response()\n  145          }\n  146  \n  ...\n  505  \n  506          await this.ScreenDisplayer.displayFixation()\n  507:         await this.ActionPoller.Promise_wait_until_active_response()\n  508  \n  509          // RUN STIMULUS SEQUENCE\n  ...\n  515              stimulusDiameterPixels)\n  516  \n  517:         await this.ActionPoller.Promise_wait_until_active_response()\n  518          this.SoundPlayer.play_sound('reward_sound')\n  519      }\n\n6 matches across 2 files\n\n\nSearching 52 files for \"onpageload\"\n\n0 matches\n\nSearching 52 files for \"unix\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_CheckPointer.js:\n  113  \n  114  async save_checkpoint(){\n  115:     this.checkpoint['lastSaveUnixTimestamp'] = (window.performance.timing.navigationStart + performance.now())/1000\n  116      var checkpointString = JSON.stringify(this.checkpoint, null, 2)\n  117  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_DiskIO.js:\n  407              var filemeta = await this.dbx.filesGetMetadata({path: filepath})\n  408              var date = new Date(filemeta.client_modified)\n  409:             var unix_timestamp = Math.round(date.getTime())\n  410:             return unix_timestamp\n  411          }\n  412          catch(error){\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n  401          this.deviceLog.navigator_vendor = navigator.vendor\n  402          this.deviceLog.navigator_language = navigator.language\n  403:         this.deviceLog.unixTimestampPageLoad = window.performance.timing.navigationStart\n  404          this.deviceLog.currentDate = new Date;\n  405          this.deviceLog.url = window.location.href\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ScreenDisplayer.js:\n  335  \n  336          var lastframe_timestamp = undefined;\n  337:         var frame_unix_timestamps = []\n  338  \n  339  \n  ...\n  351              if (timestamp - lastframe_timestamp >= t_durations[current_frame_index] || lastframe_timestamp == undefined){\n  352                  current_frame_index++;\n  353:                 frame_unix_timestamps[current_frame_index] = performance.now() //in milliseconds, rounded to nearest hundredth of a millisecond\n  354                  // Move canvas in front\n  355                  var curr_canvasobj = sequence[current_frame_index]\n  ...\n  369              else{\n  370                  _this.canvas_front = curr_canvasobj\n  371:                 resolveFunc(frame_unix_timestamps);\n  372              }\n  373          }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_MechanicalTurk_session.js:\n   21    SESSION['landingPageURL'] = landingPageURL\n   22    SESSION['agentId']  = SESSION['workerId']\n   23:   SESSION['unixTimestampPageLoad'] = window.performance.timing.navigationStart\n   24  \n   25    console.log('SESSION', SESSION)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   16    SESSION['agentId'] = await LocalStorageIO.load_string('agentId') // todo: fix\n   17  \n   18:   SESSION['unixTimestampPageLoad'] = window.performance.timing.navigationStart\n   19  \n   20  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/task_specification.json:\n   99      \"agentID\":\"text\",\n  100      \"species\":\"text\",\n  101:     \"unixTimestampPageLoad\":\"\",\n  102      \"workerId\":\"\",\n  103      \"hitId\":\"\",\n\n10 matches across 7 files\n\n\nSearching 52 files for \"window.performance.timing.navigationStart\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_CheckPointer.js:\n  113  \n  114  async save_checkpoint(){\n  115:     this.checkpoint['lastSaveUnixTimestamp'] = (window.performance.timing.navigationStart + performance.now())/1000\n  116      var checkpointString = JSON.stringify(this.checkpoint, null, 2)\n  117  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n  401          this.deviceLog.navigator_vendor = navigator.vendor\n  402          this.deviceLog.navigator_language = navigator.language\n  403:         this.deviceLog.unixTimestampPageLoad = window.performance.timing.navigationStart\n  404          this.deviceLog.currentDate = new Date;\n  405          this.deviceLog.url = window.location.href\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_MechanicalTurk_session.js:\n   21    SESSION['landingPageURL'] = landingPageURL\n   22    SESSION['agentId']  = SESSION['workerId']\n   23:   SESSION['unixTimestampPageLoad'] = window.performance.timing.navigationStart\n   24  \n   25    console.log('SESSION', SESSION)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   16    SESSION['agentId'] = await LocalStorageIO.load_string('agentId') // todo: fix\n   17  \n   18:   SESSION['unixTimestampPageLoad'] = window.performance.timing.navigationStart\n   19  \n   20  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/landing_page_template.html:\n   27    catch(error){\n   28      console.log(error)\n   29:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n   30    }\n   31  \n   ..\n   58    var currentURL = window.location.href \n   59      if(currentURL.indexOf('localhost')!=-1){\n   60:         window.location.href = '/public/mkturk.html?loadtime=' +Math.round(window.performance.timing.navigationStart)\n   61      }\n   62      else{\n   63        try{\n   64          s3_bucket = __S3_INSTALL_BUCKET_GOES_HERE__\n   65:         window.location.href = \"https://s3.amazonaws.com/\"+s3_bucket+\"/public/mkturk.html\" //?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n   66        }\n   67        catch(error){\n   68:         window.location.href = \"https://s3.amazonaws.com/ptapscratch/public/mkturk.html\"//?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n   69        }\n   70          \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/landing_page_template_dynamic.html:\n  164    catch(error){\n  165      console.log(error)\n  166:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  167    }\n  168  \n  ...\n  232    var currentURL = window.location.href \n  233      if(currentURL.indexOf('localhost')!=-1){\n  234:         window.location.href = '/public/mkturk.html?loadtime=' +Math.round(window.performance.timing.navigationStart)\n  235      }\n  236      else{\n  237        try{\n  238          s3_bucket = __S3_INSTALL_BUCKET_GOES_HERE__\n  239:         window.location.href = \"https://s3.amazonaws.com/\"+s3_bucket+\"/public/mkturk.html\" //?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  240        }\n  241        catch(error){\n  242:         window.location.href = \"https://s3.amazonaws.com/ptapscratch/public/mkturk.html\"//?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  243        }\n  244          \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabMTS.html:\n  109    catch(error){\n  110      console.log(error)\n  111:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  112    }\n  113  \n  ...\n  140    var currentURL = window.location.href \n  141      if(currentURL.indexOf('localhost')!=-1){\n  142:         window.location.href = '/public/mkturk.html?loadtime=' +Math.round(window.performance.timing.navigationStart)\n  143      }\n  144      else{\n  145        try{\n  146          s3_bucket = __S3_INSTALL_BUCKET_GOES_HERE__\n  147:         window.location.href = \"https://s3.amazonaws.com/\"+s3_bucket+\"/public/mkturk.html\" //?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  148        }\n  149        catch(error){\n  150:         window.location.href = \"https://s3.amazonaws.com/ptapscratch/public/mkturk.html\"//?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  151        }\n  152          \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabSR.html:\n   27    catch(error){\n   28      console.log(error)\n   29:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n   30    }\n   31  \n   ..\n   58    var currentURL = window.location.href \n   59      if(currentURL.indexOf('localhost')!=-1){\n   60:         window.location.href = '/public/mkturk.html?loadtime=' +Math.round(window.performance.timing.navigationStart)\n   61      }\n   62      else{\n   63        try{\n   64          s3_bucket = __S3_INSTALL_BUCKET_GOES_HERE__\n   65:         window.location.href = \"https://s3.amazonaws.com/\"+s3_bucket+\"/public/mkturk.html\" //?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n   66        }\n   67        catch(error){\n   68:         window.location.href = \"https://s3.amazonaws.com/ptapscratch/public/mkturk.html\"//?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n   69        }\n   70          \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabSR_blackdiamond.html:\n  178    catch(error){\n  179      console.log(error)\n  180:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  181    }\n  182  \n  ...\n  209    var currentURL = window.location.href \n  210      if(currentURL.indexOf('localhost')!=-1){\n  211:         window.location.href = '/public/mkturk.html?loadtime=' +Math.round(window.performance.timing.navigationStart)\n  212      }\n  213      else{\n  214        try{\n  215          s3_bucket = __S3_INSTALL_BUCKET_GOES_HERE__\n  216:         window.location.href = \"https://s3.amazonaws.com/\"+s3_bucket+\"/public/mkturk.html\" //?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  217        }\n  218        catch(error){\n  219:         window.location.href = \"https://s3.amazonaws.com/ptapscratch/public/mkturk.html\"//?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  220        }\n  221          \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurk_MTS_choicespace.html:\n  133    catch(error){\n  134      console.log(error)\n  135:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  136    }\n  137  \n  ...\n  164    var currentURL = window.location.href \n  165      if(currentURL.indexOf('localhost')!=-1){\n  166:         window.location.href = '/public/mkturk.html?loadtime=' +Math.round(window.performance.timing.navigationStart)\n  167      }\n  168      else{\n  169        try{\n  170          s3_bucket = __S3_INSTALL_BUCKET_GOES_HERE__\n  171:         window.location.href = \"https://s3.amazonaws.com/\"+s3_bucket+\"/public/mkturk.html\" //?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  172        }\n  173        catch(error){\n  174:         window.location.href = \"https://s3.amazonaws.com/ptapscratch/public/mkturk.html\"//?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  175        }\n  176          \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS.html:\n  132    catch(error){\n  133      console.log(error)\n  134:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  135    }\n  136  \n  ...\n  163    var currentURL = window.location.href \n  164      if(currentURL.indexOf('localhost')!=-1){\n  165:         window.location.href = '/public/mkturk.html?loadtime=' +Math.round(window.performance.timing.navigationStart)\n  166      }\n  167      else{\n  168        try{\n  169          s3_bucket = __S3_INSTALL_BUCKET_GOES_HERE__\n  170:         window.location.href = \"https://s3.amazonaws.com/\"+s3_bucket+\"/public/mkturk.html\" //?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  171        }\n  172        catch(error){\n  173:         window.location.href = \"https://s3.amazonaws.com/ptapscratch/public/mkturk.html\"//?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  174        }\n  175          \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS_to_SR.html:\n  190    catch(error){\n  191      console.log(error)\n  192:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  193    }\n  194  \n  ...\n  221    var currentURL = window.location.href \n  222      if(currentURL.indexOf('localhost')!=-1){\n  223:         window.location.href = '/public/mkturk.html?loadtime=' +Math.round(window.performance.timing.navigationStart)\n  224      }\n  225      else{\n  226        try{\n  227          s3_bucket = __S3_INSTALL_BUCKET_GOES_HERE__\n  228:         window.location.href = \"https://s3.amazonaws.com/\"+s3_bucket+\"/public/mkturk.html\" //?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  229        }\n  230        catch(error){\n  231:         window.location.href = \"https://s3.amazonaws.com/ptapscratch/public/mkturk.html\"//?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  232        }\n  233          \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkSR.html:\n  137    catch(error){\n  138      console.log(error)\n  139:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  140    }\n  141  \n  ...\n  168    var currentURL = window.location.href \n  169      if(currentURL.indexOf('localhost')!=-1){\n  170:         window.location.href = '/public/mkturk.html?loadtime=' +Math.round(window.performance.timing.navigationStart)\n  171      }\n  172      else{\n  173        try{\n  174          s3_bucket = __S3_INSTALL_BUCKET_GOES_HERE__\n  175:         window.location.href = \"https://s3.amazonaws.com/\"+s3_bucket+\"/public/mkturk.html\" //?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  176        }\n  177        catch(error){\n  178:         window.location.href = \"https://s3.amazonaws.com/ptapscratch/public/mkturk.html\"//?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  179        }\n  180          \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkSR_blackdiamond.html:\n  177    catch(error){\n  178      console.log(error)\n  179:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  180    }\n  181  \n  ...\n  208    var currentURL = window.location.href \n  209      if(currentURL.indexOf('localhost')!=-1){\n  210:         window.location.href = '/public/mkturk.html?loadtime=' +Math.round(window.performance.timing.navigationStart)\n  211      }\n  212      else{\n  213        try{\n  214          s3_bucket = __S3_INSTALL_BUCKET_GOES_HERE__\n  215:         window.location.href = \"https://s3.amazonaws.com/\"+s3_bucket+\"/public/mkturk.html\" //?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  216        }\n  217        catch(error){\n  218:         window.location.href = \"https://s3.amazonaws.com/ptapscratch/public/mkturk.html\"//?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  219        }\n  220          \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1539547754_0.html:\n  364    catch(error){\n  365      console.log(error)\n  366:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  367    }\n  368  \n  ...\n  427    var currentURL = window.location.href \n  428      if(currentURL.indexOf('localhost')!=-1){\n  429:         window.location.href = '/public/mkturk.html?loadtime=' +Math.round(window.performance.timing.navigationStart)\n  430      }\n  431      else{\n  432        try{\n  433          s3_bucket = \"ptapmechanicalturk\"\n  434:         window.location.href = \"https://s3.amazonaws.com/\"+s3_bucket+\"/public/mkturk.html\" //?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  435        }\n  436        catch(error){\n  437:         window.location.href = \"https://s3.amazonaws.com/ptapscratch/public/mkturk.html\"//?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  438        }\n  439          \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1539549946_0.html:\n  363    catch(error){\n  364      console.log(error)\n  365:     agentId = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n  366    }\n  367  \n  ...\n  431    var currentURL = window.location.href \n  432      if(currentURL.indexOf('localhost')!=-1){\n  433:         window.location.href = '/public/mkturk.html?loadtime=' +Math.round(window.performance.timing.navigationStart)\n  434      }\n  435      else{\n  436        try{\n  437          s3_bucket = \"ptapmechanicalturk\"\n  438:         window.location.href = \"https://s3.amazonaws.com/\"+s3_bucket+\"/public/mkturk.html\" //?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  439        }\n  440        catch(error){\n  441:         window.location.href = \"https://s3.amazonaws.com/ptapscratch/public/mkturk.html\"//?loadtime=\"+Math.round(window.performance.timing.navigationStart)\n  442        }\n  443          \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/Michaelo_landing_page.html:\n   26    catch(error){\n   27      console.log(error)\n   28:     agentID = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n   29      agentID = 'unknown_agent_ip_'\n   30      agentID+=await get_ip_address()\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/Zico_landing_page.html:\n   26    catch(error){\n   27      console.log(error)\n   28:     agentID = 'unknown_agent_'+Math.round(window.performance.timing.navigationStart)\n   29      agentID = 'unknown_agent_ip_'\n   30      agentID+=await get_ip_address()\n\n54 matches across 18 files\n\n\nSearching 52 files for \"blankcanvas\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ScreenDisplayer.js:\n   86              var delayCanvas = this.getSequenceCanvas('stimulus_sequence', 1)\n   87              await this.renderBlank(delayCanvas) // todo: only do this on window resize\n   88:             delayCanvas = await this.renderBlank(blankCanvas)\n   89              frame_canvases.push(delayCanvas)\n   90              frame_durations.push(sampleOff)\n\n1 match in 1 file\n\n\nSearching 52 files for \"renderBlank\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n  492          \n  493          var stimulusCanvas = this.ScreenDisplayer.getSequenceCanvas('tutorial_sequence', 0)\n  494:         await this.ScreenDisplayer.renderBlank(stimulusCanvas)\n  495          await this.ScreenDisplayer.drawImagesOnCanvas(tutorial_image, stimulusXCentroidPixels, stimulusYCentroidPixels, stimulusDiameterPixels, stimulusCanvas)\n  496  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ScreenDisplayer.js:\n   30      async build(){\n   31  \n   32:         await this.renderBlank(this.canvas_blank)\n   33          await this.renderReward(this.canvas_reward)\n   34          await this.renderPunish(this.canvas_punish) \n   ..\n   77          // Draw sample screen\n   78          var sampleCanvas = this.getSequenceCanvas('stimulus_sequence', 0)\n   79:         await this.renderBlank(sampleCanvas) // todo: only do this on window resize\n   80          await this.drawImagesOnCanvas(sampleImage, sampleXCentroid, sampleYCentroid, sampleDiameterPixels, sampleCanvas)\n   81          frame_canvases.push(sampleCanvas)\n   ..\n   85          if(sampleOff > 0){\n   86              var delayCanvas = this.getSequenceCanvas('stimulus_sequence', 1)\n   87:             await this.renderBlank(delayCanvas) // todo: only do this on window resize\n   88:             delayCanvas = await this.renderBlank(blankCanvas)\n   89              frame_canvases.push(delayCanvas)\n   90              frame_durations.push(sampleOff)\n   ..\n   93          // Draw test screen\n   94          var testCanvas = this.getSequenceCanvas('stimulus_sequence', frame_canvases.length)\n   95:         await this.renderBlank(testCanvas) // todo: only do this on window resize\n   96          await this.drawImagesOnCanvas(choiceImage, choiceXCentroid, choiceYCentroid, choiceDiameterPixels, testCanvas)\n   97          frame_canvases.push(testCanvas)\n   ..\n  138          }\n  139          if(image == 'blank'){\n  140:             await this.renderBlank(canvasobj)\n  141              return\n  142          }\n  ...\n  185      }\n  186  \n  187:     await this.renderBlank(this.canvas_fixation)\n  188  \n  189      // Draw touch initiation dot\n  ...\n  237  \n  238  \n  239: renderBlank(canvasobj){\n  240      if (canvasobj.constructor != Array){\n  241          canvasobj = [canvasobj]\n\n9 matches across 2 files\n\n\nSearching 52 files for \"blankCanvas\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ScreenDisplayer.js:\n   86              var delayCanvas = this.getSequenceCanvas('stimulus_sequence', 1)\n   87              await this.renderBlank(delayCanvas) // todo: only do this on window resize\n   88:             delayCanvas = await this.renderBlank(blankCanvas)\n   89              frame_canvases.push(delayCanvas)\n   90              frame_durations.push(sampleOff)\n\n1 match in 1 file\n",
			"settings":
			{
				"buffer_size": 240128,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "public/mkturk_ScreenDisplayer.js",
			"settings":
			{
				"buffer_size": 17435,
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/landing_pages/inlab/Zico_landing_page.html",
			"settings":
			{
				"buffer_size": 2999,
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_ActionPoller.js",
			"settings":
			{
				"buffer_size": 9919,
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_bluetooth.js",
			"settings":
			{
				"buffer_size": 10830,
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_SessionBootStrapper.js",
			"settings":
			{
				"buffer_size": 7799,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_utils.js",
			"settings":
			{
				"buffer_size": 10766,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_TaskStreamer.js",
			"settings":
			{
				"buffer_size": 7302,
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/landing_pages/landing_page_template_dynamic.html",
			"settings":
			{
				"buffer_size": 7191,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_TrialGenerator.js",
			"settings":
			{
				"buffer_size": 12772,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_Playspace.js",
			"settings":
			{
				"buffer_size": 21518,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/landing_pages/examples/landingPage_MechanicalTurk_MTS_choicespace.html",
			"settings":
			{
				"buffer_size": 8869,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/setup_upstairs_session.js",
			"settings":
			{
				"buffer_size": 3216,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_style.css",
			"settings":
			{
				"buffer_size": 6440,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/setup_MechanicalTurk_session.js",
			"settings":
			{
				"buffer_size": 3871,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: c",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 428.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/michaellee/Dropbox (MIT)/ptap/public",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab"
	],
	"file_history":
	[
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TrialGenerator.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabSR.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_BiasDetection.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/unit_tests.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ActionPoller.js",
		"/Users/michaellee/.ipython/profile_default/startup/mil_standard_imports.ipy",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/Zico_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/Michaelo_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_window.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/InlabMTS_fromurl.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/Inlab_SR_bootstrap_from_dropbox.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TaskStreamer.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/InlabMTS.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/inlabSR.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/MechanicalTurk_MTS.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/template_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/behaviorParsers/unpack_data.py",
		"/Users/michaellee/Dropbox (MIT)/ptap/landing_pages/examples/MechanicalTurk_MTS.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/landing_pages/template_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/landing_pages/examples/Inlab_SR_bootstrap_from_dropbox.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/landing_pages/examples/Inlab_MTS.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_page_utils.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/landing_page_templates/landing_page_template_mechanicalturker.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/Zico_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/landing_page_templates/landing_page_utils.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/Turkboy_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/Michaelo_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/Turker_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_amazon_utils.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_verify_inputs.js",
		"/Users/michaellee/Dropbox (MIT)/MonkeyTurk_upstairs/GameResources/Games/6_Mutator.json",
		"/Users/michaellee/Dropbox (MIT)/MonkeyTurk_upstairs/GameResources/Game/6_MutatorSRTraining.json",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_input_schema.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_scratch.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_tutorial.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_eventlisteners.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_game.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/setup_MechanicalTurk_game.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/setup_MechanicalTurk_task.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_task.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Artist.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_AssetFetcher.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_canvas_business.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_artist.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_globalvariables.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_CheckPointer.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/manual_setup.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_reinforcement.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_data_writer.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_runtrial.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_rewardmap.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_setup.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/liveplot.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/liveplot_utils.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/liveplot_plotter.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/liveplot_globals.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/liveplot_eventlisteners.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ScreenDisplayer.js",
		"/Users/michaellee/Dropbox (MIT)/MIT_Projects/Transfer_MTS_SR/dataformat/SRbehavior.json",
		"/Users/michaellee/Dropbox (MIT)/ptap/docs/taskdefinition_format.json",
		"/Users/michaellee/Dropbox (MIT)/MIT_Projects/Transfer_MTS_SR/dataformat/MTSbehavior.json",
		"/Users/michaellee/Dropbox (MIT)/MIT_Projects/Transfer_MTS_SR/dataformat/SRmetrics.json",
		"/Users/michaellee/Dropbox (MIT)/MIT_Projects/Transfer_MTS_SR/dataformat/MTShistory_format.json",
		"/Users/michaellee/Dropbox (MIT)/ptap/upload_ptap_to_upstairs.py",
		"/Users/michaellee/Dropbox (MIT)/ptap/upload_landingpages_to_upstairs.py",
		"/Users/michaellee/Dropbox (MIT)/ptap/example/Michaelo_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/MIT_Projects/FewShot/fewshot_behavioraldataformat.json",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/setup_Ratan_task.js",
		"/Users/michaellee/Dropbox (MIT)/ModelTurk/README.md",
		"/Users/michaellee/Dropbox (MIT)/ModelTurk/Generator/Generator.py",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/hellodropbox.html",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/MechanicalTurk_ExperimentDefinitions/misc_resources/Zico_learned_object_pool.json",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/MechanicalTurk_ExperimentDefinitions/misc_resources/Zico_novel_and_unrelated_object_pool.json",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/MechanicalTurk_ExperimentDefinitions/misc_resources/Zico_novel_object_pool.json",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/liveplot.html",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/StartTurkMonitor.py",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/sandbox_publish.py",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/write_landing_html.py",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/upload_mkturk_to_sandbox.py",
		"/Users/michaellee/Dropbox (MIT)/DiCarloLab/ccn_notes_2017",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/seedrandom.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/deprecated/_deprecated_snippets.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/TabletTask_utils.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/monkeyturk_setup.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/mkturk.html",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/liveplot_v2.html",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/_deprecated_snippets.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/mkturk_screenfunctions.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/mkturk_dropbox.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/experiment_flow.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/mkturk_automator.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/liveplot_utils.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/liveplot_googlecharts.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/mkturkmanifest.json",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/readme.md",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/liveplot.html",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/liveplot_utils.js",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/liveplot_googlecharts.js",
		"/Users/michaellee/Dropbox (MIT)/Apps/MonkeyTurk_mil_app/Subjects/SubjectCheckpoints/Michaelo_checkpoint.txt",
		"/Users/michaellee/Dropbox (MIT)/Apps/MonkeyTurk_mil_app/Subjects/SubjectCheckpoints/Checkpoint_Michaelo.ckpt",
		"/Users/michaellee/Dropbox (MIT)/Apps/MonkeyTurk_mil_app/Tasks/SubjectSettings/Michaelo_settings.txt",
		"/Users/michaellee/Dropbox (MIT)/Apps/MonkeyTurk_mil_app/Tasks/SubjectParameters/Zico_params.txt",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_dropbox.js",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_hardware.js",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_utils.js",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_TrialQueue.js",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_installsettings.js",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_eventlisteners.js",
		"/Users/michaellee/Dropbox (MIT)/Apps/MonkeyTurk_mil_app/test.txt",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_automator.js",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_bluetooth.js",
		"/Users/michaellee/Dropbox (MIT)/MonkeyTurk/parameterfiles/subjects/Zico_params.txt",
		"/Users/michaellee/Dropbox (MIT)/PrimatePsychophysics/BehavioralComparisons.py",
		"/Users/michaellee/Dropbox (MIT)/PrimatePsychophysics/Analyses/BehavioralComparisons.py",
		"/Users/michaellee/Dropbox (MIT)/PrimatePsychophysics/.git_ignore",
		"/Users/michaellee/Dropbox (MIT)/ModelTurk/SupervisedModels/SupervisedModel.py",
		"/Users/michaellee/Dropbox (MIT)/ModelTurk/Wedjat/PolicyGradContinuous.py",
		"/Users/michaellee/Dropbox (MIT)/ModelTurk/Wedjat/QLearningGaussianContinuous.pyc",
		"/Volumes/mil/ModelTurk/SupervisedModels/OmniglotVinyals.py",
		"/Users/michaellee/Dropbox (MIT)/ModelTurk/SupervisedModels/VinyalsBaselineClassifier.py",
		"/Volumes/mil/ModelTurk/Science/FewShotSupervised/RunBaselineClassifier.py",
		"/Volumes/mil/ModelTurk/SupervisedModels/VinyalsBaselineClassifier.py",
		"/Users/michaellee/Dropbox (MIT)/MutantBakery/.gitignore",
		"/Users/michaellee/Dropbox (MIT)/ModelTurk/SupervisedModels/test_tensorboard.py",
		"/Users/michaellee/Dropbox (MIT)/ModelTurk/TaskStreams/Generator.py",
		"/Users/michaellee/Dropbox (MIT)/ModelTurk/Wedjat/NwayModels_TF.py"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"blankCanvas",
			"renderBlank",
			"blankcanvas",
			"window.performance.timing.navigationStart",
			"unix",
			"load",
			"onpageload",
			"recordTouchEvent",
			"add_event_listener",
			"timestamp",
			"Promise_wait_until_active_response",
			"fixationOutcome",
			"timestampStart",
			"shuffle",
			"replace",
			"setupSession",
			"writepump",
			"crypto",
			"localStorage",
			"LocalStorageIO",
			"agentID",
			"download_from_string",
			"load_localstorage_string",
			"sessionPackageBootstrapString",
			"could not infer",
			"btoa",
			" ee ",
			"ee ",
			"ee",
			"ée",
			"class np",
			"bagSamplingWeights",
			"get_bag_from_idx",
			"bagSamplingWeights",
			"get_trial",
			"canvas_punish",
			"displaypunish",
			"rewardMap",
			"tasktype",
			"correctIdx",
			"class np",
			"class",
			"np { ",
			"np{ ",
			"np ",
			"np",
			"choicemap",
			"draw",
			"TaskStreamer",
			"setup_upstairs",
			".buffer_trial",
			"overflow",
			"select which",
			"flex",
			"MechanicalTurkInstructionsSplash"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "public/mkturk.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10637,
						"regions":
						{
						},
						"selection":
						[
							[
								8988,
								8988
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 0,
								"count": 261,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 240128,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										154,
										186
									],
									[
										308,
										340
									],
									[
										553,
										585
									],
									[
										814,
										846
									],
									[
										1352,
										1365
									],
									[
										1529,
										1542
									],
									[
										1694,
										1707
									],
									[
										1866,
										1879
									],
									[
										2065,
										2078
									],
									[
										2344,
										2357
									],
									[
										2617,
										2631
									],
									[
										2896,
										2910
									],
									[
										3156,
										3170
									],
									[
										3556,
										3568
									],
									[
										3910,
										3922
									],
									[
										3934,
										3946
									],
									[
										4239,
										4251
									],
									[
										4511,
										4523
									],
									[
										4638,
										4650
									],
									[
										4711,
										4723
									],
									[
										4813,
										4825
									],
									[
										5225,
										5237
									],
									[
										5320,
										5332
									],
									[
										5393,
										5405
									],
									[
										5475,
										5487
									],
									[
										5563,
										5575
									],
									[
										5639,
										5651
									],
									[
										5717,
										5729
									],
									[
										5785,
										5797
									],
									[
										5835,
										5847
									],
									[
										5885,
										5897
									],
									[
										5935,
										5947
									],
									[
										6005,
										6017
									],
									[
										6095,
										6107
									],
									[
										6293,
										6305
									],
									[
										6495,
										6507
									],
									[
										6772,
										6784
									],
									[
										7122,
										7134
									],
									[
										7262,
										7274
									],
									[
										7519,
										7531
									],
									[
										7538,
										7550
									],
									[
										7603,
										7615
									],
									[
										7788,
										7800
									],
									[
										7943,
										7955
									],
									[
										7960,
										7972
									],
									[
										8221,
										8233
									],
									[
										8240,
										8252
									],
									[
										8314,
										8326
									],
									[
										8348,
										8360
									],
									[
										8567,
										8579
									],
									[
										8584,
										8596
									],
									[
										8902,
										8914
									],
									[
										8994,
										9006
									],
									[
										9144,
										9156
									],
									[
										9478,
										9482
									],
									[
										9865,
										9869
									],
									[
										9900,
										9904
									],
									[
										10182,
										10186
									],
									[
										10570,
										10574
									],
									[
										10788,
										10792
									],
									[
										11005,
										11009
									],
									[
										11239,
										11243
									],
									[
										11430,
										11434
									],
									[
										11661,
										11665
									],
									[
										11891,
										11895
									],
									[
										12118,
										12122
									],
									[
										12259,
										12263
									],
									[
										12453,
										12457
									],
									[
										12630,
										12634
									],
									[
										12827,
										12831
									],
									[
										13034,
										13038
									],
									[
										13086,
										13090
									],
									[
										13204,
										13208
									],
									[
										13256,
										13260
									],
									[
										13438,
										13442
									],
									[
										13496,
										13500
									],
									[
										13507,
										13511
									],
									[
										13802,
										13806
									],
									[
										13833,
										13837
									],
									[
										14018,
										14022
									],
									[
										14066,
										14070
									],
									[
										14242,
										14246
									],
									[
										14301,
										14305
									],
									[
										14358,
										14362
									],
									[
										14772,
										14776
									],
									[
										14802,
										14806
									],
									[
										14853,
										14857
									],
									[
										15061,
										15065
									],
									[
										15234,
										15238
									],
									[
										15529,
										15533
									],
									[
										15717,
										15721
									],
									[
										15926,
										15930
									],
									[
										16103,
										16107
									],
									[
										16468,
										16472
									],
									[
										16495,
										16499
									],
									[
										16758,
										16762
									],
									[
										17150,
										17154
									],
									[
										17493,
										17497
									],
									[
										17751,
										17755
									],
									[
										18085,
										18089
									],
									[
										18409,
										18413
									],
									[
										18629,
										18633
									],
									[
										18946,
										18950
									],
									[
										19298,
										19302
									],
									[
										19556,
										19560
									],
									[
										19865,
										19869
									],
									[
										20142,
										20146
									],
									[
										20531,
										20540
									],
									[
										20828,
										20837
									],
									[
										21091,
										21100
									],
									[
										21300,
										21309
									],
									[
										21488,
										21497
									],
									[
										21720,
										21729
									],
									[
										22089,
										22098
									],
									[
										22328,
										22337
									],
									[
										22710,
										22719
									],
									[
										23072,
										23081
									],
									[
										23403,
										23412
									],
									[
										23728,
										23737
									],
									[
										24166,
										24168
									],
									[
										24248,
										24250
									],
									[
										24324,
										24326
									],
									[
										24431,
										24433
									],
									[
										24615,
										24617
									],
									[
										24786,
										24788
									],
									[
										25046,
										25048
									],
									[
										25237,
										25239
									],
									[
										25473,
										25475
									],
									[
										25880,
										25882
									],
									[
										26149,
										26151
									],
									[
										26291,
										26293
									],
									[
										26346,
										26348
									],
									[
										26375,
										26377
									],
									[
										26435,
										26437
									],
									[
										26478,
										26480
									],
									[
										26514,
										26516
									],
									[
										26531,
										26533
									],
									[
										26630,
										26632
									],
									[
										26758,
										26760
									],
									[
										26799,
										26801
									],
									[
										26916,
										26918
									],
									[
										27064,
										27066
									],
									[
										27320,
										27322
									],
									[
										27403,
										27405
									],
									[
										27495,
										27497
									],
									[
										27794,
										27796
									],
									[
										28061,
										28063
									],
									[
										28285,
										28287
									],
									[
										28545,
										28547
									],
									[
										28810,
										28812
									],
									[
										28944,
										28946
									],
									[
										28966,
										28968
									],
									[
										28978,
										28980
									],
									[
										29039,
										29041
									],
									[
										29051,
										29053
									],
									[
										29178,
										29180
									],
									[
										29324,
										29326
									],
									[
										29475,
										29477
									],
									[
										29610,
										29612
									],
									[
										29678,
										29680
									],
									[
										29747,
										29749
									],
									[
										29805,
										29807
									],
									[
										29824,
										29826
									],
									[
										29886,
										29888
									],
									[
										29899,
										29901
									],
									[
										29912,
										29914
									],
									[
										29925,
										29927
									],
									[
										30071,
										30073
									],
									[
										30302,
										30304
									],
									[
										30560,
										30562
									],
									[
										30765,
										30767
									],
									[
										31061,
										31063
									],
									[
										31323,
										31325
									],
									[
										31436,
										31438
									],
									[
										31696,
										31698
									],
									[
										31869,
										31871
									],
									[
										32055,
										32057
									],
									[
										32074,
										32076
									],
									[
										32372,
										32374
									],
									[
										32617,
										32619
									],
									[
										32882,
										32884
									],
									[
										33111,
										33113
									],
									[
										33330,
										33332
									],
									[
										33405,
										33407
									],
									[
										33501,
										33503
									],
									[
										33623,
										33625
									],
									[
										33644,
										33646
									],
									[
										33801,
										33803
									],
									[
										33989,
										33991
									],
									[
										34103,
										34105
									],
									[
										34237,
										34239
									],
									[
										34409,
										34411
									],
									[
										34527,
										34529
									],
									[
										34721,
										34723
									],
									[
										34881,
										34883
									],
									[
										35105,
										35107
									],
									[
										35314,
										35316
									],
									[
										35517,
										35519
									],
									[
										35891,
										35893
									],
									[
										36063,
										36065
									],
									[
										36330,
										36332
									],
									[
										36655,
										36657
									],
									[
										36705,
										36707
									],
									[
										36817,
										36819
									],
									[
										36900,
										36902
									],
									[
										37034,
										37036
									],
									[
										37097,
										37099
									],
									[
										37205,
										37207
									],
									[
										37217,
										37219
									],
									[
										37316,
										37318
									],
									[
										37365,
										37367
									],
									[
										37417,
										37419
									],
									[
										37469,
										37471
									],
									[
										37541,
										37543
									],
									[
										37566,
										37568
									],
									[
										37619,
										37621
									],
									[
										37670,
										37672
									],
									[
										37741,
										37743
									],
									[
										37765,
										37767
									],
									[
										37839,
										37841
									],
									[
										37901,
										37903
									],
									[
										37996,
										37998
									],
									[
										38042,
										38044
									],
									[
										38184,
										38186
									],
									[
										38225,
										38227
									],
									[
										38264,
										38266
									],
									[
										38322,
										38324
									],
									[
										38356,
										38358
									],
									[
										38404,
										38406
									],
									[
										38447,
										38449
									],
									[
										38528,
										38530
									],
									[
										38579,
										38581
									],
									[
										38814,
										38816
									],
									[
										38884,
										38886
									],
									[
										38982,
										38984
									],
									[
										39285,
										39287
									],
									[
										39405,
										39407
									],
									[
										39605,
										39607
									],
									[
										39848,
										39850
									],
									[
										39892,
										39894
									],
									[
										39915,
										39917
									],
									[
										40013,
										40015
									],
									[
										40133,
										40135
									],
									[
										40164,
										40166
									],
									[
										40284,
										40286
									],
									[
										40341,
										40343
									],
									[
										40460,
										40462
									],
									[
										40615,
										40617
									],
									[
										40978,
										40980
									],
									[
										41253,
										41255
									],
									[
										41607,
										41609
									],
									[
										41904,
										41906
									],
									[
										42142,
										42144
									],
									[
										42343,
										42345
									],
									[
										42652,
										42654
									],
									[
										42718,
										42720
									],
									[
										42892,
										42894
									],
									[
										43029,
										43031
									],
									[
										43253,
										43255
									],
									[
										43574,
										43576
									],
									[
										43893,
										43895
									],
									[
										43951,
										43953
									],
									[
										44016,
										44018
									],
									[
										44169,
										44171
									],
									[
										44462,
										44464
									],
									[
										44631,
										44633
									],
									[
										44865,
										44867
									],
									[
										45128,
										45130
									],
									[
										45349,
										45351
									],
									[
										45511,
										45513
									],
									[
										45593,
										45595
									],
									[
										45689,
										45691
									],
									[
										45820,
										45822
									],
									[
										45991,
										45993
									],
									[
										46099,
										46101
									],
									[
										46221,
										46223
									],
									[
										46352,
										46354
									],
									[
										46434,
										46436
									],
									[
										46603,
										46605
									],
									[
										46717,
										46719
									],
									[
										46912,
										46914
									],
									[
										47082,
										47084
									],
									[
										47389,
										47391
									],
									[
										47578,
										47580
									],
									[
										47688,
										47690
									],
									[
										47980,
										47982
									],
									[
										48030,
										48032
									],
									[
										48231,
										48233
									],
									[
										48302,
										48304
									],
									[
										48482,
										48484
									],
									[
										48680,
										48682
									],
									[
										48729,
										48731
									],
									[
										48932,
										48934
									],
									[
										49001,
										49003
									],
									[
										49252,
										49254
									],
									[
										49387,
										49389
									],
									[
										49603,
										49605
									],
									[
										49627,
										49629
									],
									[
										49693,
										49695
									],
									[
										49929,
										49931
									],
									[
										49953,
										49955
									],
									[
										49994,
										49996
									],
									[
										50059,
										50061
									],
									[
										50129,
										50131
									],
									[
										50212,
										50214
									],
									[
										50236,
										50238
									],
									[
										50299,
										50301
									],
									[
										50493,
										50495
									],
									[
										50517,
										50519
									],
									[
										50580,
										50582
									],
									[
										50780,
										50782
									],
									[
										50804,
										50806
									],
									[
										50845,
										50847
									],
									[
										50882,
										50884
									],
									[
										50890,
										50892
									],
									[
										50955,
										50957
									],
									[
										51026,
										51028
									],
									[
										51228,
										51230
									],
									[
										51506,
										51508
									],
									[
										51657,
										51659
									],
									[
										51939,
										51941
									],
									[
										52311,
										52313
									],
									[
										52523,
										52525
									],
									[
										52677,
										52679
									],
									[
										52889,
										52891
									],
									[
										53108,
										53110
									],
									[
										53215,
										53217
									],
									[
										53402,
										53404
									],
									[
										53564,
										53566
									],
									[
										53755,
										53757
									],
									[
										54254,
										54259
									],
									[
										54439,
										54444
									],
									[
										54610,
										54615
									],
									[
										54869,
										54874
									],
									[
										55061,
										55066
									],
									[
										55303,
										55308
									],
									[
										55321,
										55326
									],
									[
										55552,
										55557
									],
									[
										55909,
										55914
									],
									[
										56148,
										56153
									],
									[
										56166,
										56171
									],
									[
										56286,
										56291
									],
									[
										56332,
										56337
									],
									[
										56424,
										56429
									],
									[
										56477,
										56482
									],
									[
										56604,
										56609
									],
									[
										56713,
										56718
									],
									[
										56874,
										56879
									],
									[
										57106,
										57111
									],
									[
										57187,
										57192
									],
									[
										57264,
										57269
									],
									[
										57326,
										57331
									],
									[
										57457,
										57462
									],
									[
										57584,
										57589
									],
									[
										57599,
										57604
									],
									[
										57738,
										57743
									],
									[
										57820,
										57825
									],
									[
										58108,
										58113
									],
									[
										58246,
										58251
									],
									[
										58443,
										58448
									],
									[
										58589,
										58594
									],
									[
										58755,
										58760
									],
									[
										58772,
										58777
									],
									[
										58888,
										58893
									],
									[
										58906,
										58911
									],
									[
										59136,
										59141
									],
									[
										59359,
										59364
									],
									[
										59379,
										59384
									],
									[
										59564,
										59569
									],
									[
										59730,
										59735
									],
									[
										59817,
										59822
									],
									[
										59842,
										59847
									],
									[
										60048,
										60053
									],
									[
										60056,
										60061
									],
									[
										60127,
										60132
									],
									[
										60152,
										60157
									],
									[
										60238,
										60243
									],
									[
										60271,
										60276
									],
									[
										60447,
										60452
									],
									[
										60753,
										60758
									],
									[
										61136,
										61141
									],
									[
										61392,
										61397
									],
									[
										61601,
										61606
									],
									[
										61845,
										61853
									],
									[
										62132,
										62141
									],
									[
										62354,
										62363
									],
									[
										62477,
										62486
									],
									[
										62752,
										62761
									],
									[
										62945,
										62954
									],
									[
										63142,
										63151
									],
									[
										63274,
										63283
									],
									[
										63438,
										63447
									],
									[
										63999,
										64017
									],
									[
										64349,
										64367
									],
									[
										64627,
										64645
									],
									[
										64902,
										64920
									],
									[
										65197,
										65215
									],
									[
										65494,
										65512
									],
									[
										65628,
										65646
									],
									[
										65935,
										65953
									],
									[
										66396,
										66414
									],
									[
										66746,
										66764
									],
									[
										67024,
										67042
									],
									[
										67299,
										67317
									],
									[
										67594,
										67612
									],
									[
										67891,
										67909
									],
									[
										68025,
										68043
									],
									[
										68332,
										68350
									],
									[
										68571,
										68579
									],
									[
										69002,
										69004
									],
									[
										69287,
										69289
									],
									[
										69356,
										69358
									],
									[
										69968,
										69970
									],
									[
										70193,
										70195
									],
									[
										70730,
										70732
									],
									[
										70900,
										70902
									],
									[
										70951,
										70953
									],
									[
										71186,
										71188
									],
									[
										71557,
										71559
									],
									[
										71600,
										71602
									],
									[
										71882,
										71884
									],
									[
										72267,
										72269
									],
									[
										72572,
										72574
									],
									[
										72841,
										72843
									],
									[
										73081,
										73083
									],
									[
										73316,
										73318
									],
									[
										73600,
										73602
									],
									[
										73895,
										73897
									],
									[
										74111,
										74113
									],
									[
										74457,
										74459
									],
									[
										74674,
										74676
									],
									[
										74913,
										74915
									],
									[
										75130,
										75132
									],
									[
										75176,
										75178
									],
									[
										75466,
										75468
									],
									[
										75631,
										75633
									],
									[
										75940,
										75942
									],
									[
										76131,
										76133
									],
									[
										76389,
										76391
									],
									[
										76631,
										76633
									],
									[
										76980,
										76982
									],
									[
										77181,
										77183
									],
									[
										77388,
										77390
									],
									[
										77530,
										77532
									],
									[
										77687,
										77689
									],
									[
										77848,
										77850
									],
									[
										78035,
										78037
									],
									[
										78197,
										78199
									],
									[
										78964,
										78966
									],
									[
										79869,
										79871
									],
									[
										81013,
										81015
									],
									[
										81469,
										81471
									],
									[
										82642,
										82644
									],
									[
										83776,
										83778
									],
									[
										84889,
										84891
									],
									[
										85131,
										85133
									],
									[
										85356,
										85358
									],
									[
										86282,
										86284
									],
									[
										86934,
										86936
									],
									[
										88086,
										88088
									],
									[
										88324,
										88326
									],
									[
										89478,
										89480
									],
									[
										90600,
										90602
									],
									[
										91732,
										91734
									],
									[
										92852,
										92854
									],
									[
										93977,
										93979
									],
									[
										94876,
										94878
									],
									[
										95980,
										95982
									],
									[
										96410,
										96412
									],
									[
										97528,
										97530
									],
									[
										98644,
										98646
									],
									[
										98874,
										98876
									],
									[
										99987,
										99989
									],
									[
										100870,
										100872
									],
									[
										101530,
										101532
									],
									[
										101724,
										101726
									],
									[
										101956,
										101958
									],
									[
										102267,
										102269
									],
									[
										102484,
										102486
									],
									[
										102984,
										102986
									],
									[
										103033,
										103035
									],
									[
										103240,
										103242
									],
									[
										103529,
										103531
									],
									[
										103547,
										103549
									],
									[
										103921,
										103923
									],
									[
										104057,
										104059
									],
									[
										104322,
										104324
									],
									[
										104371,
										104373
									],
									[
										104619,
										104621
									],
									[
										104667,
										104669
									],
									[
										105084,
										105086
									],
									[
										105104,
										105106
									],
									[
										105165,
										105167
									],
									[
										105278,
										105280
									],
									[
										105372,
										105374
									],
									[
										105394,
										105396
									],
									[
										105616,
										105618
									],
									[
										105964,
										105966
									],
									[
										106266,
										106268
									],
									[
										106393,
										106395
									],
									[
										106771,
										106773
									],
									[
										106890,
										106892
									],
									[
										107132,
										107134
									],
									[
										107304,
										107306
									],
									[
										107579,
										107581
									],
									[
										107904,
										107906
									],
									[
										108183,
										108185
									],
									[
										108627,
										108629
									],
									[
										108905,
										108907
									],
									[
										109058,
										109060
									],
									[
										109185,
										109187
									],
									[
										109404,
										109406
									],
									[
										109535,
										109537
									],
									[
										109780,
										109782
									],
									[
										109982,
										109984
									],
									[
										110027,
										110029
									],
									[
										110117,
										110119
									],
									[
										110152,
										110154
									],
									[
										110255,
										110257
									],
									[
										110323,
										110325
									],
									[
										110511,
										110513
									],
									[
										110636,
										110638
									],
									[
										110705,
										110707
									],
									[
										110808,
										110810
									],
									[
										110882,
										110884
									],
									[
										111073,
										111075
									],
									[
										111280,
										111282
									],
									[
										111475,
										111477
									],
									[
										111559,
										111561
									],
									[
										111629,
										111631
									],
									[
										111833,
										111835
									],
									[
										111986,
										111988
									],
									[
										112170,
										112172
									],
									[
										112193,
										112195
									],
									[
										112376,
										112378
									],
									[
										112548,
										112550
									],
									[
										112833,
										112835
									],
									[
										113017,
										113019
									],
									[
										113304,
										113306
									],
									[
										113451,
										113453
									],
									[
										113599,
										113601
									],
									[
										113835,
										113837
									],
									[
										114080,
										114082
									],
									[
										114393,
										114395
									],
									[
										114564,
										114566
									],
									[
										114641,
										114643
									],
									[
										114879,
										114881
									],
									[
										115256,
										115258
									],
									[
										115441,
										115443
									],
									[
										115538,
										115540
									],
									[
										115712,
										115714
									],
									[
										115873,
										115875
									],
									[
										115950,
										115952
									],
									[
										116205,
										116207
									],
									[
										116541,
										116543
									],
									[
										116722,
										116724
									],
									[
										116903,
										116905
									],
									[
										117057,
										117059
									],
									[
										117172,
										117174
									],
									[
										117382,
										117384
									],
									[
										117411,
										117413
									],
									[
										117427,
										117429
									],
									[
										117663,
										117665
									],
									[
										117695,
										117697
									],
									[
										117951,
										117953
									],
									[
										117981,
										117983
									],
									[
										118212,
										118214
									],
									[
										118242,
										118244
									],
									[
										118415,
										118417
									],
									[
										118445,
										118447
									],
									[
										118751,
										118753
									],
									[
										118901,
										118903
									],
									[
										119067,
										119069
									],
									[
										119312,
										119314
									],
									[
										119362,
										119364
									],
									[
										119417,
										119419
									],
									[
										119718,
										119720
									],
									[
										119772,
										119774
									],
									[
										119822,
										119824
									],
									[
										119868,
										119870
									],
									[
										120072,
										120074
									],
									[
										120134,
										120136
									],
									[
										120514,
										120516
									],
									[
										120640,
										120642
									],
									[
										120683,
										120685
									],
									[
										120729,
										120731
									],
									[
										120895,
										120897
									],
									[
										121064,
										121066
									],
									[
										121208,
										121210
									],
									[
										121275,
										121277
									],
									[
										121409,
										121411
									],
									[
										121536,
										121538
									],
									[
										121637,
										121639
									],
									[
										121644,
										121646
									],
									[
										121771,
										121773
									],
									[
										121888,
										121890
									],
									[
										122030,
										122032
									],
									[
										122165,
										122167
									],
									[
										122271,
										122273
									],
									[
										122431,
										122433
									],
									[
										122528,
										122530
									],
									[
										122750,
										122752
									],
									[
										123072,
										123074
									],
									[
										123294,
										123296
									],
									[
										123551,
										123553
									],
									[
										123711,
										123713
									],
									[
										123754,
										123756
									],
									[
										123972,
										123974
									],
									[
										124014,
										124016
									],
									[
										124357,
										124359
									],
									[
										124400,
										124402
									],
									[
										124618,
										124620
									],
									[
										124660,
										124662
									],
									[
										124947,
										124949
									],
									[
										125046,
										125048
									],
									[
										125383,
										125385
									],
									[
										125475,
										125477
									],
									[
										125582,
										125584
									],
									[
										125693,
										125695
									],
									[
										125943,
										125945
									],
									[
										125982,
										125984
									],
									[
										126159,
										126161
									],
									[
										126386,
										126388
									],
									[
										126513,
										126515
									],
									[
										126714,
										126716
									],
									[
										126764,
										126766
									],
									[
										126931,
										126933
									],
									[
										126949,
										126951
									],
									[
										127067,
										127069
									],
									[
										127085,
										127087
									],
									[
										127322,
										127324
									],
									[
										127435,
										127437
									],
									[
										127472,
										127474
									],
									[
										127577,
										127579
									],
									[
										127608,
										127610
									],
									[
										127657,
										127659
									],
									[
										127897,
										127899
									],
									[
										128054,
										128056
									],
									[
										128135,
										128137
									],
									[
										128157,
										128159
									],
									[
										128188,
										128190
									],
									[
										128305,
										128307
									],
									[
										128342,
										128344
									],
									[
										128484,
										128486
									],
									[
										128656,
										128658
									],
									[
										128863,
										128865
									],
									[
										128899,
										128901
									],
									[
										128922,
										128924
									],
									[
										128955,
										128957
									],
									[
										129094,
										129096
									],
									[
										129185,
										129187
									],
									[
										129203,
										129205
									],
									[
										129259,
										129261
									],
									[
										129366,
										129368
									],
									[
										129416,
										129418
									],
									[
										129602,
										129604
									],
									[
										129633,
										129635
									],
									[
										129666,
										129668
									],
									[
										129804,
										129806
									],
									[
										129882,
										129884
									],
									[
										129894,
										129896
									],
									[
										129945,
										129947
									],
									[
										130061,
										130063
									],
									[
										130072,
										130074
									],
									[
										130107,
										130109
									],
									[
										130216,
										130218
									],
									[
										130448,
										130450
									],
									[
										130491,
										130493
									],
									[
										130600,
										130602
									],
									[
										130640,
										130642
									],
									[
										130742,
										130744
									],
									[
										130789,
										130791
									],
									[
										130809,
										130811
									],
									[
										130895,
										130897
									],
									[
										130935,
										130937
									],
									[
										130975,
										130977
									],
									[
										130981,
										130983
									],
									[
										131116,
										131118
									],
									[
										131180,
										131182
									],
									[
										131209,
										131211
									],
									[
										131215,
										131217
									],
									[
										131253,
										131255
									],
									[
										131313,
										131315
									],
									[
										131325,
										131327
									],
									[
										131427,
										131429
									],
									[
										131682,
										131684
									],
									[
										131716,
										131718
									],
									[
										131857,
										131859
									],
									[
										131875,
										131877
									],
									[
										131991,
										131993
									],
									[
										132001,
										132003
									],
									[
										132044,
										132046
									],
									[
										132093,
										132095
									],
									[
										132141,
										132143
									],
									[
										132164,
										132166
									],
									[
										132257,
										132259
									],
									[
										132443,
										132445
									],
									[
										132497,
										132499
									],
									[
										132558,
										132560
									],
									[
										132604,
										132606
									],
									[
										132635,
										132637
									],
									[
										132914,
										132916
									],
									[
										132998,
										133000
									],
									[
										133079,
										133081
									],
									[
										133160,
										133162
									],
									[
										133251,
										133253
									],
									[
										133367,
										133369
									],
									[
										133412,
										133414
									],
									[
										133532,
										133534
									],
									[
										133655,
										133657
									],
									[
										133914,
										133916
									],
									[
										134050,
										134052
									],
									[
										134160,
										134162
									],
									[
										134195,
										134197
									],
									[
										134266,
										134268
									],
									[
										134294,
										134296
									],
									[
										134452,
										134454
									],
									[
										134499,
										134501
									],
									[
										134525,
										134527
									],
									[
										134578,
										134580
									],
									[
										134614,
										134616
									],
									[
										134634,
										134636
									],
									[
										134643,
										134645
									],
									[
										134687,
										134689
									],
									[
										134893,
										134895
									],
									[
										135005,
										135007
									],
									[
										135075,
										135077
									],
									[
										135231,
										135233
									],
									[
										135317,
										135319
									],
									[
										135516,
										135518
									],
									[
										135755,
										135757
									],
									[
										136029,
										136031
									],
									[
										136288,
										136290
									],
									[
										136440,
										136442
									],
									[
										136581,
										136583
									],
									[
										136668,
										136670
									],
									[
										136744,
										136746
									],
									[
										136776,
										136778
									],
									[
										136783,
										136785
									],
									[
										136834,
										136836
									],
									[
										136935,
										136937
									],
									[
										137038,
										137040
									],
									[
										137081,
										137083
									],
									[
										137176,
										137178
									],
									[
										137204,
										137206
									],
									[
										137209,
										137211
									],
									[
										137348,
										137350
									],
									[
										137406,
										137408
									],
									[
										137475,
										137477
									],
									[
										137503,
										137505
									],
									[
										137539,
										137541
									],
									[
										137621,
										137623
									],
									[
										137825,
										137827
									],
									[
										138038,
										138040
									],
									[
										138276,
										138278
									],
									[
										138634,
										138636
									],
									[
										138842,
										138844
									],
									[
										138911,
										138913
									],
									[
										139142,
										139144
									],
									[
										139437,
										139439
									],
									[
										139506,
										139508
									],
									[
										139787,
										139789
									],
									[
										140034,
										140036
									],
									[
										140256,
										140258
									],
									[
										140518,
										140520
									],
									[
										140716,
										140718
									],
									[
										140913,
										140915
									],
									[
										141156,
										141158
									],
									[
										141336,
										141338
									],
									[
										141630,
										141632
									],
									[
										141699,
										141701
									],
									[
										141930,
										141932
									],
									[
										142237,
										142239
									],
									[
										142306,
										142308
									],
									[
										142561,
										142563
									],
									[
										142736,
										142738
									],
									[
										143089,
										143091
									],
									[
										143308,
										143310
									],
									[
										143540,
										143542
									],
									[
										143773,
										143775
									],
									[
										144038,
										144040
									],
									[
										144273,
										144275
									],
									[
										144505,
										144507
									],
									[
										144738,
										144740
									],
									[
										145016,
										145018
									],
									[
										145212,
										145214
									],
									[
										145529,
										145531
									],
									[
										145598,
										145600
									],
									[
										146577,
										146579
									],
									[
										146767,
										146769
									],
									[
										146995,
										146997
									],
									[
										147250,
										147252
									],
									[
										147438,
										147440
									],
									[
										147636,
										147638
									],
									[
										147833,
										147835
									],
									[
										148070,
										148072
									],
									[
										148250,
										148252
									],
									[
										148554,
										148556
									],
									[
										148623,
										148625
									],
									[
										149602,
										149604
									],
									[
										149792,
										149794
									],
									[
										150020,
										150022
									],
									[
										150275,
										150277
									],
									[
										150463,
										150465
									],
									[
										150661,
										150663
									],
									[
										150858,
										150860
									],
									[
										151097,
										151099
									],
									[
										151277,
										151279
									],
									[
										151587,
										151589
									],
									[
										151656,
										151658
									],
									[
										152303,
										152305
									],
									[
										152620,
										152622
									],
									[
										152810,
										152812
									],
									[
										153038,
										153040
									],
									[
										153293,
										153295
									],
									[
										153481,
										153483
									],
									[
										153679,
										153681
									],
									[
										153876,
										153878
									],
									[
										154115,
										154117
									],
									[
										154306,
										154308
									],
									[
										154504,
										154506
									],
									[
										154701,
										154703
									],
									[
										154940,
										154942
									],
									[
										155120,
										155122
									],
									[
										155423,
										155425
									],
									[
										155492,
										155494
									],
									[
										156139,
										156141
									],
									[
										156456,
										156458
									],
									[
										156646,
										156648
									],
									[
										156874,
										156876
									],
									[
										157129,
										157131
									],
									[
										157317,
										157319
									],
									[
										157515,
										157517
									],
									[
										157712,
										157714
									],
									[
										157951,
										157953
									],
									[
										158131,
										158133
									],
									[
										158447,
										158449
									],
									[
										158516,
										158518
									],
									[
										158771,
										158773
									],
									[
										158946,
										158948
									],
									[
										159299,
										159301
									],
									[
										159518,
										159520
									],
									[
										159750,
										159752
									],
									[
										159983,
										159985
									],
									[
										160248,
										160250
									],
									[
										160483,
										160485
									],
									[
										160715,
										160717
									],
									[
										160948,
										160950
									],
									[
										161226,
										161228
									],
									[
										161422,
										161424
									],
									[
										161727,
										161729
									],
									[
										161796,
										161798
									],
									[
										162775,
										162777
									],
									[
										162965,
										162967
									],
									[
										163185,
										163187
									],
									[
										163421,
										163423
									],
									[
										163617,
										163619
									],
									[
										163865,
										163867
									],
									[
										164017,
										164019
									],
									[
										164170,
										164172
									],
									[
										164372,
										164374
									],
									[
										164536,
										164538
									],
									[
										164841,
										164843
									],
									[
										164910,
										164912
									],
									[
										165889,
										165891
									],
									[
										166079,
										166081
									],
									[
										166299,
										166301
									],
									[
										166535,
										166537
									],
									[
										166731,
										166733
									],
									[
										166985,
										166987
									],
									[
										167137,
										167139
									],
									[
										167290,
										167292
									],
									[
										167492,
										167494
									],
									[
										167656,
										167658
									],
									[
										167961,
										167963
									],
									[
										168030,
										168032
									],
									[
										168299,
										168301
									],
									[
										168535,
										168537
									],
									[
										168731,
										168733
									],
									[
										168870,
										168872
									],
									[
										169024,
										169026
									],
									[
										169177,
										169179
									],
									[
										169377,
										169379
									],
									[
										169532,
										169534
									],
									[
										169684,
										169686
									],
									[
										169837,
										169839
									],
									[
										170048,
										170050
									],
									[
										170212,
										170214
									],
									[
										170505,
										170507
									],
									[
										170574,
										170576
									],
									[
										170795,
										170797
									],
									[
										171048,
										171050
									],
									[
										171117,
										171119
									],
									[
										171338,
										171340
									],
									[
										171710,
										171713
									],
									[
										171965,
										171968
									],
									[
										172310,
										172313
									],
									[
										172564,
										172567
									],
									[
										172823,
										172826
									],
									[
										173046,
										173049
									],
									[
										173350,
										173353
									],
									[
										173502,
										173505
									],
									[
										173877,
										173892
									],
									[
										174194,
										174201
									],
									[
										174297,
										174304
									],
									[
										174307,
										174314
									],
									[
										174522,
										174529
									],
									[
										174654,
										174661
									],
									[
										174844,
										174851
									],
									[
										174861,
										174868
									],
									[
										175230,
										175237
									],
									[
										175469,
										175476
									],
									[
										175698,
										175705
									],
									[
										175966,
										175973
									],
									[
										176282,
										176289
									],
									[
										176328,
										176335
									],
									[
										176563,
										176570
									],
									[
										176650,
										176657
									],
									[
										176740,
										176747
									],
									[
										176864,
										176871
									],
									[
										177034,
										177041
									],
									[
										177278,
										177285
									],
									[
										177636,
										177643
									],
									[
										177648,
										177655
									],
									[
										177743,
										177750
									],
									[
										177912,
										177919
									],
									[
										177921,
										177928
									],
									[
										178127,
										178134
									],
									[
										178155,
										178162
									],
									[
										178463,
										178470
									],
									[
										178478,
										178485
									],
									[
										178836,
										178843
									],
									[
										178944,
										178951
									],
									[
										179113,
										179120
									],
									[
										179122,
										179129
									],
									[
										179328,
										179335
									],
									[
										179356,
										179363
									],
									[
										179664,
										179671
									],
									[
										179679,
										179686
									],
									[
										180036,
										180043
									],
									[
										180144,
										180151
									],
									[
										180313,
										180320
									],
									[
										180322,
										180329
									],
									[
										180528,
										180535
									],
									[
										180556,
										180563
									],
									[
										180864,
										180871
									],
									[
										180879,
										180886
									],
									[
										181249,
										181256
									],
									[
										181355,
										181362
									],
									[
										181524,
										181531
									],
									[
										181533,
										181540
									],
									[
										181739,
										181746
									],
									[
										181767,
										181774
									],
									[
										182075,
										182082
									],
									[
										182090,
										182097
									],
									[
										182470,
										182477
									],
									[
										182482,
										182489
									],
									[
										182577,
										182584
									],
									[
										182746,
										182753
									],
									[
										182755,
										182762
									],
									[
										182961,
										182968
									],
									[
										182989,
										182996
									],
									[
										183297,
										183304
									],
									[
										183312,
										183319
									],
									[
										183679,
										183686
									],
									[
										183691,
										183698
									],
									[
										183786,
										183793
									],
									[
										183955,
										183962
									],
									[
										183964,
										183971
									],
									[
										184170,
										184177
									],
									[
										184198,
										184205
									],
									[
										184506,
										184513
									],
									[
										184521,
										184528
									],
									[
										184894,
										184901
									],
									[
										184906,
										184913
									],
									[
										185001,
										185008
									],
									[
										185170,
										185177
									],
									[
										185179,
										185186
									],
									[
										185385,
										185392
									],
									[
										185413,
										185420
									],
									[
										185721,
										185728
									],
									[
										185736,
										185743
									],
									[
										186102,
										186109
									],
									[
										186114,
										186121
									],
									[
										186209,
										186216
									],
									[
										186378,
										186385
									],
									[
										186387,
										186394
									],
									[
										186593,
										186600
									],
									[
										186621,
										186628
									],
									[
										186929,
										186936
									],
									[
										186944,
										186951
									],
									[
										187323,
										187330
									],
									[
										187335,
										187342
									],
									[
										187430,
										187437
									],
									[
										187599,
										187606
									],
									[
										187608,
										187615
									],
									[
										187814,
										187821
									],
									[
										187842,
										187849
									],
									[
										188150,
										188157
									],
									[
										188165,
										188172
									],
									[
										188533,
										188540
									],
									[
										188545,
										188552
									],
									[
										188640,
										188647
									],
									[
										188809,
										188816
									],
									[
										188818,
										188825
									],
									[
										189024,
										189031
									],
									[
										189052,
										189059
									],
									[
										189360,
										189367
									],
									[
										189375,
										189382
									],
									[
										189743,
										189750
									],
									[
										189755,
										189762
									],
									[
										189850,
										189857
									],
									[
										190019,
										190026
									],
									[
										190028,
										190035
									],
									[
										190234,
										190241
									],
									[
										190262,
										190269
									],
									[
										190570,
										190577
									],
									[
										190585,
										190592
									],
									[
										190953,
										190960
									],
									[
										190965,
										190972
									],
									[
										191060,
										191067
									],
									[
										191229,
										191236
									],
									[
										191238,
										191245
									],
									[
										191444,
										191451
									],
									[
										191472,
										191479
									],
									[
										191780,
										191787
									],
									[
										191795,
										191802
									],
									[
										192151,
										192158
									],
									[
										192247,
										192254
									],
									[
										192339,
										192346
									],
									[
										192380,
										192387
									],
									[
										192500,
										192507
									],
									[
										192509,
										192516
									],
									[
										192715,
										192722
									],
									[
										192743,
										192750
									],
									[
										193051,
										193058
									],
									[
										193066,
										193073
									],
									[
										193418,
										193425
									],
									[
										193510,
										193517
									],
									[
										193602,
										193609
									],
									[
										193643,
										193650
									],
									[
										193763,
										193770
									],
									[
										193772,
										193779
									],
									[
										193978,
										193985
									],
									[
										194006,
										194013
									],
									[
										194314,
										194321
									],
									[
										194329,
										194336
									],
									[
										194668,
										194682
									],
									[
										194862,
										194876
									],
									[
										195051,
										195065
									],
									[
										195282,
										195296
									],
									[
										195627,
										195641
									],
									[
										196018,
										196032
									],
									[
										196212,
										196226
									],
									[
										196401,
										196415
									],
									[
										196632,
										196646
									],
									[
										196977,
										196991
									],
									[
										197366,
										197378
									],
									[
										197416,
										197428
									],
									[
										197768,
										197780
									],
									[
										198010,
										198022
									],
									[
										198331,
										198343
									],
									[
										198454,
										198466
									],
									[
										198643,
										198655
									],
									[
										198780,
										198792
									],
									[
										198856,
										198868
									],
									[
										199006,
										199018
									],
									[
										199082,
										199094
									],
									[
										199261,
										199273
									],
									[
										199504,
										199516
									],
									[
										199667,
										199679
									],
									[
										199829,
										199841
									],
									[
										199909,
										199921
									],
									[
										200095,
										200107
									],
									[
										200115,
										200127
									],
									[
										200170,
										200182
									],
									[
										200197,
										200209
									],
									[
										200372,
										200384
									],
									[
										200567,
										200579
									],
									[
										200836,
										200848
									],
									[
										201158,
										201170
									],
									[
										201254,
										201266
									],
									[
										201336,
										201348
									],
									[
										201635,
										201647
									],
									[
										201731,
										201743
									],
									[
										201813,
										201825
									],
									[
										202111,
										202123
									],
									[
										202207,
										202219
									],
									[
										202289,
										202301
									],
									[
										202600,
										202612
									],
									[
										202696,
										202708
									],
									[
										202778,
										202790
									],
									[
										203099,
										203111
									],
									[
										203195,
										203207
									],
									[
										203277,
										203289
									],
									[
										203585,
										203597
									],
									[
										203681,
										203693
									],
									[
										203763,
										203775
									],
									[
										204077,
										204089
									],
									[
										204173,
										204185
									],
									[
										204255,
										204267
									],
									[
										204562,
										204574
									],
									[
										204658,
										204670
									],
									[
										204740,
										204752
									],
									[
										205060,
										205072
									],
									[
										205156,
										205168
									],
									[
										205238,
										205250
									],
									[
										205547,
										205559
									],
									[
										205643,
										205655
									],
									[
										205725,
										205737
									],
									[
										206034,
										206046
									],
									[
										206130,
										206142
									],
									[
										206212,
										206224
									],
									[
										206521,
										206533
									],
									[
										206617,
										206629
									],
									[
										206699,
										206711
									],
									[
										206996,
										207008
									],
									[
										207092,
										207104
									],
									[
										207174,
										207186
									],
									[
										207467,
										207479
									],
									[
										207563,
										207575
									],
									[
										207645,
										207657
									],
									[
										208084,
										208090
									],
									[
										208369,
										208375
									],
									[
										208382,
										208388
									],
									[
										208648,
										208654
									],
									[
										209080,
										209086
									],
									[
										209143,
										209149
									],
									[
										209540,
										209546
									],
									[
										209781,
										209787
									],
									[
										209830,
										209836
									],
									[
										210176,
										210182
									],
									[
										210265,
										210271
									],
									[
										210573,
										210579
									],
									[
										210694,
										210700
									],
									[
										210842,
										210848
									],
									[
										210870,
										210876
									],
									[
										210916,
										210922
									],
									[
										211121,
										211127
									],
									[
										211168,
										211174
									],
									[
										211186,
										211192
									],
									[
										211312,
										211318
									],
									[
										211672,
										211678
									],
									[
										211957,
										211963
									],
									[
										211970,
										211976
									],
									[
										212236,
										212242
									],
									[
										212668,
										212674
									],
									[
										212731,
										212737
									],
									[
										213128,
										213134
									],
									[
										213369,
										213375
									],
									[
										213418,
										213424
									],
									[
										213764,
										213770
									],
									[
										213853,
										213859
									],
									[
										214161,
										214167
									],
									[
										214282,
										214288
									],
									[
										214430,
										214436
									],
									[
										214458,
										214464
									],
									[
										214504,
										214510
									],
									[
										214709,
										214715
									],
									[
										214756,
										214762
									],
									[
										214774,
										214780
									],
									[
										214900,
										214906
									],
									[
										215259,
										215268
									],
									[
										215502,
										215511
									],
									[
										215702,
										215711
									],
									[
										215964,
										215973
									],
									[
										216171,
										216180
									],
									[
										216511,
										216520
									],
									[
										216912,
										216926
									],
									[
										217256,
										217270
									],
									[
										217590,
										217605
									],
									[
										217890,
										217905
									],
									[
										217954,
										217969
									],
									[
										218023,
										218038
									],
									[
										218180,
										218195
									],
									[
										218547,
										218581
									],
									[
										218850,
										218884
									],
									[
										219112,
										219146
									],
									[
										219351,
										219385
									],
									[
										219526,
										219560
									],
									[
										219707,
										219741
									],
									[
										220067,
										220071
									],
									[
										220472,
										220476
									],
									[
										220542,
										220546
									],
									[
										220835,
										220839
									],
									[
										221169,
										221173
									],
									[
										221416,
										221420
									],
									[
										221790,
										221794
									],
									[
										222045,
										222049
									],
									[
										222347,
										222351
									],
									[
										222571,
										222575
									],
									[
										222907,
										222948
									],
									[
										223314,
										223355
									],
									[
										223692,
										223733
									],
									[
										223994,
										224035
									],
									[
										224241,
										224282
									],
									[
										224491,
										224532
									],
									[
										224764,
										224805
									],
									[
										224969,
										225010
									],
									[
										225240,
										225281
									],
									[
										225490,
										225531
									],
									[
										225763,
										225804
									],
									[
										225968,
										226009
									],
									[
										226239,
										226280
									],
									[
										226489,
										226530
									],
									[
										226762,
										226803
									],
									[
										226967,
										227008
									],
									[
										227237,
										227278
									],
									[
										227487,
										227528
									],
									[
										227760,
										227801
									],
									[
										227965,
										228006
									],
									[
										228248,
										228289
									],
									[
										228498,
										228539
									],
									[
										228771,
										228812
									],
									[
										228976,
										229017
									],
									[
										229269,
										229310
									],
									[
										229519,
										229560
									],
									[
										229792,
										229833
									],
									[
										229997,
										230038
									],
									[
										230277,
										230318
									],
									[
										230527,
										230568
									],
									[
										230800,
										230841
									],
									[
										231005,
										231046
									],
									[
										231291,
										231332
									],
									[
										231541,
										231582
									],
									[
										231814,
										231855
									],
									[
										232019,
										232060
									],
									[
										232298,
										232339
									],
									[
										232548,
										232589
									],
									[
										232821,
										232862
									],
									[
										233026,
										233067
									],
									[
										233318,
										233359
									],
									[
										233568,
										233609
									],
									[
										233841,
										233882
									],
									[
										234046,
										234087
									],
									[
										234327,
										234368
									],
									[
										234577,
										234618
									],
									[
										234839,
										234880
									],
									[
										235044,
										235085
									],
									[
										235325,
										235366
									],
									[
										235575,
										235616
									],
									[
										235837,
										235878
									],
									[
										236042,
										236083
									],
									[
										236311,
										236352
									],
									[
										236629,
										236670
									],
									[
										237129,
										237140
									],
									[
										237526,
										237537
									],
									[
										237861,
										237872
									],
									[
										238161,
										238172
									],
									[
										238557,
										238568
									],
									[
										238665,
										238676
									],
									[
										238959,
										238970
									],
									[
										239285,
										239296
									],
									[
										239400,
										239411
									],
									[
										239511,
										239522
									],
									[
										239993,
										240004
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								239997,
								239997
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 13,
								"count": 9251,
								"modified": false,
								"selection": true,
								"status": -1,
								"syntax": "find results"
							},
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 37,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 89318.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "public/mkturk_ScreenDisplayer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17435,
						"regions":
						{
						},
						"selection":
						[
							[
								2766,
								2766
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 806.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "public/landing_pages/inlab/Zico_landing_page.html",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 2999,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 0,
								"count": 117,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "public/mkturk_ActionPoller.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9919,
						"regions":
						{
						},
						"selection":
						[
							[
								8466,
								8483
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3436.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "public/mkturk_bluetooth.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10830,
						"regions":
						{
						},
						"selection":
						[
							[
								7608,
								7608
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2566.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "public/mkturk_SessionBootStrapper.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7799,
						"regions":
						{
						},
						"selection":
						[
							[
								1499,
								1499
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "public/mkturk_utils.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10766,
						"regions":
						{
						},
						"selection":
						[
							[
								6577,
								7063
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5420.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "public/mkturk_TaskStreamer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7302,
						"regions":
						{
						},
						"selection":
						[
							[
								1761,
								1761
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "public/landing_pages/landing_page_template_dynamic.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7191,
						"regions":
						{
						},
						"selection":
						[
							[
								768,
								768
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 1253,
								"count": 128,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "public/mkturk_TrialGenerator.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12772,
						"regions":
						{
						},
						"selection":
						[
							[
								384,
								384
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "public/mkturk_Playspace.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21518,
						"regions":
						{
						},
						"selection":
						[
							[
								5442,
								5476
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1660.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "public/landing_pages/examples/landingPage_MechanicalTurk_MTS_choicespace.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8869,
						"regions":
						{
						},
						"selection":
						[
							[
								4793,
								4793
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1173.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "public/setup_upstairs_session.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3216,
						"regions":
						{
						},
						"selection":
						[
							[
								1382,
								1382
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 412.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "public/mkturk_style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6440,
						"regions":
						{
						},
						"selection":
						[
							[
								457,
								457
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "css"
							},
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "public/setup_MechanicalTurk_session.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3871,
						"regions":
						{
						},
						"selection":
						[
							[
								900,
								976
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 37.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ptap.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 404.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 359.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
